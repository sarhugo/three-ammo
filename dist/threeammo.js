!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/examples/",n(n.s=4)}([function(t,e,n){"use strict";n.r(e),n.d(e,"ACESFilmicToneMapping",(function(){return nt})),n.d(e,"AddEquation",(function(){return T})),n.d(e,"AddOperation",(function(){return Q})),n.d(e,"AdditiveAnimationBlendMode",(function(){return Ye})),n.d(e,"AdditiveBlending",(function(){return x})),n.d(e,"AlphaFormat",(function(){return Nt})),n.d(e,"AlwaysDepth",(function(){return j})),n.d(e,"AlwaysStencilFunc",(function(){return Tn})),n.d(e,"AmbientLight",(function(){return Bp})),n.d(e,"AmbientLightProbe",(function(){return ih})),n.d(e,"AnimationClip",(function(){return Nu})),n.d(e,"AnimationLoader",(function(){return Wu})),n.d(e,"AnimationMixer",(function(){return Ih})),n.d(e,"AnimationObjectGroup",(function(){return Ph})),n.d(e,"AnimationUtils",(function(){return Su})),n.d(e,"ArcCurve",(function(){return $u})),n.d(e,"ArrayCamera",(function(){return Qa})),n.d(e,"ArrowHelper",(function(){return Md})),n.d(e,"Audio",(function(){return fh})),n.d(e,"AudioAnalyser",(function(){return xh})),n.d(e,"AudioContext",(function(){return eh})),n.d(e,"AudioListener",(function(){return mh})),n.d(e,"AudioLoader",(function(){return nh})),n.d(e,"AxesHelper",(function(){return Sd})),n.d(e,"AxisHelper",(function(){return Mm})),n.d(e,"BackSide",(function(){return f})),n.d(e,"BasicDepthPacking",(function(){return on})),n.d(e,"BasicShadowMap",(function(){return u})),n.d(e,"BinaryTextureLoader",(function(){return Cm})),n.d(e,"Bone",(function(){return Bl})),n.d(e,"BooleanKeyframeTrack",(function(){return zu})),n.d(e,"BoundingBoxHelper",(function(){return Sm})),n.d(e,"Box2",(function(){return kh})),n.d(e,"Box3",(function(){return ur})),n.d(e,"Box3Helper",(function(){return yd})),n.d(e,"BoxBufferGeometry",(function(){return Cs})),n.d(e,"BoxGeometry",(function(){return Cs})),n.d(e,"BoxHelper",(function(){return _d})),n.d(e,"BufferAttribute",(function(){return Ui})),n.d(e,"BufferGeometry",(function(){return ls})),n.d(e,"BufferGeometryLoader",(function(){return kp})),n.d(e,"ByteType",(function(){return Et})),n.d(e,"Cache",(function(){return Hu})),n.d(e,"Camera",(function(){return Ds})),n.d(e,"CameraHelper",(function(){return md})),n.d(e,"CanvasRenderer",(function(){return zm})),n.d(e,"CanvasTexture",(function(){return pc})),n.d(e,"CatmullRomCurve3",(function(){return sp})),n.d(e,"CineonToneMapping",(function(){return et})),n.d(e,"CircleBufferGeometry",(function(){return dc})),n.d(e,"CircleGeometry",(function(){return dc})),n.d(e,"ClampToEdgeWrapping",(function(){return dt})),n.d(e,"Clock",(function(){return lh})),n.d(e,"Color",(function(){return Ni})),n.d(e,"ColorKeyframeTrack",(function(){return Ru})),n.d(e,"CompressedTexture",(function(){return uc})),n.d(e,"CompressedTextureLoader",(function(){return qu})),n.d(e,"ConeBufferGeometry",(function(){return fc})),n.d(e,"ConeGeometry",(function(){return fc})),n.d(e,"CubeCamera",(function(){return Os})),n.d(e,"CubeReflectionMapping",(function(){return ot})),n.d(e,"CubeRefractionMapping",(function(){return at})),n.d(e,"CubeTexture",(function(){return Bs})),n.d(e,"CubeTextureLoader",(function(){return Xu})),n.d(e,"CubeUVReflectionMapping",(function(){return ut})),n.d(e,"CubeUVRefractionMapping",(function(){return pt})),n.d(e,"CubicBezierCurve",(function(){return cp})),n.d(e,"CubicBezierCurve3",(function(){return up})),n.d(e,"CubicInterpolant",(function(){return Eu})),n.d(e,"CullFaceBack",(function(){return a})),n.d(e,"CullFaceFront",(function(){return l})),n.d(e,"CullFaceFrontBack",(function(){return c})),n.d(e,"CullFaceNone",(function(){return o})),n.d(e,"Curve",(function(){return Qu})),n.d(e,"CurvePath",(function(){return _p})),n.d(e,"CustomBlending",(function(){return S})),n.d(e,"CustomToneMapping",(function(){return rt})),n.d(e,"CylinderBufferGeometry",(function(){return mc})),n.d(e,"CylinderGeometry",(function(){return mc})),n.d(e,"Cylindrical",(function(){return jh})),n.d(e,"DataTexture",(function(){return Fs})),n.d(e,"DataTexture2DArray",(function(){return lo})),n.d(e,"DataTexture3D",(function(){return co})),n.d(e,"DataTextureLoader",(function(){return Ju})),n.d(e,"DataUtils",(function(){return Ad})),n.d(e,"DecrementStencilOp",(function(){return mn})),n.d(e,"DecrementWrapStencilOp",(function(){return gn})),n.d(e,"DefaultLoadingManager",(function(){return Uu})),n.d(e,"DepthFormat",(function(){return Vt})),n.d(e,"DepthStencilFormat",(function(){return kt})),n.d(e,"DepthTexture",(function(){return hc})),n.d(e,"DirectionalLight",(function(){return Op})),n.d(e,"DirectionalLightHelper",(function(){return pd})),n.d(e,"DiscreteInterpolant",(function(){return Cu})),n.d(e,"DodecahedronBufferGeometry",(function(){return _c})),n.d(e,"DodecahedronGeometry",(function(){return _c})),n.d(e,"DoubleSide",(function(){return g})),n.d(e,"DstAlphaFactor",(function(){return B})),n.d(e,"DstColorFactor",(function(){return F})),n.d(e,"DynamicBufferAttribute",(function(){return dm})),n.d(e,"DynamicCopyUsage",(function(){return Dn})),n.d(e,"DynamicDrawUsage",(function(){return An})),n.d(e,"DynamicReadUsage",(function(){return zn})),n.d(e,"EdgesGeometry",(function(){return wc})),n.d(e,"EdgesHelper",(function(){return Tm})),n.d(e,"EllipseCurve",(function(){return Ku})),n.d(e,"EqualDepth",(function(){return W})),n.d(e,"EqualStencilFunc",(function(){return bn})),n.d(e,"EquirectangularReflectionMapping",(function(){return lt})),n.d(e,"EquirectangularRefractionMapping",(function(){return ct})),n.d(e,"Euler",(function(){return Xr})),n.d(e,"EventDispatcher",(function(){return Nn})),n.d(e,"ExtrudeBufferGeometry",(function(){return Qc})),n.d(e,"ExtrudeGeometry",(function(){return Qc})),n.d(e,"FaceColors",(function(){return nm})),n.d(e,"FileLoader",(function(){return ku})),n.d(e,"FlatShading",(function(){return _})),n.d(e,"Float16BufferAttribute",(function(){return Ji})),n.d(e,"Float32Attribute",(function(){return xm})),n.d(e,"Float32BufferAttribute",(function(){return Zi})),n.d(e,"Float64Attribute",(function(){return wm})),n.d(e,"Float64BufferAttribute",(function(){return Qi})),n.d(e,"FloatType",(function(){return Rt})),n.d(e,"Fog",(function(){return ol})),n.d(e,"FogExp2",(function(){return sl})),n.d(e,"Font",(function(){return Qp})),n.d(e,"FontLoader",(function(){return $p})),n.d(e,"FrontSide",(function(){return m})),n.d(e,"Frustum",(function(){return Us})),n.d(e,"GLBufferAttribute",(function(){return Nh})),n.d(e,"GLSL1",(function(){return On})),n.d(e,"GLSL3",(function(){return Bn})),n.d(e,"GammaEncoding",(function(){return $e})),n.d(e,"GreaterDepth",(function(){return Y})),n.d(e,"GreaterEqualDepth",(function(){return q})),n.d(e,"GreaterEqualStencilFunc",(function(){return Sn})),n.d(e,"GreaterStencilFunc",(function(){return wn})),n.d(e,"GridHelper",(function(){return od})),n.d(e,"Group",(function(){return Ka})),n.d(e,"HalfFloatType",(function(){return Pt})),n.d(e,"HemisphereLight",(function(){return xp})),n.d(e,"HemisphereLightHelper",(function(){return sd})),n.d(e,"HemisphereLightProbe",(function(){return rh})),n.d(e,"IcosahedronBufferGeometry",(function(){return $c})),n.d(e,"IcosahedronGeometry",(function(){return $c})),n.d(e,"ImageBitmapLoader",(function(){return Jp})),n.d(e,"ImageLoader",(function(){return Yu})),n.d(e,"ImageUtils",(function(){return $n})),n.d(e,"ImmediateRenderObject",(function(){return Xh})),n.d(e,"IncrementStencilOp",(function(){return dn})),n.d(e,"IncrementWrapStencilOp",(function(){return fn})),n.d(e,"InstancedBufferAttribute",(function(){return Vp})),n.d(e,"InstancedBufferGeometry",(function(){return jp})),n.d(e,"InstancedInterleavedBuffer",(function(){return Bh})),n.d(e,"InstancedMesh",(function(){return kl})),n.d(e,"Int16Attribute",(function(){return _m})),n.d(e,"Int16BufferAttribute",(function(){return Wi})),n.d(e,"Int32Attribute",(function(){return vm})),n.d(e,"Int32BufferAttribute",(function(){return Yi})),n.d(e,"Int8Attribute",(function(){return mm})),n.d(e,"Int8BufferAttribute",(function(){return ji})),n.d(e,"IntType",(function(){return Lt})),n.d(e,"InterleavedBuffer",(function(){return ll})),n.d(e,"InterleavedBufferAttribute",(function(){return ul})),n.d(e,"Interpolant",(function(){return Tu})),n.d(e,"InterpolateDiscrete",(function(){return Ge})),n.d(e,"InterpolateLinear",(function(){return Ue})),n.d(e,"InterpolateSmooth",(function(){return je})),n.d(e,"InvertStencilOp",(function(){return _n})),n.d(e,"JSONLoader",(function(){return Rm})),n.d(e,"KeepStencilOp",(function(){return pn})),n.d(e,"KeyframeTrack",(function(){return Lu})),n.d(e,"LOD",(function(){return Ll})),n.d(e,"LUTToneMapping",(function(){return it})),n.d(e,"LatheBufferGeometry",(function(){return tu})),n.d(e,"LatheGeometry",(function(){return tu})),n.d(e,"Layers",(function(){return Jr})),n.d(e,"LensFlare",(function(){return Dm})),n.d(e,"LessDepth",(function(){return V})),n.d(e,"LessEqualDepth",(function(){return k})),n.d(e,"LessEqualStencilFunc",(function(){return xn})),n.d(e,"LessStencilFunc",(function(){return vn})),n.d(e,"Light",(function(){return bp})),n.d(e,"LightProbe",(function(){return Hp})),n.d(e,"Line",(function(){return Ql})),n.d(e,"Line3",(function(){return Yh})),n.d(e,"LineBasicMaterial",(function(){return Wl})),n.d(e,"LineCurve",(function(){return pp})),n.d(e,"LineCurve3",(function(){return hp})),n.d(e,"LineDashedMaterial",(function(){return wu})),n.d(e,"LineLoop",(function(){return ec})),n.d(e,"LinePieces",(function(){return tm})),n.d(e,"LineSegments",(function(){return tc})),n.d(e,"LineStrip",(function(){return $d})),n.d(e,"LinearEncoding",(function(){return Qe})),n.d(e,"LinearFilter",(function(){return bt})),n.d(e,"LinearInterpolant",(function(){return Au})),n.d(e,"LinearMipMapLinearFilter",(function(){return St})),n.d(e,"LinearMipMapNearestFilter",(function(){return wt})),n.d(e,"LinearMipmapLinearFilter",(function(){return Mt})),n.d(e,"LinearMipmapNearestFilter",(function(){return xt})),n.d(e,"LinearToneMapping",(function(){return $})),n.d(e,"Loader",(function(){return ju})),n.d(e,"LoaderUtils",(function(){return Up})),n.d(e,"LoadingManager",(function(){return Gu})),n.d(e,"LogLuvEncoding",(function(){return en})),n.d(e,"LoopOnce",(function(){return Ne})),n.d(e,"LoopPingPong",(function(){return He})),n.d(e,"LoopRepeat",(function(){return Fe})),n.d(e,"LuminanceAlphaFormat",(function(){return Ut})),n.d(e,"LuminanceFormat",(function(){return Gt})),n.d(e,"MOUSE",(function(){return i})),n.d(e,"Material",(function(){return zi})),n.d(e,"MaterialLoader",(function(){return Gp})),n.d(e,"Math",(function(){return Jn})),n.d(e,"MathUtils",(function(){return Jn})),n.d(e,"Matrix3",(function(){return Qn})),n.d(e,"Matrix4",(function(){return Fr})),n.d(e,"MaxEquation",(function(){return L})),n.d(e,"Mesh",(function(){return Es})),n.d(e,"MeshBasicMaterial",(function(){return Fi})),n.d(e,"MeshDepthMaterial",(function(){return Wa})),n.d(e,"MeshDistanceMaterial",(function(){return qa})),n.d(e,"MeshFaceMaterial",(function(){return im})),n.d(e,"MeshLambertMaterial",(function(){return bu})),n.d(e,"MeshMatcapMaterial",(function(){return xu})),n.d(e,"MeshNormalMaterial",(function(){return vu})),n.d(e,"MeshPhongMaterial",(function(){return _u})),n.d(e,"MeshPhysicalMaterial",(function(){return gu})),n.d(e,"MeshStandardMaterial",(function(){return fu})),n.d(e,"MeshToonMaterial",(function(){return yu})),n.d(e,"MinEquation",(function(){return C})),n.d(e,"MirroredRepeatWrapping",(function(){return mt})),n.d(e,"MixOperation",(function(){return Z})),n.d(e,"MultiMaterial",(function(){return sm})),n.d(e,"MultiplyBlending",(function(){return M})),n.d(e,"MultiplyOperation",(function(){return J})),n.d(e,"NearestFilter",(function(){return ft})),n.d(e,"NearestMipMapLinearFilter",(function(){return vt})),n.d(e,"NearestMipMapNearestFilter",(function(){return _t})),n.d(e,"NearestMipmapLinearFilter",(function(){return yt})),n.d(e,"NearestMipmapNearestFilter",(function(){return gt})),n.d(e,"NeverDepth",(function(){return U})),n.d(e,"NeverStencilFunc",(function(){return yn})),n.d(e,"NoBlending",(function(){return v})),n.d(e,"NoColors",(function(){return em})),n.d(e,"NoToneMapping",(function(){return K})),n.d(e,"NormalAnimationBlendMode",(function(){return qe})),n.d(e,"NormalBlending",(function(){return b})),n.d(e,"NotEqualDepth",(function(){return X})),n.d(e,"NotEqualStencilFunc",(function(){return Mn})),n.d(e,"NumberKeyframeTrack",(function(){return Pu})),n.d(e,"Object3D",(function(){return di})),n.d(e,"ObjectLoader",(function(){return Wp})),n.d(e,"ObjectSpaceNormalMap",(function(){return cn})),n.d(e,"OctahedronBufferGeometry",(function(){return eu})),n.d(e,"OctahedronGeometry",(function(){return eu})),n.d(e,"OneFactor",(function(){return R})),n.d(e,"OneMinusDstAlphaFactor",(function(){return N})),n.d(e,"OneMinusDstColorFactor",(function(){return H})),n.d(e,"OneMinusSrcAlphaFactor",(function(){return O})),n.d(e,"OneMinusSrcColorFactor",(function(){return D})),n.d(e,"OrthographicCamera",(function(){return Dp})),n.d(e,"PCFShadowMap",(function(){return p})),n.d(e,"PCFSoftShadowMap",(function(){return h})),n.d(e,"PMREMGenerator",(function(){return kd})),n.d(e,"ParametricBufferGeometry",(function(){return nu})),n.d(e,"ParametricGeometry",(function(){return nu})),n.d(e,"Particle",(function(){return am})),n.d(e,"ParticleBasicMaterial",(function(){return um})),n.d(e,"ParticleSystem",(function(){return lm})),n.d(e,"ParticleSystemMaterial",(function(){return pm})),n.d(e,"Path",(function(){return yp})),n.d(e,"PerspectiveCamera",(function(){return Is})),n.d(e,"Plane",(function(){return _i})),n.d(e,"PlaneBufferGeometry",(function(){return ks})),n.d(e,"PlaneGeometry",(function(){return ks})),n.d(e,"PlaneHelper",(function(){return vd})),n.d(e,"PointCloud",(function(){return om})),n.d(e,"PointCloudMaterial",(function(){return cm})),n.d(e,"PointLight",(function(){return Pp})),n.d(e,"PointLightHelper",(function(){return ed})),n.d(e,"Points",(function(){return ac})),n.d(e,"PointsMaterial",(function(){return nc})),n.d(e,"PolarGridHelper",(function(){return ad})),n.d(e,"PolyhedronBufferGeometry",(function(){return gc})),n.d(e,"PolyhedronGeometry",(function(){return gc})),n.d(e,"PositionalAudio",(function(){return bh})),n.d(e,"PropertyBinding",(function(){return Rh})),n.d(e,"PropertyMixer",(function(){return wh})),n.d(e,"QuadraticBezierCurve",(function(){return dp})),n.d(e,"QuadraticBezierCurve3",(function(){return mp})),n.d(e,"Quaternion",(function(){return or})),n.d(e,"QuaternionKeyframeTrack",(function(){return Iu})),n.d(e,"QuaternionLinearInterpolant",(function(){return Du})),n.d(e,"REVISION",(function(){return r})),n.d(e,"RGBADepthPacking",(function(){return an})),n.d(e,"RGBAFormat",(function(){return Ht})),n.d(e,"RGBAIntegerFormat",(function(){return Zt})),n.d(e,"RGBA_ASTC_10x10_Format",(function(){return ve})),n.d(e,"RGBA_ASTC_10x5_Format",(function(){return ge})),n.d(e,"RGBA_ASTC_10x6_Format",(function(){return _e})),n.d(e,"RGBA_ASTC_10x8_Format",(function(){return ye})),n.d(e,"RGBA_ASTC_12x10_Format",(function(){return be})),n.d(e,"RGBA_ASTC_12x12_Format",(function(){return xe})),n.d(e,"RGBA_ASTC_4x4_Format",(function(){return le})),n.d(e,"RGBA_ASTC_5x4_Format",(function(){return ce})),n.d(e,"RGBA_ASTC_5x5_Format",(function(){return ue})),n.d(e,"RGBA_ASTC_6x5_Format",(function(){return pe})),n.d(e,"RGBA_ASTC_6x6_Format",(function(){return he})),n.d(e,"RGBA_ASTC_8x5_Format",(function(){return de})),n.d(e,"RGBA_ASTC_8x6_Format",(function(){return me})),n.d(e,"RGBA_ASTC_8x8_Format",(function(){return fe})),n.d(e,"RGBA_BPTC_Format",(function(){return we})),n.d(e,"RGBA_ETC2_EAC_Format",(function(){return ae})),n.d(e,"RGBA_PVRTC_2BPPV1_Format",(function(){return ie})),n.d(e,"RGBA_PVRTC_4BPPV1_Format",(function(){return re})),n.d(e,"RGBA_S3TC_DXT1_Format",(function(){return Kt})),n.d(e,"RGBA_S3TC_DXT3_Format",(function(){return $t})),n.d(e,"RGBA_S3TC_DXT5_Format",(function(){return te})),n.d(e,"RGBDEncoding",(function(){return sn})),n.d(e,"RGBEEncoding",(function(){return tn})),n.d(e,"RGBEFormat",(function(){return jt})),n.d(e,"RGBFormat",(function(){return Ft})),n.d(e,"RGBIntegerFormat",(function(){return Jt})),n.d(e,"RGBM16Encoding",(function(){return rn})),n.d(e,"RGBM7Encoding",(function(){return nn})),n.d(e,"RGB_ETC1_Format",(function(){return se})),n.d(e,"RGB_ETC2_Format",(function(){return oe})),n.d(e,"RGB_PVRTC_2BPPV1_Format",(function(){return ne})),n.d(e,"RGB_PVRTC_4BPPV1_Format",(function(){return ee})),n.d(e,"RGB_S3TC_DXT1_Format",(function(){return Qt})),n.d(e,"RGFormat",(function(){return Yt})),n.d(e,"RGIntegerFormat",(function(){return Xt})),n.d(e,"RawShaderMaterial",(function(){return mu})),n.d(e,"Ray",(function(){return Nr})),n.d(e,"Raycaster",(function(){return Fh})),n.d(e,"RectAreaLight",(function(){return Np})),n.d(e,"RedFormat",(function(){return Wt})),n.d(e,"RedIntegerFormat",(function(){return qt})),n.d(e,"ReinhardToneMapping",(function(){return tt})),n.d(e,"RepeatWrapping",(function(){return ht})),n.d(e,"ReplaceStencilOp",(function(){return hn})),n.d(e,"ReverseSubtractEquation",(function(){return A})),n.d(e,"RingBufferGeometry",(function(){return ru})),n.d(e,"RingGeometry",(function(){return ru})),n.d(e,"SRGB8_ALPHA8_ASTC_10x10_Format",(function(){return Ie})),n.d(e,"SRGB8_ALPHA8_ASTC_10x5_Format",(function(){return Re})),n.d(e,"SRGB8_ALPHA8_ASTC_10x6_Format",(function(){return Pe})),n.d(e,"SRGB8_ALPHA8_ASTC_10x8_Format",(function(){return De})),n.d(e,"SRGB8_ALPHA8_ASTC_12x10_Format",(function(){return Oe})),n.d(e,"SRGB8_ALPHA8_ASTC_12x12_Format",(function(){return Be})),n.d(e,"SRGB8_ALPHA8_ASTC_4x4_Format",(function(){return Me})),n.d(e,"SRGB8_ALPHA8_ASTC_5x4_Format",(function(){return Se})),n.d(e,"SRGB8_ALPHA8_ASTC_5x5_Format",(function(){return Te})),n.d(e,"SRGB8_ALPHA8_ASTC_6x5_Format",(function(){return Ee})),n.d(e,"SRGB8_ALPHA8_ASTC_6x6_Format",(function(){return Ae})),n.d(e,"SRGB8_ALPHA8_ASTC_8x5_Format",(function(){return Ce})),n.d(e,"SRGB8_ALPHA8_ASTC_8x6_Format",(function(){return Le})),n.d(e,"SRGB8_ALPHA8_ASTC_8x8_Format",(function(){return ze})),n.d(e,"Scene",(function(){return al})),n.d(e,"SceneUtils",(function(){return Pm})),n.d(e,"ShaderChunk",(function(){return Ws})),n.d(e,"ShaderLib",(function(){return Ys})),n.d(e,"ShaderMaterial",(function(){return Ps})),n.d(e,"ShadowMaterial",(function(){return du})),n.d(e,"Shape",(function(){return vp})),n.d(e,"ShapeBufferGeometry",(function(){return iu})),n.d(e,"ShapeGeometry",(function(){return iu})),n.d(e,"ShapePath",(function(){return Zp})),n.d(e,"ShapeUtils",(function(){return Xc})),n.d(e,"ShortType",(function(){return At})),n.d(e,"Skeleton",(function(){return Hl})),n.d(e,"SkeletonHelper",(function(){return td})),n.d(e,"SkinnedMesh",(function(){return Ol})),n.d(e,"SmoothShading",(function(){return y})),n.d(e,"Sphere",(function(){return Lr})),n.d(e,"SphereBufferGeometry",(function(){return su})),n.d(e,"SphereGeometry",(function(){return su})),n.d(e,"Spherical",(function(){return Uh})),n.d(e,"SphericalHarmonics3",(function(){return Fp})),n.d(e,"SplineCurve",(function(){return fp})),n.d(e,"SpotLight",(function(){return Ap})),n.d(e,"SpotLightHelper",(function(){return Zh})),n.d(e,"Sprite",(function(){return Tl})),n.d(e,"SpriteMaterial",(function(){return pl})),n.d(e,"SrcAlphaFactor",(function(){return I})),n.d(e,"SrcAlphaSaturateFactor",(function(){return G})),n.d(e,"SrcColorFactor",(function(){return P})),n.d(e,"StaticCopyUsage",(function(){return Pn})),n.d(e,"StaticDrawUsage",(function(){return En})),n.d(e,"StaticReadUsage",(function(){return Ln})),n.d(e,"StereoCamera",(function(){return ah})),n.d(e,"StreamCopyUsage",(function(){return In})),n.d(e,"StreamDrawUsage",(function(){return Cn})),n.d(e,"StreamReadUsage",(function(){return Rn})),n.d(e,"StringKeyframeTrack",(function(){return Ou})),n.d(e,"SubtractEquation",(function(){return E})),n.d(e,"SubtractiveBlending",(function(){return w})),n.d(e,"TOUCH",(function(){return s})),n.d(e,"TangentSpaceNormalMap",(function(){return ln})),n.d(e,"TetrahedronBufferGeometry",(function(){return ou})),n.d(e,"TetrahedronGeometry",(function(){return ou})),n.d(e,"TextBufferGeometry",(function(){return au})),n.d(e,"TextGeometry",(function(){return au})),n.d(e,"Texture",(function(){return er})),n.d(e,"TextureLoader",(function(){return Zu})),n.d(e,"TorusBufferGeometry",(function(){return lu})),n.d(e,"TorusGeometry",(function(){return lu})),n.d(e,"TorusKnotBufferGeometry",(function(){return cu})),n.d(e,"TorusKnotGeometry",(function(){return cu})),n.d(e,"Triangle",(function(){return Ci})),n.d(e,"TriangleFanDrawMode",(function(){return Ze})),n.d(e,"TriangleStripDrawMode",(function(){return Je})),n.d(e,"TrianglesDrawMode",(function(){return Xe})),n.d(e,"TubeBufferGeometry",(function(){return uu})),n.d(e,"TubeGeometry",(function(){return uu})),n.d(e,"UVMapping",(function(){return st})),n.d(e,"Uint16Attribute",(function(){return ym})),n.d(e,"Uint16BufferAttribute",(function(){return qi})),n.d(e,"Uint32Attribute",(function(){return bm})),n.d(e,"Uint32BufferAttribute",(function(){return Xi})),n.d(e,"Uint8Attribute",(function(){return fm})),n.d(e,"Uint8BufferAttribute",(function(){return Vi})),n.d(e,"Uint8ClampedAttribute",(function(){return gm})),n.d(e,"Uint8ClampedBufferAttribute",(function(){return ki})),n.d(e,"Uniform",(function(){return Oh})),n.d(e,"UniformsLib",(function(){return qs})),n.d(e,"UniformsUtils",(function(){return Rs})),n.d(e,"UnsignedByteType",(function(){return Tt})),n.d(e,"UnsignedInt248Type",(function(){return Bt})),n.d(e,"UnsignedIntType",(function(){return zt})),n.d(e,"UnsignedShort4444Type",(function(){return Dt})),n.d(e,"UnsignedShort5551Type",(function(){return It})),n.d(e,"UnsignedShort565Type",(function(){return Ot})),n.d(e,"UnsignedShortType",(function(){return Ct})),n.d(e,"VSMShadowMap",(function(){return d})),n.d(e,"Vector2",(function(){return Zn})),n.d(e,"Vector3",(function(){return ar})),n.d(e,"Vector4",(function(){return rr})),n.d(e,"VectorKeyframeTrack",(function(){return Bu})),n.d(e,"Vertex",(function(){return hm})),n.d(e,"VertexColors",(function(){return rm})),n.d(e,"VideoTexture",(function(){return cc})),n.d(e,"WebGL1Renderer",(function(){return il})),n.d(e,"WebGLCubeRenderTarget",(function(){return Ns})),n.d(e,"WebGLMultisampleRenderTarget",(function(){return sr})),n.d(e,"WebGLRenderTarget",(function(){return ir})),n.d(e,"WebGLRenderTargetCube",(function(){return Lm})),n.d(e,"WebGLRenderer",(function(){return rl})),n.d(e,"WebGLUtils",(function(){return Za})),n.d(e,"WireframeGeometry",(function(){return pu})),n.d(e,"WireframeHelper",(function(){return Em})),n.d(e,"WrapAroundEnding",(function(){return We})),n.d(e,"XHRLoader",(function(){return Am})),n.d(e,"ZeroCurvatureEnding",(function(){return Ve})),n.d(e,"ZeroFactor",(function(){return z})),n.d(e,"ZeroSlopeEnding",(function(){return ke})),n.d(e,"ZeroStencilOp",(function(){return un})),n.d(e,"sRGBEncoding",(function(){return Ke}));
/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const r="128",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},s={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},o=0,a=1,l=2,c=3,u=0,p=1,h=2,d=3,m=0,f=1,g=2,_=1,y=2,v=0,b=1,x=2,w=3,M=4,S=5,T=100,E=101,A=102,C=103,L=104,z=200,R=201,P=202,D=203,I=204,O=205,B=206,N=207,F=208,H=209,G=210,U=0,j=1,V=2,k=3,W=4,q=5,Y=6,X=7,J=0,Z=1,Q=2,K=0,$=1,tt=2,et=3,nt=4,rt=5,it=6,st=300,ot=301,at=302,lt=303,ct=304,ut=306,pt=307,ht=1e3,dt=1001,mt=1002,ft=1003,gt=1004,_t=1004,yt=1005,vt=1005,bt=1006,xt=1007,wt=1007,Mt=1008,St=1008,Tt=1009,Et=1010,At=1011,Ct=1012,Lt=1013,zt=1014,Rt=1015,Pt=1016,Dt=1017,It=1018,Ot=1019,Bt=1020,Nt=1021,Ft=1022,Ht=1023,Gt=1024,Ut=1025,jt=Ht,Vt=1026,kt=1027,Wt=1028,qt=1029,Yt=1030,Xt=1031,Jt=1032,Zt=1033,Qt=33776,Kt=33777,$t=33778,te=33779,ee=35840,ne=35841,re=35842,ie=35843,se=36196,oe=37492,ae=37496,le=37808,ce=37809,ue=37810,pe=37811,he=37812,de=37813,me=37814,fe=37815,ge=37816,_e=37817,ye=37818,ve=37819,be=37820,xe=37821,we=36492,Me=37840,Se=37841,Te=37842,Ee=37843,Ae=37844,Ce=37845,Le=37846,ze=37847,Re=37848,Pe=37849,De=37850,Ie=37851,Oe=37852,Be=37853,Ne=2200,Fe=2201,He=2202,Ge=2300,Ue=2301,je=2302,Ve=2400,ke=2401,We=2402,qe=2500,Ye=2501,Xe=0,Je=1,Ze=2,Qe=3e3,Ke=3001,$e=3007,tn=3002,en=3003,nn=3004,rn=3005,sn=3006,on=3200,an=3201,ln=0,cn=1,un=0,pn=7680,hn=7681,dn=7682,mn=7683,fn=34055,gn=34056,_n=5386,yn=512,vn=513,bn=514,xn=515,wn=516,Mn=517,Sn=518,Tn=519,En=35044,An=35048,Cn=35040,Ln=35045,zn=35049,Rn=35041,Pn=35046,Dn=35050,In=35042,On="100",Bn="300 es";class Nn{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,r=n.length;e<r;e++)n[e].call(this,t);t.target=null}}}const Fn=[];for(let t=0;t<256;t++)Fn[t]=(t<16?"0":"")+t.toString(16);let Hn=1234567;const Gn=Math.PI/180,Un=180/Math.PI;function jn(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Fn[255&t]+Fn[t>>8&255]+Fn[t>>16&255]+Fn[t>>24&255]+"-"+Fn[255&e]+Fn[e>>8&255]+"-"+Fn[e>>16&15|64]+Fn[e>>24&255]+"-"+Fn[63&n|128]+Fn[n>>8&255]+"-"+Fn[n>>16&255]+Fn[n>>24&255]+Fn[255&r]+Fn[r>>8&255]+Fn[r>>16&255]+Fn[r>>24&255]).toUpperCase()}function Vn(t,e,n){return Math.max(e,Math.min(n,t))}function kn(t,e){return(t%e+e)%e}function Wn(t,e,n){return(1-n)*t+n*e}function qn(t){return 0==(t&t-1)&&0!==t}function Yn(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Xn(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var Jn=Object.freeze({__proto__:null,DEG2RAD:Gn,RAD2DEG:Un,generateUUID:jn,clamp:Vn,euclideanModulo:kn,mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:Wn,damp:function(t,e,n,r){return Wn(t,e,1-Math.exp(-n*r))},pingpong:function(t,e=1){return e-Math.abs(kn(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(Hn=t%2147483647),Hn=16807*Hn%2147483647,(Hn-1)/2147483646},degToRad:function(t){return t*Gn},radToDeg:function(t){return t*Un},isPowerOfTwo:qn,ceilPowerOfTwo:Yn,floorPowerOfTwo:Xn,setQuaternionFromProperEuler:function(t,e,n,r,i){const s=Math.cos,o=Math.sin,a=s(n/2),l=o(n/2),c=s((e+r)/2),u=o((e+r)/2),p=s((e-r)/2),h=o((e-r)/2),d=s((r-e)/2),m=o((r-e)/2);switch(i){case"XYX":t.set(a*u,l*p,l*h,a*c);break;case"YZY":t.set(l*h,a*u,l*p,a*c);break;case"ZXZ":t.set(l*p,l*h,a*u,a*c);break;case"XZX":t.set(a*u,l*m,l*d,a*c);break;case"YXY":t.set(l*d,a*u,l*m,a*c);break;case"ZYZ":t.set(l*m,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}});class Zn{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,s=this.y-t.y;return this.x=i*n-s*r+t.x,this.y=i*r+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Zn.prototype.isVector2=!0;class Qn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,s,o,a,l){const c=this.elements;return c[0]=t,c[1]=r,c[2]=o,c[3]=e,c[4]=i,c[5]=a,c[6]=n,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],o=n[3],a=n[6],l=n[1],c=n[4],u=n[7],p=n[2],h=n[5],d=n[8],m=r[0],f=r[3],g=r[6],_=r[1],y=r[4],v=r[7],b=r[2],x=r[5],w=r[8];return i[0]=s*m+o*_+a*b,i[3]=s*f+o*y+a*x,i[6]=s*g+o*v+a*w,i[1]=l*m+c*_+u*b,i[4]=l*f+c*y+u*x,i[7]=l*g+c*v+u*w,i[2]=p*m+h*_+d*b,i[5]=p*f+h*y+d*x,i[8]=p*g+h*v+d*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],o=t[5],a=t[6],l=t[7],c=t[8];return e*s*c-e*o*l-n*i*c+n*o*a+r*i*l-r*s*a}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],o=t[5],a=t[6],l=t[7],c=t[8],u=c*s-o*l,p=o*a-c*i,h=l*i-s*a,d=e*u+n*p+r*h;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const m=1/d;return t[0]=u*m,t[1]=(r*l-c*n)*m,t[2]=(o*n-r*s)*m,t[3]=p*m,t[4]=(c*e-r*a)*m,t[5]=(r*i-o*e)*m,t[6]=h*m,t[7]=(n*a-l*e)*m,t[8]=(s*e-n*i)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,i,s,o){const a=Math.cos(i),l=Math.sin(i);return this.set(n*a,n*l,-n*(a*s+l*o)+s+t,-r*l,r*a,-r*(-l*s+a*o)+o+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],s=r[3],o=r[6],a=r[1],l=r[4],c=r[7];return r[0]=e*i+n*a,r[3]=e*s+n*l,r[6]=e*o+n*c,r[1]=-n*i+e*a,r[4]=-n*s+e*l,r[7]=-n*o+e*c,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let Kn;Qn.prototype.isMatrix3=!0;class $n{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Kn&&(Kn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Kn.width=t.width,Kn.height=t.height;const n=Kn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Kn}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let tr=0;class er extends Nn{constructor(t=er.DEFAULT_IMAGE,e=er.DEFAULT_MAPPING,n=dt,r=dt,i=bt,s=Mt,o=Ht,a=Tt,l=1,c=Qe){super(),Object.defineProperty(this,"id",{value:tr++}),this.uuid=jn(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=s,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new Zn(0,0),this.repeat=new Zn(1,1),this.center=new Zn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Qn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=jn()),!e&&void 0===t.images[r.uuid]){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(nr(r[t].image)):e.push(nr(r[t]))}else e=nr(r);t.images[r.uuid]={uuid:r.uuid,url:e}}n.image=r.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==st)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ht:t.x=t.x-Math.floor(t.x);break;case dt:t.x=t.x<0?0:1;break;case mt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case ht:t.y=t.y-Math.floor(t.y);break;case dt:t.y=t.y<0?0:1;break;case mt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function nr(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?$n.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}er.DEFAULT_IMAGE=void 0,er.DEFAULT_MAPPING=st,er.prototype.isTexture=!0;class rr{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*r+s[12]*i,this.y=s[1]*e+s[5]*n+s[9]*r+s[13]*i,this.z=s[2]*e+s[6]*n+s[10]*r+s[14]*i,this.w=s[3]*e+s[7]*n+s[11]*r+s[15]*i,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,i;const s=t.elements,o=s[0],a=s[4],l=s[8],c=s[1],u=s[5],p=s[9],h=s[2],d=s[6],m=s[10];if(Math.abs(a-c)<.01&&Math.abs(l-h)<.01&&Math.abs(p-d)<.01){if(Math.abs(a+c)<.1&&Math.abs(l+h)<.1&&Math.abs(p+d)<.1&&Math.abs(o+u+m-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(o+1)/2,s=(u+1)/2,f=(m+1)/2,g=(a+c)/4,_=(l+h)/4,y=(p+d)/4;return t>s&&t>f?t<.01?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(t),r=g/n,i=_/n):s>f?s<.01?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(s),n=g/r,i=y/r):f<.01?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(f),n=_/i,r=y/i),this.set(n,r,i,e),this}let f=Math.sqrt((d-p)*(d-p)+(l-h)*(l-h)+(c-a)*(c-a));return Math.abs(f)<.001&&(f=1),this.x=(d-p)/f,this.y=(l-h)/f,this.z=(c-a)/f,this.w=Math.acos((o+u+m-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}rr.prototype.isVector4=!0;class ir extends Nn{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new rr(0,0,t,e),this.scissorTest=!1,this.viewport=new rr(0,0,t,e),n=n||{},this.texture=new er(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:bt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}ir.prototype.isWebGLRenderTarget=!0;class sr extends ir{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}sr.prototype.isWebGLMultisampleRenderTarget=!0;class or{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,i,s,o){let a=n[r+0],l=n[r+1],c=n[r+2],u=n[r+3];const p=i[s+0],h=i[s+1],d=i[s+2],m=i[s+3];if(0===o)return t[e+0]=a,t[e+1]=l,t[e+2]=c,void(t[e+3]=u);if(1===o)return t[e+0]=p,t[e+1]=h,t[e+2]=d,void(t[e+3]=m);if(u!==m||a!==p||l!==h||c!==d){let t=1-o;const e=a*p+l*h+c*d+u*m,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const i=Math.sqrt(r),s=Math.atan2(i,e*n);t=Math.sin(t*s)/i,o=Math.sin(o*s)/i}const i=o*n;if(a=a*t+p*i,l=l*t+h*i,c=c*t+d*i,u=u*t+m*i,t===1-o){const t=1/Math.sqrt(a*a+l*l+c*c+u*u);a*=t,l*=t,c*=t,u*=t}}t[e]=a,t[e+1]=l,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,r,i,s){const o=n[r],a=n[r+1],l=n[r+2],c=n[r+3],u=i[s],p=i[s+1],h=i[s+2],d=i[s+3];return t[e]=o*d+c*u+a*h-l*p,t[e+1]=a*d+c*p+l*u-o*h,t[e+2]=l*d+c*h+o*p-a*u,t[e+3]=c*d-o*u-a*p-l*h,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,i=t._z,s=t._order,o=Math.cos,a=Math.sin,l=o(n/2),c=o(r/2),u=o(i/2),p=a(n/2),h=a(r/2),d=a(i/2);switch(s){case"XYZ":this._x=p*c*u+l*h*d,this._y=l*h*u-p*c*d,this._z=l*c*d+p*h*u,this._w=l*c*u-p*h*d;break;case"YXZ":this._x=p*c*u+l*h*d,this._y=l*h*u-p*c*d,this._z=l*c*d-p*h*u,this._w=l*c*u+p*h*d;break;case"ZXY":this._x=p*c*u-l*h*d,this._y=l*h*u+p*c*d,this._z=l*c*d+p*h*u,this._w=l*c*u-p*h*d;break;case"ZYX":this._x=p*c*u-l*h*d,this._y=l*h*u+p*c*d,this._z=l*c*d-p*h*u,this._w=l*c*u+p*h*d;break;case"YZX":this._x=p*c*u+l*h*d,this._y=l*h*u+p*c*d,this._z=l*c*d-p*h*u,this._w=l*c*u-p*h*d;break;case"XZY":this._x=p*c*u-l*h*d,this._y=l*h*u-p*c*d,this._z=l*c*d+p*h*u,this._w=l*c*u+p*h*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],i=e[8],s=e[1],o=e[5],a=e[9],l=e[2],c=e[6],u=e[10],p=n+o+u;if(p>0){const t=.5/Math.sqrt(p+1);this._w=.25/t,this._x=(c-a)*t,this._y=(i-l)*t,this._z=(s-r)*t}else if(n>o&&n>u){const t=2*Math.sqrt(1+n-o-u);this._w=(c-a)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(i+l)/t}else if(o>u){const t=2*Math.sqrt(1+o-n-u);this._w=(i-l)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(a+c)/t}else{const t=2*Math.sqrt(1+u-n-o);this._w=(s-r)/t,this._x=(i+l)/t,this._y=(a+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Vn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,i=t._z,s=t._w,o=e._x,a=e._y,l=e._z,c=e._w;return this._x=n*c+s*o+r*l-i*a,this._y=r*c+s*a+i*o-n*l,this._z=i*c+s*l+n*a-r*o,this._w=s*c-n*o-r*a-i*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,i=this._z,s=this._w;let o=s*t._w+n*t._x+r*t._y+i*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;const a=1-o*o;if(a<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(a),c=Math.atan2(l,o),u=Math.sin((1-e)*c)/l,p=Math.sin(e*c)/l;return this._w=s*u+this._w*p,this._x=n*u+this._x*p,this._y=r*u+this._y*p,this._z=i*u+this._z*p,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}or.prototype.isQuaternion=!0;class ar{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(cr.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(cr.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=t.elements,s=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,i=t.x,s=t.y,o=t.z,a=t.w,l=a*e+s*r-o*n,c=a*n+o*e-i*r,u=a*r+i*n-s*e,p=-i*e-s*n-o*r;return this.x=l*a+p*-i+c*-o-u*-s,this.y=c*a+p*-s+u*-i-l*-o,this.z=u*a+p*-o+l*-s-c*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,i=t.z,s=e.x,o=e.y,a=e.z;return this.x=r*a-i*o,this.y=i*s-n*a,this.z=n*o-r*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return lr.copy(this).projectOnVector(t),this.sub(lr)}reflect(t){return this.sub(lr.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Vn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}ar.prototype.isVector3=!0;const lr=new ar,cr=new or;class ur{constructor(t=new ar(1/0,1/0,1/0),e=new ar(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,o=-1/0;for(let a=0,l=t.length;a<l;a+=3){const l=t[a],c=t[a+1],u=t[a+2];l<e&&(e=l),c<n&&(n=c),u<r&&(r=u),l>i&&(i=l),c>s&&(s=c),u>o&&(o=u)}return this.min.set(e,n,r),this.max.set(i,s,o),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,i=-1/0,s=-1/0,o=-1/0;for(let a=0,l=t.count;a<l;a++){const l=t.getX(a),c=t.getY(a),u=t.getZ(a);l<e&&(e=l),c<n&&(n=c),u<r&&(r=u),l>i&&(i=l),c>s&&(s=c),u>o&&(o=u)}return this.min.set(e,n,r),this.max.set(i,s,o),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=hr.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new ar),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new ar),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),dr.copy(e.boundingBox),dr.applyMatrix4(t.matrixWorld),this.union(dr));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new ar),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,hr),hr.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(br),xr.subVectors(this.max,br),mr.subVectors(t.a,br),fr.subVectors(t.b,br),gr.subVectors(t.c,br),_r.subVectors(fr,mr),yr.subVectors(gr,fr),vr.subVectors(mr,gr);let e=[0,-_r.z,_r.y,0,-yr.z,yr.y,0,-vr.z,vr.y,_r.z,0,-_r.x,yr.z,0,-yr.x,vr.z,0,-vr.x,-_r.y,_r.x,0,-yr.y,yr.x,0,-vr.y,vr.x,0];return!!Sr(e,mr,fr,gr,xr)&&(e=[1,0,0,0,1,0,0,0,1],!!Sr(e,mr,fr,gr,xr)&&(wr.crossVectors(_r,yr),e=[wr.x,wr.y,wr.z],Sr(e,mr,fr,gr,xr)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new ar),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return hr.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(hr).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(pr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),pr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),pr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),pr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),pr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),pr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),pr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),pr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(pr),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}ur.prototype.isBox3=!0;const pr=[new ar,new ar,new ar,new ar,new ar,new ar,new ar,new ar],hr=new ar,dr=new ur,mr=new ar,fr=new ar,gr=new ar,_r=new ar,yr=new ar,vr=new ar,br=new ar,xr=new ar,wr=new ar,Mr=new ar;function Sr(t,e,n,r,i){for(let s=0,o=t.length-3;s<=o;s+=3){Mr.fromArray(t,s);const o=i.x*Math.abs(Mr.x)+i.y*Math.abs(Mr.y)+i.z*Math.abs(Mr.z),a=e.dot(Mr),l=n.dot(Mr),c=r.dot(Mr);if(Math.max(-Math.max(a,l,c),Math.min(a,l,c))>o)return!1}return!0}const Tr=new ur,Er=new ar,Ar=new ar,Cr=new ar;class Lr{constructor(t=new ar,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Tr.setFromPoints(t).getCenter(n);let r=0;for(let e=0,i=t.length;e<i;e++)r=Math.max(r,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new ar),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new ur),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Cr.subVectors(t,this.center);const e=Cr.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(Cr.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return Ar.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Er.copy(t.center).add(Ar)),this.expandByPoint(Er.copy(t.center).sub(Ar)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const zr=new ar,Rr=new ar,Pr=new ar,Dr=new ar,Ir=new ar,Or=new ar,Br=new ar;class Nr{constructor(t=new ar,e=new ar(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new ar),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,zr)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new ar),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=zr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(zr.copy(this.direction).multiplyScalar(e).add(this.origin),zr.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){Rr.copy(t).add(e).multiplyScalar(.5),Pr.copy(e).sub(t).normalize(),Dr.copy(this.origin).sub(Rr);const i=.5*t.distanceTo(e),s=-this.direction.dot(Pr),o=Dr.dot(this.direction),a=-Dr.dot(Pr),l=Dr.lengthSq(),c=Math.abs(1-s*s);let u,p,h,d;if(c>0)if(u=s*a-o,p=s*o-a,d=i*c,u>=0)if(p>=-d)if(p<=d){const t=1/c;u*=t,p*=t,h=u*(u+s*p+2*o)+p*(s*u+p+2*a)+l}else p=i,u=Math.max(0,-(s*p+o)),h=-u*u+p*(p+2*a)+l;else p=-i,u=Math.max(0,-(s*p+o)),h=-u*u+p*(p+2*a)+l;else p<=-d?(u=Math.max(0,-(-s*i+o)),p=u>0?-i:Math.min(Math.max(-i,-a),i),h=-u*u+p*(p+2*a)+l):p<=d?(u=0,p=Math.min(Math.max(-i,-a),i),h=p*(p+2*a)+l):(u=Math.max(0,-(s*i+o)),p=u>0?i:Math.min(Math.max(-i,-a),i),h=-u*u+p*(p+2*a)+l);else p=s>0?-i:i,u=Math.max(0,-(s*p+o)),h=-u*u+p*(p+2*a)+l;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Pr).multiplyScalar(p).add(Rr),h}intersectSphere(t,e){zr.subVectors(t.center,this.origin);const n=zr.dot(this.direction),r=zr.dot(zr)-n*n,i=t.radius*t.radius;if(r>i)return null;const s=Math.sqrt(i-r),o=n-s,a=n+s;return o<0&&a<0?null:o<0?this.at(a,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,i,s,o,a;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,p=this.origin;return l>=0?(n=(t.min.x-p.x)*l,r=(t.max.x-p.x)*l):(n=(t.max.x-p.x)*l,r=(t.min.x-p.x)*l),c>=0?(i=(t.min.y-p.y)*c,s=(t.max.y-p.y)*c):(i=(t.max.y-p.y)*c,s=(t.min.y-p.y)*c),n>s||i>r?null:((i>n||n!=n)&&(n=i),(s<r||r!=r)&&(r=s),u>=0?(o=(t.min.z-p.z)*u,a=(t.max.z-p.z)*u):(o=(t.max.z-p.z)*u,a=(t.min.z-p.z)*u),n>a||o>r?null:((o>n||n!=n)&&(n=o),(a<r||r!=r)&&(r=a),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,zr)}intersectTriangle(t,e,n,r,i){Ir.subVectors(e,t),Or.subVectors(n,t),Br.crossVectors(Ir,Or);let s,o=this.direction.dot(Br);if(o>0){if(r)return null;s=1}else{if(!(o<0))return null;s=-1,o=-o}Dr.subVectors(this.origin,t);const a=s*this.direction.dot(Or.crossVectors(Dr,Or));if(a<0)return null;const l=s*this.direction.dot(Ir.cross(Dr));if(l<0)return null;if(a+l>o)return null;const c=-s*Dr.dot(Br);return c<0?null:this.at(c/o,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Fr{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,s,o,a,l,c,u,p,h,d,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=r,g[1]=i,g[5]=s,g[9]=o,g[13]=a,g[2]=l,g[6]=c,g[10]=u,g[14]=p,g[3]=h,g[7]=d,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Fr).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/Hr.setFromMatrixColumn(t,0).length(),i=1/Hr.setFromMatrixColumn(t,1).length(),s=1/Hr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,i=t.z,s=Math.cos(n),o=Math.sin(n),a=Math.cos(r),l=Math.sin(r),c=Math.cos(i),u=Math.sin(i);if("XYZ"===t.order){const t=s*c,n=s*u,r=o*c,i=o*u;e[0]=a*c,e[4]=-a*u,e[8]=l,e[1]=n+r*l,e[5]=t-i*l,e[9]=-o*a,e[2]=i-t*l,e[6]=r+n*l,e[10]=s*a}else if("YXZ"===t.order){const t=a*c,n=a*u,r=l*c,i=l*u;e[0]=t+i*o,e[4]=r*o-n,e[8]=s*l,e[1]=s*u,e[5]=s*c,e[9]=-o,e[2]=n*o-r,e[6]=i+t*o,e[10]=s*a}else if("ZXY"===t.order){const t=a*c,n=a*u,r=l*c,i=l*u;e[0]=t-i*o,e[4]=-s*u,e[8]=r+n*o,e[1]=n+r*o,e[5]=s*c,e[9]=i-t*o,e[2]=-s*l,e[6]=o,e[10]=s*a}else if("ZYX"===t.order){const t=s*c,n=s*u,r=o*c,i=o*u;e[0]=a*c,e[4]=r*l-n,e[8]=t*l+i,e[1]=a*u,e[5]=i*l+t,e[9]=n*l-r,e[2]=-l,e[6]=o*a,e[10]=s*a}else if("YZX"===t.order){const t=s*a,n=s*l,r=o*a,i=o*l;e[0]=a*c,e[4]=i-t*u,e[8]=r*u+n,e[1]=u,e[5]=s*c,e[9]=-o*c,e[2]=-l*c,e[6]=n*u+r,e[10]=t-i*u}else if("XZY"===t.order){const t=s*a,n=s*l,r=o*a,i=o*l;e[0]=a*c,e[4]=-u,e[8]=l*c,e[1]=t*u+i,e[5]=s*c,e[9]=n*u-r,e[2]=r*u-n,e[6]=o*c,e[10]=i*u+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ur,t,jr)}lookAt(t,e,n){const r=this.elements;return Wr.subVectors(t,e),0===Wr.lengthSq()&&(Wr.z=1),Wr.normalize(),Vr.crossVectors(n,Wr),0===Vr.lengthSq()&&(1===Math.abs(n.z)?Wr.x+=1e-4:Wr.z+=1e-4,Wr.normalize(),Vr.crossVectors(n,Wr)),Vr.normalize(),kr.crossVectors(Wr,Vr),r[0]=Vr.x,r[4]=kr.x,r[8]=Wr.x,r[1]=Vr.y,r[5]=kr.y,r[9]=Wr.y,r[2]=Vr.z,r[6]=kr.z,r[10]=Wr.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,s=n[0],o=n[4],a=n[8],l=n[12],c=n[1],u=n[5],p=n[9],h=n[13],d=n[2],m=n[6],f=n[10],g=n[14],_=n[3],y=n[7],v=n[11],b=n[15],x=r[0],w=r[4],M=r[8],S=r[12],T=r[1],E=r[5],A=r[9],C=r[13],L=r[2],z=r[6],R=r[10],P=r[14],D=r[3],I=r[7],O=r[11],B=r[15];return i[0]=s*x+o*T+a*L+l*D,i[4]=s*w+o*E+a*z+l*I,i[8]=s*M+o*A+a*R+l*O,i[12]=s*S+o*C+a*P+l*B,i[1]=c*x+u*T+p*L+h*D,i[5]=c*w+u*E+p*z+h*I,i[9]=c*M+u*A+p*R+h*O,i[13]=c*S+u*C+p*P+h*B,i[2]=d*x+m*T+f*L+g*D,i[6]=d*w+m*E+f*z+g*I,i[10]=d*M+m*A+f*R+g*O,i[14]=d*S+m*C+f*P+g*B,i[3]=_*x+y*T+v*L+b*D,i[7]=_*w+y*E+v*z+b*I,i[11]=_*M+y*A+v*R+b*O,i[15]=_*S+y*C+v*P+b*B,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],s=t[1],o=t[5],a=t[9],l=t[13],c=t[2],u=t[6],p=t[10],h=t[14];return t[3]*(+i*a*u-r*l*u-i*o*p+n*l*p+r*o*h-n*a*h)+t[7]*(+e*a*h-e*l*p+i*s*p-r*s*h+r*l*c-i*a*c)+t[11]*(+e*l*u-e*o*h-i*s*u+n*s*h+i*o*c-n*l*c)+t[15]*(-r*o*c-e*a*u+e*o*p+r*s*u-n*s*p+n*a*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],o=t[5],a=t[6],l=t[7],c=t[8],u=t[9],p=t[10],h=t[11],d=t[12],m=t[13],f=t[14],g=t[15],_=u*f*l-m*p*l+m*a*h-o*f*h-u*a*g+o*p*g,y=d*p*l-c*f*l-d*a*h+s*f*h+c*a*g-s*p*g,v=c*m*l-d*u*l+d*o*h-s*m*h-c*o*g+s*u*g,b=d*u*a-c*m*a-d*o*p+s*m*p+c*o*f-s*u*f,x=e*_+n*y+r*v+i*b;if(0===x)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/x;return t[0]=_*w,t[1]=(m*p*i-u*f*i-m*r*h+n*f*h+u*r*g-n*p*g)*w,t[2]=(o*f*i-m*a*i+m*r*l-n*f*l-o*r*g+n*a*g)*w,t[3]=(u*a*i-o*p*i-u*r*l+n*p*l+o*r*h-n*a*h)*w,t[4]=y*w,t[5]=(c*f*i-d*p*i+d*r*h-e*f*h-c*r*g+e*p*g)*w,t[6]=(d*a*i-s*f*i-d*r*l+e*f*l+s*r*g-e*a*g)*w,t[7]=(s*p*i-c*a*i+c*r*l-e*p*l-s*r*h+e*a*h)*w,t[8]=v*w,t[9]=(d*u*i-c*m*i-d*n*h+e*m*h+c*n*g-e*u*g)*w,t[10]=(s*m*i-d*o*i+d*n*l-e*m*l-s*n*g+e*o*g)*w,t[11]=(c*o*i-s*u*i-c*n*l+e*u*l+s*n*h-e*o*h)*w,t[12]=b*w,t[13]=(c*m*r-d*u*r+d*n*p-e*m*p-c*n*f+e*u*f)*w,t[14]=(d*o*r-s*m*r-d*n*a+e*m*a+s*n*f-e*o*f)*w,t[15]=(s*u*r-c*o*r+c*n*a-e*u*a-s*n*p+e*o*p)*w,this}scale(t){const e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),i=1-n,s=t.x,o=t.y,a=t.z,l=i*s,c=i*o;return this.set(l*s+n,l*o-r*a,l*a+r*o,0,l*o+r*a,c*o+n,c*a-r*s,0,l*a-r*o,c*a+r*s,i*a*a+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,i=e._x,s=e._y,o=e._z,a=e._w,l=i+i,c=s+s,u=o+o,p=i*l,h=i*c,d=i*u,m=s*c,f=s*u,g=o*u,_=a*l,y=a*c,v=a*u,b=n.x,x=n.y,w=n.z;return r[0]=(1-(m+g))*b,r[1]=(h+v)*b,r[2]=(d-y)*b,r[3]=0,r[4]=(h-v)*x,r[5]=(1-(p+g))*x,r[6]=(f+_)*x,r[7]=0,r[8]=(d+y)*w,r[9]=(f-_)*w,r[10]=(1-(p+m))*w,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let i=Hr.set(r[0],r[1],r[2]).length();const s=Hr.set(r[4],r[5],r[6]).length(),o=Hr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),t.x=r[12],t.y=r[13],t.z=r[14],Gr.copy(this);const a=1/i,l=1/s,c=1/o;return Gr.elements[0]*=a,Gr.elements[1]*=a,Gr.elements[2]*=a,Gr.elements[4]*=l,Gr.elements[5]*=l,Gr.elements[6]*=l,Gr.elements[8]*=c,Gr.elements[9]*=c,Gr.elements[10]*=c,e.setFromRotationMatrix(Gr),n.x=i,n.y=s,n.z=o,this}makePerspective(t,e,n,r,i,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,a=2*i/(e-t),l=2*i/(n-r),c=(e+t)/(e-t),u=(n+r)/(n-r),p=-(s+i)/(s-i),h=-2*s*i/(s-i);return o[0]=a,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=p,o[14]=h,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,r,i,s){const o=this.elements,a=1/(e-t),l=1/(n-r),c=1/(s-i),u=(e+t)*a,p=(n+r)*l,h=(s+i)*c;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-p,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-h,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Fr.prototype.isMatrix4=!0;const Hr=new ar,Gr=new Fr,Ur=new ar(0,0,0),jr=new ar(1,1,1),Vr=new ar,kr=new ar,Wr=new ar,qr=new Fr,Yr=new or;class Xr{constructor(t=0,e=0,n=0,r=Xr.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const r=t.elements,i=r[0],s=r[4],o=r[8],a=r[1],l=r[5],c=r[9],u=r[2],p=r[6],h=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(Vn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,h),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(p,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Vn(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,h),this._z=Math.atan2(a,l)):(this._y=Math.atan2(-u,i),this._z=0);break;case"ZXY":this._x=Math.asin(Vn(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-u,h),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(a,i));break;case"ZYX":this._y=Math.asin(-Vn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(p,h),this._z=Math.atan2(a,i)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(Vn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,i)):(this._x=0,this._y=Math.atan2(o,h));break;case"XZY":this._z=Math.asin(-Vn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(p,l),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-c,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return qr.makeRotationFromQuaternion(t),this.setFromRotationMatrix(qr,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return Yr.setFromEuler(this),this.setFromQuaternion(Yr,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new ar(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Xr.prototype.isEuler=!0,Xr.DefaultOrder="XYZ",Xr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Jr{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Zr=0;const Qr=new ar,Kr=new or,$r=new Fr,ti=new ar,ei=new ar,ni=new ar,ri=new or,ii=new ar(1,0,0),si=new ar(0,1,0),oi=new ar(0,0,1),ai={type:"added"},li={type:"removed"},ci=new ar(0,0,0),ui=new or,pi=new ar(1,1,1),hi=new Fr;hi.identity();class di extends Nn{constructor(){super(),Object.defineProperty(this,"id",{value:Zr++}),this.uuid=jn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=di.DefaultUp.clone();const t=new ar,e=new Xr,n=new or,r=new ar(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Fr},normalMatrix:{value:new Qn}}),this.matrix=new Fr,this.matrixWorld=new Fr,this.matrixAutoUpdate=di.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Jr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale),this._handleMatrixModification(this)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Kr.setFromAxisAngle(t,e),this.quaternion.multiply(Kr),this}rotateOnWorldAxis(t,e){return Kr.setFromAxisAngle(t,e),this.quaternion.premultiply(Kr),this}rotateX(t){return this.rotateOnAxis(ii,t)}rotateY(t){return this.rotateOnAxis(si,t)}rotateZ(t){return this.rotateOnAxis(oi,t)}translateOnAxis(t,e){return Qr.copy(t).applyQuaternion(this.quaternion),this.position.add(Qr.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ii,t)}translateY(t){return this.translateOnAxis(si,t)}translateZ(t){return this.translateOnAxis(oi,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4($r.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ti.copy(t):ti.set(t,e,n);const r=this.parent;r&&r.updateMatrices(),this.updateMatrices(),ei.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$r.lookAt(ei,ti,this.up):$r.lookAt(ti,ei,this.up),this.quaternion.setFromRotationMatrix($r),r&&($r.extractRotation(r.matrixWorld),Kr.setFromRotationMatrix($r),this.quaternion.premultiply(Kr.invert())),this.matrixNeedsUpdate=!0}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ai)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(li)),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(li)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),$r.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),$r.multiply(t.parent.matrixWorld)),t.applyMatrix4($r),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(t,e);if(void 0!==r)return r}}getWorldPosition(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new ar),this.updateMatrices(),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new or),this.updateMatrices(),this.matrixWorld.decompose(ei,t,ni),t}getWorldScale(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new ar),this.updateMatrices(),this.matrixWorld.decompose(ei,ri,t),t}getWorldDirection(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new ar),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}_handleMatrixModification(){this.matrixIsModified||(this.matrixIsModified=!0,this.cachedMatrixWorld&&(this.cachedMatrixWorld.copy(this.matrixWorld),this.matrixWorld=this.cachedMatrixWorld))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0,this._handleMatrixModification(this)}updateMatrixWorld(t,e){if(!this.visible&&!e)return;this.updateMatrices(!1,t,!0);const n=this.children,r=this.childrenNeedMatrixWorldUpdate||t;for(let t=0,i=n.length;t<i;t++)n[t].updateMatrixWorld(r,e);this.childrenNeedMatrixWorldUpdate&&(this.childrenNeedMatrixWorldUpdate=!1)}updateWorldMatrix(t,e){if(this.updateMatrices(!1,!1,!t),e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateMatrixWorld(!1,!1);this.childrenNeedMatrixWorldUpdate&&(this.childrenNeedMatrixWorldUpdate=!1)}}updateMatrices(t,e,n){this.hasHadFirstMatrixUpdate?(this.matrixNeedsUpdate||this.matrixAutoUpdate||t)&&(this.updateMatrix(),this.matrixNeedsUpdate&&(this.matrixNeedsUpdate=!1)):(this.position.equals(ci)&&this.quaternion.equals(ui)&&this.scale.equals(pi)&&this.matrix.equals(hi)||this.updateMatrix(),this.hasHadFirstMatrixUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.cachedMatrixWorld=this.matrixWorld),!n&&this.parent&&(this.parent.updateMatrices(!1,e,!1),this.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate||this.parent.childrenNeedMatrixWorldUpdate),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixIsModified?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld=this.parent.matrixWorld,this.childrenNeedMatrixWorldUpdate=!0,this.matrixWorldNeedsUpdate=!1)}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];i(t.shapes,r)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(i(t.materials,this.material[n]));r.material=e}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(i(t.animations,n))}}if(e){const e=s(t.geometries),r=s(t.materials),i=s(t.textures),o=s(t.images),a=s(t.shapes),l=s(t.skeletons),c=s(t.animations);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),o.length>0&&(n.images=o),a.length>0&&(n.shapes=a),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c)}return n.object=r,n;function s(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}di.DefaultUp=new ar(0,1,0),di.DefaultMatrixAutoUpdate=!0,di.prototype.isObject3D=!0;const mi=new ar,fi=new ar,gi=new Qn;class _i{constructor(t=new ar(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=mi.subVectors(n,e).cross(fi.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new ar),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new ar);const n=t.delta(mi),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const i=-(t.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:e.copy(n).multiplyScalar(i).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new ar),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||gi.getNormalMatrix(t),r=this.coplanarPoint(mi).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}_i.prototype.isPlane=!0;const yi=new ar,vi=new ar,bi=new ar,xi=new ar,wi=new ar,Mi=new ar,Si=new ar,Ti=new ar,Ei=new ar,Ai=new ar;class Ci{constructor(t=new ar,e=new ar,n=new ar){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new ar),r.subVectors(n,e),yi.subVectors(t,e),r.cross(yi);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,n,r,i){yi.subVectors(r,e),vi.subVectors(n,e),bi.subVectors(t,e);const s=yi.dot(yi),o=yi.dot(vi),a=yi.dot(bi),l=vi.dot(vi),c=vi.dot(bi),u=s*l-o*o;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new ar),0===u)return i.set(-2,-1,-1);const p=1/u,h=(l*a-o*c)*p,d=(s*c-o*a)*p;return i.set(1-h-d,d,h)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,xi),xi.x>=0&&xi.y>=0&&xi.x+xi.y<=1}static getUV(t,e,n,r,i,s,o,a){return this.getBarycoord(t,e,n,r,xi),a.set(0,0),a.addScaledVector(i,xi.x),a.addScaledVector(s,xi.y),a.addScaledVector(o,xi.z),a}static isFrontFacing(t,e,n,r){return yi.subVectors(n,e),vi.subVectors(t,e),yi.cross(vi).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return yi.subVectors(this.c,this.b),vi.subVectors(this.a,this.b),.5*yi.cross(vi).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new ar),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Ci.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new _i),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Ci.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,i){return Ci.getUV(t,this.a,this.b,this.c,e,n,r,i)}containsPoint(t){return Ci.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Ci.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new ar);const n=this.a,r=this.b,i=this.c;let s,o;wi.subVectors(r,n),Mi.subVectors(i,n),Ti.subVectors(t,n);const a=wi.dot(Ti),l=Mi.dot(Ti);if(a<=0&&l<=0)return e.copy(n);Ei.subVectors(t,r);const c=wi.dot(Ei),u=Mi.dot(Ei);if(c>=0&&u<=c)return e.copy(r);const p=a*u-c*l;if(p<=0&&a>=0&&c<=0)return s=a/(a-c),e.copy(n).addScaledVector(wi,s);Ai.subVectors(t,i);const h=wi.dot(Ai),d=Mi.dot(Ai);if(d>=0&&h<=d)return e.copy(i);const m=h*l-a*d;if(m<=0&&l>=0&&d<=0)return o=l/(l-d),e.copy(n).addScaledVector(Mi,o);const f=c*d-h*u;if(f<=0&&u-c>=0&&h-d>=0)return Si.subVectors(i,r),o=(u-c)/(u-c+(h-d)),e.copy(r).addScaledVector(Si,o);const g=1/(f+m+p);return s=m*g,o=p*g,e.copy(n).addScaledVector(wi,s).addScaledVector(Mi,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Li=0;function zi(){Object.defineProperty(this,"id",{value:Li++}),this.uuid=jn(),this.name="",this.type="Material",this.fog=!0,this.blending=b,this.side=m,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=I,this.blendDst=O,this.blendEquation=T,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=k,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Tn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=pn,this.stencilZFail=pn,this.stencilZPass=pn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}zi.prototype=Object.assign(Object.create(Nn.prototype),{constructor:zi,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===_;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==b&&(n.blending=this.blending),this.side!==m&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=r(t.textures),i=r(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(zi.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const Ri={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Pi={h:0,s:0,l:0},Di={h:0,s:0,l:0};function Ii(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function Oi(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Bi(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Ni{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=kn(t,1),e=Vn(e,0,1),n=Vn(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,i=2*n-r;this.r=Ii(i,r,t+1/3),this.g=Ii(i,r,t),this.b=Ii(i,r,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const r=n[1],i=n[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const n=parseFloat(t[1])/360,r=parseInt(t[2],10)/100,i=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,r,i)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Ri[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Oi(t.r),this.g=Oi(t.g),this.b=Oi(t.b),this}copyLinearToSRGB(t){return this.r=Bi(t.r),this.g=Bi(t.g),this.b=Bi(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,r=this.b,i=Math.max(e,n,r),s=Math.min(e,n,r);let o,a;const l=(s+i)/2;if(s===i)o=0,a=0;else{const t=i-s;switch(a=l<=.5?t/(i+s):t/(2-i-s),i){case e:o=(n-r)/t+(n<r?6:0);break;case n:o=(r-e)/t+2;break;case r:o=(e-n)/t+4}o/=6}return t.h=o,t.s=a,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(Pi),Pi.h+=t,Pi.s+=e,Pi.l+=n,this.setHSL(Pi.h,Pi.s,Pi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Pi),t.getHSL(Di);const n=Wn(Pi.h,Di.h,e),r=Wn(Pi.s,Di.s,e),i=Wn(Pi.l,Di.l,e);return this.setHSL(n,r,i),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Ni.NAMES=Ri,Ni.prototype.isColor=!0,Ni.prototype.r=1,Ni.prototype.g=1,Ni.prototype.b=1;class Fi extends zi{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Ni(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}Fi.prototype.isMeshBasicMaterial=!0;const Hi=new ar,Gi=new Zn;class Ui{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=En,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new Ni),e[n++]=i.r,e[n++]=i.g,e[n++]=i.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new Zn),e[n++]=i.x,e[n++]=i.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new ar),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new rr),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z,e[n++]=i.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Gi.fromBufferAttribute(this,e),Gi.applyMatrix3(t),this.setXY(e,Gi.x,Gi.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Hi.fromBufferAttribute(this,e),Hi.applyMatrix3(t),this.setXYZ(e,Hi.x,Hi.y,Hi.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Hi.x=this.getX(e),Hi.y=this.getY(e),Hi.z=this.getZ(e),Hi.applyMatrix4(t),this.setXYZ(e,Hi.x,Hi.y,Hi.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Hi.x=this.getX(e),Hi.y=this.getY(e),Hi.z=this.getZ(e),Hi.applyNormalMatrix(t),this.setXYZ(e,Hi.x,Hi.y,Hi.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Hi.x=this.getX(e),Hi.y=this.getY(e),Hi.z=this.getZ(e),Hi.transformDirection(t),this.setXYZ(e,Hi.x,Hi.y,Hi.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==En&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}Ui.prototype.isBufferAttribute=!0;class ji extends Ui{constructor(t,e,n){super(new Int8Array(t),e,n)}}class Vi extends Ui{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class ki extends Ui{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class Wi extends Ui{constructor(t,e,n){super(new Int16Array(t),e,n)}}class qi extends Ui{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Yi extends Ui{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Xi extends Ui{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Ji extends Ui{constructor(t,e,n){super(new Uint16Array(t),e,n)}}Ji.prototype.isFloat16BufferAttribute=!0;class Zi extends Ui{constructor(t,e,n){super(new Float32Array(t),e,n)}}class Qi extends Ui{constructor(t,e,n){super(new Float64Array(t),e,n)}}function Ki(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e}const $i={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ts(t,e){return new $i[t](e)}let es=0;const ns=new Fr,rs=new di,is=new ar,ss=new ur,os=new ur,as=new ar;class ls extends Nn{constructor(){super(),Object.defineProperty(this,"id",{value:es++}),this.uuid=jn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ki(t)>65535?Xi:qi)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Qn).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(t){return ns.makeRotationX(t),this.applyMatrix4(ns),this}rotateY(t){return ns.makeRotationY(t),this.applyMatrix4(ns),this}rotateZ(t){return ns.makeRotationZ(t),this.applyMatrix4(ns),this}translate(t,e,n){return ns.makeTranslation(t,e,n),this.applyMatrix4(ns),this}scale(t,e,n){return ns.makeScale(t,e,n),this.applyMatrix4(ns),this}lookAt(t){return rs.lookAt(t),rs.updateMatrix(),this.applyMatrix4(rs.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(is).negate(),this.translate(is.x,is.y,is.z),this}setFromPoints(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Zi(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ur);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new ar(-1/0,-1/0,-1/0),new ar(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];ss.setFromBufferAttribute(n),this.morphTargetsRelative?(as.addVectors(this.boundingBox.min,ss.min),this.boundingBox.expandByPoint(as),as.addVectors(this.boundingBox.max,ss.max),this.boundingBox.expandByPoint(as)):(this.boundingBox.expandByPoint(ss.min),this.boundingBox.expandByPoint(ss.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Lr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new ar,1/0);if(t){const n=this.boundingSphere.center;if(ss.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];os.setFromBufferAttribute(n),this.morphTargetsRelative?(as.addVectors(ss.min,os.min),ss.expandByPoint(as),as.addVectors(ss.max,os.max),ss.expandByPoint(as)):(ss.expandByPoint(os.min),ss.expandByPoint(os.max))}ss.getCenter(n);let r=0;for(let e=0,i=t.count;e<i;e++)as.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(as));if(e)for(let i=0,s=e.length;i<s;i++){const s=e[i],o=this.morphTargetsRelative;for(let e=0,i=s.count;e<i;e++)as.fromBufferAttribute(s,e),o&&(is.fromBufferAttribute(t,e),as.add(is)),r=Math.max(r,n.distanceToSquared(as))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,i=e.normal.array,s=e.uv.array,o=r.length/3;void 0===e.tangent&&this.setAttribute("tangent",new Ui(new Float32Array(4*o),4));const a=e.tangent.array,l=[],c=[];for(let t=0;t<o;t++)l[t]=new ar,c[t]=new ar;const u=new ar,p=new ar,h=new ar,d=new Zn,m=new Zn,f=new Zn,g=new ar,_=new ar;function y(t,e,n){u.fromArray(r,3*t),p.fromArray(r,3*e),h.fromArray(r,3*n),d.fromArray(s,2*t),m.fromArray(s,2*e),f.fromArray(s,2*n),p.sub(u),h.sub(u),m.sub(d),f.sub(d);const i=1/(m.x*f.y-f.x*m.y);isFinite(i)&&(g.copy(p).multiplyScalar(f.y).addScaledVector(h,-m.y).multiplyScalar(i),_.copy(h).multiplyScalar(m.x).addScaledVector(p,-f.x).multiplyScalar(i),l[t].add(g),l[e].add(g),l[n].add(g),c[t].add(_),c[e].add(_),c[n].add(_))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let t=0,e=v.length;t<e;++t){const e=v[t],r=e.start;for(let t=r,i=r+e.count;t<i;t+=3)y(n[t+0],n[t+1],n[t+2])}const b=new ar,x=new ar,w=new ar,M=new ar;function S(t){w.fromArray(i,3*t),M.copy(w);const e=l[t];b.copy(e),b.sub(w.multiplyScalar(w.dot(e))).normalize(),x.crossVectors(M,e);const n=x.dot(c[t])<0?-1:1;a[4*t]=b.x,a[4*t+1]=b.y,a[4*t+2]=b.z,a[4*t+3]=n}for(let t=0,e=v.length;t<e;++t){const e=v[t],r=e.start;for(let t=r,i=r+e.count;t<i;t+=3)S(n[t+0]),S(n[t+1]),S(n[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Ui(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new ar,i=new ar,s=new ar,o=new ar,a=new ar,l=new ar,c=new ar,u=new ar;if(t)for(let p=0,h=t.count;p<h;p+=3){const h=t.getX(p+0),d=t.getX(p+1),m=t.getX(p+2);r.fromBufferAttribute(e,h),i.fromBufferAttribute(e,d),s.fromBufferAttribute(e,m),c.subVectors(s,i),u.subVectors(r,i),c.cross(u),o.fromBufferAttribute(n,h),a.fromBufferAttribute(n,d),l.fromBufferAttribute(n,m),o.add(c),a.add(c),l.add(c),n.setXYZ(h,o.x,o.y,o.z),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,o=e.count;t<o;t+=3)r.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),c.subVectors(s,i),u.subVectors(r,i),c.cross(u),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const i=n[r].array,s=t.attributes[r],o=s.array,a=s.itemSize*e,l=Math.min(o.length,i.length-a);for(let t=0,e=a;t<l;t++,e++)i[e]=o[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)as.fromBufferAttribute(t,e),as.normalize(),t.setXYZ(e,as.x,as.y,as.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,i=t.normalized,s=new n.constructor(e.length*r);let o=0,a=0;for(let t=0,i=e.length;t<i;t++){o=e[t]*r;for(let t=0;t<r;t++)s[a++]=n[o++]}return new Ui(s,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ls,n=this.index.array,r=this.attributes;for(const i in r){const s=t(r[i],n);e.setAttribute(i,s)}const i=this.morphAttributes;for(const r in i){const s=[],o=i[r];for(let e=0,r=o.length;e<r;e++){const r=t(o[e],n);s.push(r)}e.morphAttributes[r]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,n=s.length;t<n;t++){const n=s[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const r=n[e];t.data.attributes[e]=r.toJSON(t.data)}const r={};let i=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],s=[];for(let e=0,r=n.length;e<r;e++){const r=n[e];s.push(r.toJSON(t.data))}s.length>0&&(r[e]=s,i=!0)}i&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return null!==o&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return(new ls).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const r=t.attributes;for(const t in r){const n=r[t];this.setAttribute(t,n.clone(e))}const i=t.morphAttributes;for(const t in i){const n=[],r=i[t];for(let t=0,i=r.length;t<i;t++)n.push(r[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const o=t.boundingBox;null!==o&&(this.boundingBox=o.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}ls.prototype.isBufferGeometry=!0;const cs=new Fr,us=new Nr,ps=new Lr,hs=new ar,ds=new ar,ms=new ar,fs=new ar,gs=new ar,_s=new ar,ys=new ar,vs=new ar,bs=new ar,xs=new Zn,ws=new Zn,Ms=new Zn,Ss=new ar,Ts=new ar;class Es extends di{constructor(t=new ls,e=new Fi){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),ps.copy(n.boundingSphere),ps.applyMatrix4(i),!1===t.ray.intersectsSphere(ps))return;if(cs.copy(i).invert(),us.copy(t.ray).applyMatrix4(cs),null!==n.boundingBox&&!1===us.intersectsBox(n.boundingBox))return;let s;if(n.isBufferGeometry){const i=n.index,o=n.attributes.position,a=n.morphAttributes.position,l=n.morphTargetsRelative,c=n.attributes.uv,u=n.attributes.uv2,p=n.groups,h=n.drawRange;if(null!==i)if(Array.isArray(r))for(let n=0,d=p.length;n<d;n++){const d=p[n],m=r[d.materialIndex];for(let n=Math.max(d.start,h.start),r=Math.min(d.start+d.count,h.start+h.count);n<r;n+=3){const r=i.getX(n),p=i.getX(n+1),h=i.getX(n+2);s=As(this,m,t,us,o,a,l,c,u,r,p,h),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=d.materialIndex,e.push(s))}}else{for(let n=Math.max(0,h.start),p=Math.min(i.count,h.start+h.count);n<p;n+=3){const p=i.getX(n),h=i.getX(n+1),d=i.getX(n+2);s=As(this,r,t,us,o,a,l,c,u,p,h,d),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}}else if(void 0!==o)if(Array.isArray(r))for(let n=0,i=p.length;n<i;n++){const i=p[n],d=r[i.materialIndex];for(let n=Math.max(i.start,h.start),r=Math.min(i.start+i.count,h.start+h.count);n<r;n+=3){s=As(this,d,t,us,o,a,l,c,u,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),s.face.materialIndex=i.materialIndex,e.push(s))}}else{for(let n=Math.max(0,h.start),i=Math.min(o.count,h.start+h.count);n<i;n+=3){s=As(this,r,t,us,o,a,l,c,u,n,n+1,n+2),s&&(s.faceIndex=Math.floor(n/3),e.push(s))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function As(t,e,n,r,i,s,o,a,l,c,u,p){hs.fromBufferAttribute(i,c),ds.fromBufferAttribute(i,u),ms.fromBufferAttribute(i,p);const h=t.morphTargetInfluences;if(e.morphTargets&&s&&h){ys.set(0,0,0),vs.set(0,0,0),bs.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const e=h[t],n=s[t];0!==e&&(fs.fromBufferAttribute(n,c),gs.fromBufferAttribute(n,u),_s.fromBufferAttribute(n,p),o?(ys.addScaledVector(fs,e),vs.addScaledVector(gs,e),bs.addScaledVector(_s,e)):(ys.addScaledVector(fs.sub(hs),e),vs.addScaledVector(gs.sub(ds),e),bs.addScaledVector(_s.sub(ms),e)))}hs.add(ys),ds.add(vs),ms.add(bs)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(c,hs),t.boneTransform(u,ds),t.boneTransform(p,ms));const d=function(t,e,n,r,i,s,o,a){let l;if(l=e.side===f?r.intersectTriangle(o,s,i,!0,a):r.intersectTriangle(i,s,o,e.side!==g,a),null===l)return null;Ts.copy(a),Ts.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Ts);return c<n.near||c>n.far?null:{distance:c,point:Ts.clone(),object:t}}(t,e,n,r,hs,ds,ms,Ss);if(d){a&&(xs.fromBufferAttribute(a,c),ws.fromBufferAttribute(a,u),Ms.fromBufferAttribute(a,p),d.uv=Ci.getUV(Ss,hs,ds,ms,xs,ws,Ms,new Zn)),l&&(xs.fromBufferAttribute(l,c),ws.fromBufferAttribute(l,u),Ms.fromBufferAttribute(l,p),d.uv2=Ci.getUV(Ss,hs,ds,ms,xs,ws,Ms,new Zn));const t={a:c,b:u,c:p,normal:new ar,materialIndex:0};Ci.getNormal(hs,ds,ms,t.normal),d.face=t}return d}Es.prototype.isMesh=!0;class Cs extends ls{constructor(t=1,e=1,n=1,r=1,i=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};const o=this;r=Math.floor(r),i=Math.floor(i),s=Math.floor(s);const a=[],l=[],c=[],u=[];let p=0,h=0;function d(t,e,n,r,i,s,d,m,f,g,_){const y=s/f,v=d/g,b=s/2,x=d/2,w=m/2,M=f+1,S=g+1;let T=0,E=0;const A=new ar;for(let s=0;s<S;s++){const o=s*v-x;for(let a=0;a<M;a++){const p=a*y-b;A[t]=p*r,A[e]=o*i,A[n]=w,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=m>0?1:-1,c.push(A.x,A.y,A.z),u.push(a/f),u.push(1-s/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){const n=p+e+M*t,r=p+e+M*(t+1),i=p+(e+1)+M*(t+1),s=p+(e+1)+M*t;a.push(n,r,s),a.push(r,i,s),E+=6}o.addGroup(h,E,_),h+=E,p+=T}d("z","y","x",-1,-1,n,e,t,s,i,0),d("z","y","x",1,-1,n,e,-t,s,i,1),d("x","z","y",1,1,t,n,e,r,s,2),d("x","z","y",1,-1,t,n,-e,r,s,3),d("x","y","z",1,-1,t,e,n,r,i,4),d("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(a),this.setAttribute("position",new Zi(l,3)),this.setAttribute("normal",new Zi(c,3)),this.setAttribute("uv",new Zi(u,2))}}function Ls(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}}return e}function zs(t){const e={};for(let n=0;n<t.length;n++){const r=Ls(t[n]);for(const t in r)e[t]=r[t]}return e}const Rs={clone:Ls,merge:zs};class Ps extends zi{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ls(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?e.uniforms[n]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[n]={type:"m4",value:r.toArray()}:e.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}Ps.prototype.isShaderMaterial=!0;class Ds extends di{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Fr,this.projectionMatrix=new Fr,this.projectionMatrixInverse=new Fr}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new ar),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Ds.prototype.isCamera=!0;class Is extends Ds{constructor(t=50,e=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Un*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Gn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Un*Math.atan(Math.tan(.5*Gn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,i,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Gn*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,o=s.fullHeight;i+=s.offsetX*r/t,e-=s.offsetY*n/o,r*=s.width/t,n*=s.height/o}const o=this.filmOffset;0!==o&&(i+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}Is.prototype.isPerspectiveCamera=!0;class Os extends di{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new Is(90,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ar(1,0,0)),this.add(r);const i=new Is(90,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new ar(-1,0,0)),this.add(i);const s=new Is(90,1,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new ar(0,1,0)),this.add(s);const o=new Is(90,1,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new ar(0,-1,0)),this.add(o);const a=new Is(90,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new ar(0,0,1)),this.add(a);const l=new Is(90,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new ar(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,i,s,o,a,l]=this.children,c=t.xr.enabled,u=t.getRenderTarget();t.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,i),t.setRenderTarget(n,2),t.render(e,s),t.setRenderTarget(n,3),t.render(e,o),t.setRenderTarget(n,4),t.render(e,a),n.texture.generateMipmaps=p,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(u),t.xr.enabled=c}}class Bs extends er{constructor(t,e,n,r,i,s,o,a,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:ot,n,r,i,s,o=void 0!==o?o:Ft,a,l,c),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Bs.prototype.isCubeTexture=!0;class Ns extends ir{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new Bs(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:bt,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Ht,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\t\t\t\t\t${e.flipY?"":"sampleUV.y = 1.0 - sampleUV.y;"}\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`},r=new Cs(5,5,5),i=new Ps({name:"CubemapFromEquirect",uniforms:Ls(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:f,blending:v});i.uniforms.tEquirect.value=e;const s=new Es(r,i),o=e.minFilter;return e.minFilter===Mt&&(e.minFilter=bt),new Os(1,10,this).update(t,s),e.minFilter=o,s.geometry.dispose(),s.material.dispose(),this}clear(t,e,n,r){const i=t.getRenderTarget();for(let i=0;i<6;i++)t.setRenderTarget(this,i),t.clear(e,n,r);t.setRenderTarget(i)}}Ns.prototype.isWebGLCubeRenderTarget=!0;class Fs extends er{constructor(t,e,n,r,i,s,o,a,l,c,u,p){super(null,s,o,a,l,c,r,i,u,p),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==l?l:ft,this.minFilter=void 0!==c?c:ft,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Fs.prototype.isDataTexture=!0;const Hs=new Lr,Gs=new ar;class Us{constructor(t=new _i,e=new _i,n=new _i,r=new _i,i=new _i,s=new _i){this.planes=[t,e,n,r,i,s]}set(t,e,n,r,i,s){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(s),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],i=n[1],s=n[2],o=n[3],a=n[4],l=n[5],c=n[6],u=n[7],p=n[8],h=n[9],d=n[10],m=n[11],f=n[12],g=n[13],_=n[14],y=n[15];return e[0].setComponents(o-r,u-a,m-p,y-f).normalize(),e[1].setComponents(o+r,u+a,m+p,y+f).normalize(),e[2].setComponents(o+i,u+l,m+h,y+g).normalize(),e[3].setComponents(o-i,u-l,m-h,y-g).normalize(),e[4].setComponents(o-s,u-c,m-d,y-_).normalize(),e[5].setComponents(o+s,u+c,m+d,y+_).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Hs.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Hs)}intersectsSprite(t){return Hs.center.set(0,0,0),Hs.radius=.7071067811865476,Hs.applyMatrix4(t.matrixWorld),this.intersectsSphere(Hs)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<r)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(Gs.x=r.normal.x>0?t.max.x:t.min.x,Gs.y=r.normal.y>0?t.max.y:t.min.y,Gs.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Gs)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function js(){let t=null,e=!1,n=null,r=null;function i(e,s){n(e,s),r=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Vs(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=r.get(e);n&&(t.deleteBuffer(n.buffer),r.delete(e))},update:function(e,i){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=r.get(e);void 0===s?r.set(e,function(e,r){const i=e.array,s=e.usage,o=t.createBuffer();t.bindBuffer(r,o),t.bufferData(r,i,s),e.onUploadCallback();let a=5126;return i instanceof Float32Array?a=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?e.isFloat16BufferAttribute?n?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:i instanceof Int16Array?a=5122:i instanceof Uint32Array?a=5125:i instanceof Int32Array?a=5124:i instanceof Int8Array?a=5120:i instanceof Uint8Array&&(a=5121),{buffer:o,type:a,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(e,i)):s.version<e.version&&(!function(e,r,i){const s=r.array,o=r.updateRange;t.bindBuffer(i,e),-1===o.count?t.bufferSubData(i,0,s):(n?t.bufferSubData(i,o.offset*s.BYTES_PER_ELEMENT,s,o.offset,o.count):t.bufferSubData(i,o.offset*s.BYTES_PER_ELEMENT,s.subarray(o.offset,o.offset+o.count)),o.count=-1)}(s.buffer,e,i),s.version=e.version)}}}class ks extends ls{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const i=t/2,s=e/2,o=Math.floor(n),a=Math.floor(r),l=o+1,c=a+1,u=t/o,p=e/a,h=[],d=[],m=[],f=[];for(let t=0;t<c;t++){const e=t*p-s;for(let n=0;n<l;n++){const r=n*u-i;d.push(r,-e,0),m.push(0,0,1),f.push(n/o),f.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<o;e++){const n=e+l*t,r=e+l*(t+1),i=e+1+l*(t+1),s=e+1+l*t;h.push(n,r,s),h.push(r,i,s)}this.setIndex(h),this.setAttribute("position",new Zi(d,3)),this.setAttribute("normal",new Zi(m,3)),this.setAttribute("uv",new Zi(f,2))}}const Ws={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV ) && !defined(USE_LIGHTMAP)\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\n#ifdef LUT_TONE_MAPPING\n\tprecision highp sampler3D;\n\tuniform sampler3D tonemappingLUT;\n\tvec3 LUTToneMapping( vec3 color ) {\n\t\tcolor *= toneMappingExposure;\n\t\tfloat lutSize = 32.0;\n\t\tfloat pixelWidth = 1.0 / lutSize;\n\t\tfloat halfPixelWidth = 0.5 / lutSize;\n\t\tvec3 uvw = vec3( halfPixelWidth ) + color.rgb * ( 1.0 - pixelWidth );\n\t\treturn texture( tonemappingLUT, uvw ).rgb;\n\t}\n#endif\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},qs={common:{diffuse:{value:new Ni(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Qn},uv2Transform:{value:new Qn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Zn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ni(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ni(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Qn}},sprite:{diffuse:{value:new Ni(15658734)},opacity:{value:1},center:{value:new Zn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Qn}}},Ys={basic:{uniforms:zs([qs.common,qs.specularmap,qs.envmap,qs.aomap,qs.lightmap,qs.fog]),vertexShader:Ws.meshbasic_vert,fragmentShader:Ws.meshbasic_frag},lambert:{uniforms:zs([qs.common,qs.specularmap,qs.envmap,qs.aomap,qs.lightmap,qs.emissivemap,qs.fog,qs.lights,{emissive:{value:new Ni(0)}}]),vertexShader:Ws.meshlambert_vert,fragmentShader:Ws.meshlambert_frag},phong:{uniforms:zs([qs.common,qs.specularmap,qs.envmap,qs.aomap,qs.lightmap,qs.emissivemap,qs.bumpmap,qs.normalmap,qs.displacementmap,qs.fog,qs.lights,{emissive:{value:new Ni(0)},specular:{value:new Ni(1118481)},shininess:{value:30}}]),vertexShader:Ws.meshphong_vert,fragmentShader:Ws.meshphong_frag},standard:{uniforms:zs([qs.common,qs.envmap,qs.aomap,qs.lightmap,qs.emissivemap,qs.bumpmap,qs.normalmap,qs.displacementmap,qs.roughnessmap,qs.metalnessmap,qs.fog,qs.lights,{emissive:{value:new Ni(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ws.meshphysical_vert,fragmentShader:Ws.meshphysical_frag},toon:{uniforms:zs([qs.common,qs.aomap,qs.lightmap,qs.emissivemap,qs.bumpmap,qs.normalmap,qs.displacementmap,qs.gradientmap,qs.fog,qs.lights,{emissive:{value:new Ni(0)}}]),vertexShader:Ws.meshtoon_vert,fragmentShader:Ws.meshtoon_frag},matcap:{uniforms:zs([qs.common,qs.bumpmap,qs.normalmap,qs.displacementmap,qs.fog,{matcap:{value:null}}]),vertexShader:Ws.meshmatcap_vert,fragmentShader:Ws.meshmatcap_frag},points:{uniforms:zs([qs.points,qs.fog]),vertexShader:Ws.points_vert,fragmentShader:Ws.points_frag},dashed:{uniforms:zs([qs.common,qs.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ws.linedashed_vert,fragmentShader:Ws.linedashed_frag},depth:{uniforms:zs([qs.common,qs.displacementmap]),vertexShader:Ws.depth_vert,fragmentShader:Ws.depth_frag},normal:{uniforms:zs([qs.common,qs.bumpmap,qs.normalmap,qs.displacementmap,{opacity:{value:1}}]),vertexShader:Ws.normal_vert,fragmentShader:Ws.normal_frag},sprite:{uniforms:zs([qs.sprite,qs.fog]),vertexShader:Ws.sprite_vert,fragmentShader:Ws.sprite_frag},background:{uniforms:{uvTransform:{value:new Qn},t2D:{value:null}},vertexShader:Ws.background_vert,fragmentShader:Ws.background_frag},cube:{uniforms:zs([qs.envmap,{opacity:{value:1}}]),vertexShader:Ws.cube_vert,fragmentShader:Ws.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ws.equirect_vert,fragmentShader:Ws.equirect_frag},distanceRGBA:{uniforms:zs([qs.common,qs.displacementmap,{referencePosition:{value:new ar},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ws.distanceRGBA_vert,fragmentShader:Ws.distanceRGBA_frag},shadow:{uniforms:zs([qs.lights,qs.fog,{color:{value:new Ni(0)},opacity:{value:1}}]),vertexShader:Ws.shadow_vert,fragmentShader:Ws.shadow_frag}};function Xs(t,e,n,r,i){const s=new Ni(0);let o,a,l=0,c=null,u=0,p=null;function h(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,i)}return{getClearColor:function(){return s},setClearColor:function(t,e=1){s.set(t),l=e,h(s,l)},getClearAlpha:function(){return l},setClearAlpha:function(t){l=t,h(s,l)},render:function(n,i,d,g){let _=!0===i.isScene?i.background:null;_&&_.isTexture&&(_=e.get(_));const y=t.xr,v=y.getSession&&y.getSession();v&&"additive"===v.environmentBlendMode&&(_=null),null===_?h(s,l):_&&_.isColor&&(h(_,1),g=!0),(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),_&&(_.isCubeTexture||_.mapping===ut)?(void 0===a&&(a=new Es(new Cs(1,1,1),new Ps({name:"BackgroundCubeMaterial",uniforms:Ls(Ys.cube.uniforms),vertexShader:Ys.cube.vertexShader,fragmentShader:Ys.cube.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(a)),a.material.uniforms.envMap.value=_,a.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_._needsFlipEnvMap?-1:1,c===_&&u===_.version&&p===t.toneMapping||(a.material.needsUpdate=!0,c=_,u=_.version,p=t.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null)):_&&_.isTexture&&(void 0===o&&(o=new Es(new ks(2,2),new Ps({name:"BackgroundMaterial",uniforms:Ls(Ys.background.uniforms),vertexShader:Ys.background.vertexShader,fragmentShader:Ys.background.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=_,!0===_.matrixAutoUpdate&&_.updateMatrix(),o.material.uniforms.uvTransform.value.copy(_.matrix),c===_&&u===_.version&&p===t.toneMapping||(o.material.needsUpdate=!0,c=_,u=_.version,p=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null))}}}function Js(t,e,n,r){const i=t.getParameter(34921),s=r.isWebGL2?null:e.get("OES_vertex_array_object"),o=r.isWebGL2||null!==s,a={},l=h(null);let c=l;function u(e){return r.isWebGL2?t.bindVertexArray(e):s.bindVertexArrayOES(e)}function p(e){return r.isWebGL2?t.deleteVertexArray(e):s.deleteVertexArrayOES(e)}function h(t){const e=[],n=[],r=[];for(let t=0;t<i;t++)e[t]=0,n[t]=0,r[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function d(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function m(t){f(t,0)}function f(n,i){const s=c.newAttributes,o=c.enabledAttributes,a=c.attributeDivisors;if(s[n]=1,0===o[n]&&(t.enableVertexAttribArray(n),o[n]=1),a[n]!==i){(r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),a[n]=i}}function g(){const e=c.newAttributes,n=c.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function _(e,n,i,s,o,a){!0!==r.isWebGL2||5124!==i&&5125!==i?t.vertexAttribPointer(e,n,i,s,o,a):t.vertexAttribIPointer(e,n,i,o,a)}function y(){v(),c!==l&&(c=l,u(c.object))}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,p,y,v){let b=!1;if(o){const e=function(e,n,i){const o=!0===i.wireframe;let l=a[e.id];void 0===l&&(l={},a[e.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let u=c[o];void 0===u&&(u=h(r.isWebGL2?t.createVertexArray():s.createVertexArrayOES()),c[o]=u);return u}(y,p,l);c!==e&&(c=e,u(c.object)),b=function(t,e){const n=c.attributes,r=t.attributes;let i=0;for(const t in r){const e=n[t],s=r[t];if(void 0===e)return!0;if(e.attribute!==s)return!0;if(e.data!==s.data)return!0;i++}return c.attributesNum!==i||c.index!==e}(y,v),b&&function(t,e){const n={},r=t.attributes;let i=0;for(const t in r){const e=r[t],s={};s.attribute=e,e.data&&(s.data=e.data),n[t]=s,i++}c.attributes=n,c.attributesNum=i,c.index=e}(y,v)}else{const t=!0===l.wireframe;c.geometry===y.id&&c.program===p.id&&c.wireframe===t||(c.geometry=y.id,c.program=p.id,c.wireframe=t,b=!0)}!0===i.isInstancedMesh&&(b=!0),null!==v&&n.update(v,34963),b&&(!function(i,s,o,a){if(!1===r.isWebGL2&&(i.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;d();const l=a.attributes,c=o.getAttributes(),u=s.defaultAttributeValues;for(const e in c){const r=c[e];if(r>=0){const s=l[e];if(void 0!==s){const e=s.normalized,i=s.itemSize,o=n.get(s);if(void 0===o)continue;const l=o.buffer,c=o.type,u=o.bytesPerElement;if(s.isInterleavedBufferAttribute){const n=s.data,o=n.stride,p=s.offset;n&&n.isInstancedInterleavedBuffer?(f(r,n.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=n.meshPerAttribute*n.count)):m(r),t.bindBuffer(34962,l),_(r,i,c,e,o*u,p*u)}else s.isInstancedBufferAttribute?(f(r,s.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=s.meshPerAttribute*s.count)):m(r),t.bindBuffer(34962,l),_(r,i,c,e,0,0)}else if("instanceMatrix"===e){const e=n.get(i.instanceMatrix);if(void 0===e)continue;const s=e.buffer,o=e.type;f(r+0,1),f(r+1,1),f(r+2,1),f(r+3,1),t.bindBuffer(34962,s),t.vertexAttribPointer(r+0,4,o,!1,64,0),t.vertexAttribPointer(r+1,4,o,!1,64,16),t.vertexAttribPointer(r+2,4,o,!1,64,32),t.vertexAttribPointer(r+3,4,o,!1,64,48)}else if("instanceColor"===e){const e=n.get(i.instanceColor);if(void 0===e)continue;const s=e.buffer,o=e.type;f(r,1),t.bindBuffer(34962,s),t.vertexAttribPointer(r,3,o,!1,12,0)}else if(void 0!==u){const n=u[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r,n);break;case 3:t.vertexAttrib3fv(r,n);break;case 4:t.vertexAttrib4fv(r,n);break;default:t.vertexAttrib1fv(r,n)}}}}g()}(i,l,p,y),null!==v&&t.bindBuffer(34963,n.get(v).buffer))},reset:y,resetDefaultState:v,dispose:function(){y();for(const t in a){const e=a[t];for(const t in e){const n=e[t];for(const t in n)p(n[t].object),delete n[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const n=e[t];for(const t in n)p(n[t].object),delete n[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const n=a[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)p(r[t].object),delete r[t];delete n[t.id]}},initAttributes:d,enableAttribute:m,disableUnusedAttributes:g}}function Zs(t,e,n,r){const i=r.isWebGL2;let s;this.setMode=function(t){s=t},this.render=function(e,r){t.drawArrays(s,e,r),n.update(r,s,1)},this.renderInstances=function(r,o,a){if(0===a)return;let l,c;if(i)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](s,r,o,a),n.update(o,s,a)}}function Qs(t,e,n){let r;function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let o=void 0!==n.precision?n.precision:"highp";const a=i(o);a!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",a,"instead."),o=a);const l=!0===n.logarithmicDepthBuffer,c=t.getParameter(34930),u=t.getParameter(35660),p=t.getParameter(3379),h=t.getParameter(34076),d=t.getParameter(34921),m=t.getParameter(36347),f=t.getParameter(36348),g=t.getParameter(36349),_=u>0,y=s||e.has("OES_texture_float");return{isWebGL2:s,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:u,maxTextureSize:p,maxCubemapSize:h,maxAttributes:d,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:_,floatFragmentTextures:y,floatVertexTextures:_&&y,maxSamples:s?t.getParameter(36183):0}}function Ks(t){const e=this;let n=null,r=0,i=!1,s=!1;const o=new _i,a=new Qn,l={value:null,needsUpdate:!1};function c(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function u(t,n,r,i){const s=null!==t?t.length:0;let c=null;if(0!==s){if(c=l.value,!0!==i||null===c){const e=r+4*s,i=n.matrixWorldInverse;a.getNormalMatrix(i),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=r;e!==s;++e,n+=4)o.copy(t[e]).applyMatrix4(i,a),o.normal.toArray(c,n),c[n+3]=o.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,s){const o=0!==t.length||e||0!==r||i;return i=e,n=u(t,s,0),r=t.length,o},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(e,o,a){const p=e.clippingPlanes,h=e.clipIntersection,d=e.clipShadows,m=t.get(e);if(!i||null===p||0===p.length||s&&!d)s?u(null):c();else{const t=s?0:r,e=4*t;let i=m.clippingState||null;l.value=i,i=u(p,o,e,a);for(let t=0;t!==e;++t)i[t]=n[t];m.clippingState=i,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=t}}}function $s(t){let e=new WeakMap;function n(t,e){return e===lt?t.mapping=ot:e===ct&&(t.mapping=at),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const s=i.mapping;if(s===lt||s===ct){if(e.has(i)){return n(e.get(i).texture,i.mapping)}{const s=i.image;if(s&&s.height>0){const o=t.getRenderTarget(),a=new Ns(s.height/2);return a.fromEquirectangularTexture(t,i),e.set(i,a),t.setRenderTarget(o),i.addEventListener("dispose",r),n(a.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}function to(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function eo(t,e,n,r){const i={},s=new WeakMap;function o(t){const a=t.target;null!==a.index&&e.remove(a.index);for(const t in a.attributes)e.remove(a.attributes[t]);a.removeEventListener("dispose",o),delete i[a.id];const l=s.get(a);l&&(e.remove(l),s.delete(a)),r.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,n.memory.geometries--}function a(t){const n=[],r=t.index,i=t.attributes.position;let o=0;if(null!==r){const t=r.array;o=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],i=t[e+1],s=t[e+2];n.push(r,i,i,s,s,r)}}else{const t=i.array;o=i.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,i=e+2;n.push(t,r,r,i,i,t)}}const a=new(Ki(n)>65535?Xi:qi)(n,1);a.version=o;const l=s.get(t);l&&e.remove(l),s.set(t,a)}return{get:function(t,e){return!0===i[e.id]?e:(e.addEventListener("dispose",o),i[e.id]=!0,n.memory.geometries++,e)},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const r=t.morphAttributes;for(const t in r){const n=r[t];for(let t=0,r=n.length;t<r;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&a(t)}else a(t);return s.get(t)}}}function no(t,e,n,r){const i=r.isWebGL2;let s,o,a;this.setMode=function(t){s=t},this.setIndex=function(t){o=t.type,a=t.bytesPerElement},this.render=function(e,r){t.drawElements(s,r,o,e*a),n.update(r,s,1)},this.renderInstances=function(r,l,c){if(0===c)return;let u,p;if(i)u=t,p="drawElementsInstanced";else if(u=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[p](s,l,o,r*a,c),n.update(l,s,c)}}function ro(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function io(t,e){return t[0]-e[0]}function so(t,e){return Math.abs(e[1])-Math.abs(t[1])}function oo(t){const e={},n=new Float32Array(8),r=[];for(let t=0;t<8;t++)r[t]=[t,0];return{update:function(i,s,o,a){const l=i.morphTargetInfluences,c=void 0===l?0:l.length;let u=e[s.id];if(void 0===u){u=[];for(let t=0;t<c;t++)u[t]=[t,0];e[s.id]=u}for(let t=0;t<c;t++){const e=u[t];e[0]=t,e[1]=l[t]}u.sort(so);for(let t=0;t<8;t++)t<c&&u[t][1]?(r[t][0]=u[t][0],r[t][1]=u[t][1]):(r[t][0]=Number.MAX_SAFE_INTEGER,r[t][1]=0);r.sort(io);const p=o.morphTargets&&s.morphAttributes.position,h=o.morphNormals&&s.morphAttributes.normal;let d=0;for(let t=0;t<8;t++){const e=r[t],i=e[0],o=e[1];i!==Number.MAX_SAFE_INTEGER&&o?(p&&s.getAttribute("morphTarget"+t)!==p[i]&&s.setAttribute("morphTarget"+t,p[i]),h&&s.getAttribute("morphNormal"+t)!==h[i]&&s.setAttribute("morphNormal"+t,h[i]),n[t]=o,d+=o):(p&&!0===s.hasAttribute("morphTarget"+t)&&s.deleteAttribute("morphTarget"+t),h&&!0===s.hasAttribute("morphNormal"+t)&&s.deleteAttribute("morphNormal"+t),n[t]=0)}const m=s.morphTargetsRelative?1:1-d;a.getUniforms().setValue(t,"morphTargetBaseInfluence",m),a.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function ao(t,e,n,r){let i=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const o=r.render.frame,a=t.geometry,l=e.get(t,a);return i.get(l)!==o&&(e.update(l),i.set(l,o)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",s)&&t.addEventListener("dispose",s),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),l},dispose:function(){i=new WeakMap}}}Ys.physical={uniforms:zs([Ys.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Zn(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ni(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ws.meshphysical_vert,fragmentShader:Ws.meshphysical_frag};class lo extends er{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=ft,this.minFilter=ft,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}lo.prototype.isDataTexture2DArray=!0;class co extends er{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=ft,this.minFilter=ft,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}co.prototype.isDataTexture3D=!0;const uo=new er,po=new lo,ho=new co,mo=new Bs,fo=[],go=[],_o=new Float32Array(16),yo=new Float32Array(9),vo=new Float32Array(4);function bo(t,e,n){const r=t[0];if(r<=0||r>0)return t;const i=e*n;let s=fo[i];if(void 0===s&&(s=new Float32Array(i),fo[i]=s),0!==e){r.toArray(s,0);for(let r=1,i=0;r!==e;++r)i+=n,t[r].toArray(s,i)}return s}function xo(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function wo(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function Mo(t,e){let n=go[e];void 0===n&&(n=new Int32Array(e),go[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function So(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function To(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(xo(n,e))return;t.uniform2fv(this.addr,e),wo(n,e)}}function Eo(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(xo(n,e))return;t.uniform3fv(this.addr,e),wo(n,e)}}function Ao(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(xo(n,e))return;t.uniform4fv(this.addr,e),wo(n,e)}}function Co(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(xo(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),wo(n,e)}else{if(xo(n,r))return;vo.set(r),t.uniformMatrix2fv(this.addr,!1,vo),wo(n,r)}}function Lo(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(xo(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),wo(n,e)}else{if(xo(n,r))return;yo.set(r),t.uniformMatrix3fv(this.addr,!1,yo),wo(n,r)}}function zo(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(xo(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),wo(n,e)}else{if(xo(n,r))return;_o.set(r),t.uniformMatrix4fv(this.addr,!1,_o),wo(n,r)}}function Ro(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Po(t,e){const n=this.cache;xo(n,e)||(t.uniform2iv(this.addr,e),wo(n,e))}function Do(t,e){const n=this.cache;xo(n,e)||(t.uniform3iv(this.addr,e),wo(n,e))}function Io(t,e){const n=this.cache;xo(n,e)||(t.uniform4iv(this.addr,e),wo(n,e))}function Oo(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Bo(t,e){const n=this.cache;xo(n,e)||(t.uniform2uiv(this.addr,e),wo(n,e))}function No(t,e){const n=this.cache;xo(n,e)||(t.uniform3uiv(this.addr,e),wo(n,e))}function Fo(t,e){const n=this.cache;xo(n,e)||(t.uniform4uiv(this.addr,e),wo(n,e))}function Ho(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(e||uo,i)}function Go(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||ho,i)}function Uo(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(e||mo,i)}function jo(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||po,i)}function Vo(t,e){t.uniform1fv(this.addr,e)}function ko(t,e){const n=bo(e,this.size,2);t.uniform2fv(this.addr,n)}function Wo(t,e){const n=bo(e,this.size,3);t.uniform3fv(this.addr,n)}function qo(t,e){const n=bo(e,this.size,4);t.uniform4fv(this.addr,n)}function Yo(t,e){const n=bo(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Xo(t,e){const n=bo(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Jo(t,e){const n=bo(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Zo(t,e){t.uniform1iv(this.addr,e)}function Qo(t,e){t.uniform2iv(this.addr,e)}function Ko(t,e){t.uniform3iv(this.addr,e)}function $o(t,e){t.uniform4iv(this.addr,e)}function ta(t,e){t.uniform1uiv(this.addr,e)}function ea(t,e){t.uniform2uiv(this.addr,e)}function na(t,e){t.uniform3uiv(this.addr,e)}function ra(t,e){t.uniform4uiv(this.addr,e)}function ia(t,e,n){const r=e.length,i=Mo(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.safeSetTexture2D(e[t]||uo,i[t])}function sa(t,e,n){const r=e.length,i=Mo(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.safeSetTextureCube(e[t]||mo,i[t])}function oa(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return So;case 35664:return To;case 35665:return Eo;case 35666:return Ao;case 35674:return Co;case 35675:return Lo;case 35676:return zo;case 5124:case 35670:return Ro;case 35667:case 35671:return Po;case 35668:case 35672:return Do;case 35669:case 35673:return Io;case 5125:return Oo;case 36294:return Bo;case 36295:return No;case 36296:return Fo;case 35678:case 36198:case 36298:case 36306:case 35682:return Ho;case 35679:case 36299:case 36307:return Go;case 35680:case 36300:case 36308:case 36293:return Uo;case 36289:case 36303:case 36311:case 36292:return jo}}(e.type)}function aa(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Vo;case 35664:return ko;case 35665:return Wo;case 35666:return qo;case 35674:return Yo;case 35675:return Xo;case 35676:return Jo;case 5124:case 35670:return Zo;case 35667:case 35671:return Qo;case 35668:case 35672:return Ko;case 35669:case 35673:return $o;case 5125:return ta;case 36294:return ea;case 36295:return na;case 36296:return ra;case 35678:case 36198:case 36298:case 36306:case 35682:return ia;case 35680:case 36300:case 36308:case 36293:return sa}}(e.type)}function la(t){this.id=t,this.seq=[],this.map={}}aa.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),wo(e,t)},la.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,s=r.length;i!==s;++i){const s=r[i];s.setValue(t,e[s.id],n)}};const ca=/(\w+)(\])?(\[|\.)?/g;function ua(t,e){t.seq.push(e),t.map[e.id]=e}function pa(t,e,n){const r=t.name,i=r.length;for(ca.lastIndex=0;;){const s=ca.exec(r),o=ca.lastIndex;let a=s[1];const l="]"===s[2],c=s[3];if(l&&(a|=0),void 0===c||"["===c&&o+2===i){ua(n,void 0===c?new oa(a,t,e):new aa(a,t,e));break}{let t=n.map[a];void 0===t&&(t=new la(a),ua(n,t)),n=t}}}function ha(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r);pa(n,t.getUniformLocation(e,n.name),this)}}function da(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}ha.prototype.setValue=function(t,e,n,r){const i=this.map[e];void 0!==i&&i.setValue(t,n,r)},ha.prototype.setOptional=function(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)},ha.upload=function(t,e,n,r){for(let i=0,s=e.length;i!==s;++i){const s=e[i],o=n[s.id];!1!==o.needsUpdate&&s.setValue(t,o.value,r)}},ha.seqWithValue=function(t,e){const n=[];for(let r=0,i=t.length;r!==i;++r){const i=t[r];i.id in e&&n.push(i)}return n};let ma=0;function fa(t){switch(t){case Qe:return["Linear","( value )"];case Ke:return["sRGB","( value )"];case tn:return["RGBE","( value )"];case nn:return["RGBM","( value, 7.0 )"];case rn:return["RGBM","( value, 16.0 )"];case sn:return["RGBD","( value, 256.0 )"];case $e:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case en:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function ga(t,e,n){const r=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();return r&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+i+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function _a(t,e){const n=fa(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function ya(t,e){const n=fa(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function va(t,e){let n;switch(e){case $:n="Linear";break;case tt:n="Reinhard";break;case et:n="OptimizedCineon";break;case nt:n="ACESFilmic";break;case rt:n="Custom";break;case it:n="LUT";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function ba(t){return""!==t}function xa(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function wa(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Ma=/^[ \t]*#include +<([\w\d./]+)>/gm;function Sa(t){return t.replace(Ma,Ta)}function Ta(t,e){const n=Ws[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Sa(n)}const Ea=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Aa=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ca(t){return t.replace(Aa,za).replace(Ea,La)}function La(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),za(t,e,n,r)}function za(t,e,n,r){let i="";for(let t=parseInt(e);t<parseInt(n);t++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return i}function Ra(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Pa(t,e,n,r){const i=t.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===p?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===h?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===d&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case ot:case at:e="ENVMAP_TYPE_CUBE";break;case ut:case pt:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),u=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case at:case pt:e="ENVMAP_MODE_REFRACTION"}return e}(n),m=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case J:e="ENVMAP_BLENDING_MULTIPLY";break;case Z:e="ENVMAP_BLENDING_MIX";break;case Q:e="ENVMAP_BLENDING_ADD"}return e}(n),f=t.gammaFactor>0?t.gammaFactor:1,g=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ba).join("\n")}(n),_=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(s),y=i.createProgram();let v,b,x=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=[_].filter(ba).join("\n"),v.length>0&&(v+="\n"),b=[g,_].filter(ba).join("\n"),b.length>0&&(b+="\n")):(v=[Ra(n),"#define SHADER_NAME "+n.shaderName,_,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ba).join("\n"),b=[g,Ra(n),"#define SHADER_NAME "+n.shaderName,_,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+m:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==K?"#define TONE_MAPPING":"",n.toneMapping===it?"#define LUT_TONE_MAPPING":"",n.toneMapping!==K?Ws.tonemapping_pars_fragment:"",n.toneMapping!==K?va("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Ws.encodings_pars_fragment,n.map?_a("mapTexelToLinear",n.mapEncoding):"",n.matcap?_a("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?_a("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?_a("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?_a("lightMapTexelToLinear",n.lightMapEncoding):"",ya("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(ba).join("\n")),o=Sa(o),o=xa(o,n),o=wa(o,n),a=Sa(a),a=xa(a,n),a=wa(a,n),o=Ca(o),a=Ca(a),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(x="#version 300 es\n",v=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,b=["#define varying in",n.glslVersion===Bn?"":"out highp vec4 pc_fragColor;",n.glslVersion===Bn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+b);const w=x+b+a,M=da(i,35633,x+v+o),S=da(i,35632,w);if(i.attachShader(y,M),i.attachShader(y,S),void 0!==n.index0AttributeName?i.bindAttribLocation(y,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y),t.debug.checkShaderErrors){const t=i.getProgramInfoLog(y).trim(),e=i.getShaderInfoLog(M).trim(),n=i.getShaderInfoLog(S).trim();let r=!0,s=!0;if(!1===i.getProgramParameter(y,35714)){r=!1;const e=ga(i,M,"vertex"),n=ga(i,S,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(y,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(s=!1);s&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:v},fragmentShader:{log:n,prefix:b}})}let T,E;return i.deleteShader(M),i.deleteShader(S),this.getUniforms=function(){return void 0===T&&(T=new ha(i,y)),T},this.getAttributes=function(){return void 0===E&&(E=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i).name;n[r]=t.getAttribLocation(e,r)}return n}(i,y)),E},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(y),this.program=void 0},this.name=n.shaderName,this.id=ma++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=M,this.fragmentShader=S,this}function Da(t,e,n,r,i,s){const o=[],a=r.isWebGL2,l=r.logarithmicDepthBuffer,c=r.floatVertexTextures,u=r.maxVertexUniforms,p=r.vertexTextures;let h=r.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function _(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Qe,e}return{getParameters:function(i,o,m,y,v){const b=y.fog,x=i.isMeshStandardMaterial?y.environment:null,w=e.get(i.envMap||x),M=d[i.type],S=v.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(c)return 1024;{const t=u,n=Math.floor((t-20)/4),r=Math.min(n,e.length);return r<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+r+"."),0):r}}(v):0;let T,E;if(null!==i.precision&&(h=r.getMaxPrecision(i.precision),h!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",h,"instead.")),M){const t=Ys[M];T=t.vertexShader,E=t.fragmentShader}else T=i.vertexShader,E=i.fragmentShader;const A=t.getRenderTarget();return{isWebGL2:a,shaderID:M,shaderName:i.type,vertexShader:T,fragmentShader:E,defines:i.defines,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:h,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:p,outputEncoding:null!==A?_(A.texture):t.outputEncoding,map:!!i.map,mapEncoding:_(i.map),matcap:!!i.matcap,matcapEncoding:_(i.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:_(w),envMapCubeUV:!!w&&(w.mapping===ut||w.mapping===pt),lightMap:!!i.lightMap,lightMapEncoding:_(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:_(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:i.normalMapType===cn,tangentSpaceNormalMap:i.normalMapType===ln,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,transmissionMap:!!i.transmissionMap,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexAlphas:!0===i.vertexColors&&v.geometry&&v.geometry.attributes.color&&4===v.geometry.attributes.color.itemSize,vertexUvs:!!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatMap||i.clearcoatRoughnessMap||i.clearcoatNormalMap||i.displacementMap||i.transmissionMap),uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||i.transmissionMap||!i.displacementMap),fog:!!b,useFog:i.fog,fogExp2:b&&b.isFogExp2,flatShading:!!i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:l,skinning:i.skinning&&S>0,maxBones:S,useVertexTexture:c,morphTargets:i.morphTargets,morphNormals:i.morphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:i.dithering,shadowMapEnabled:t.shadowMap.enabled&&m.length>0,shadowMapType:t.shadowMap.type,toneMapping:i.toneMapped?t.toneMapping:K,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:i.side===g,flipSided:i.side===f,depthPacking:void 0!==i.depthPacking&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<m.length;t++)n.push(e[m[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=d[t.type];let n;if(e){const t=Ys[e];n=Rs.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let t=0,e=o.length;t<e;t++){const e=o[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new Pa(t,n,e,i),o.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const e=o.indexOf(t);o[e]=o[o.length-1],o.pop(),t.destroy()}},programs:o}}function Ia(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}}function Oa(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Ba(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Na(t){const e=[];let n=0;const r=[],i=[],s={id:-1};function o(r,i,o,a,l,c){let u=e[n];const p=t.get(o);return void 0===u?(u={id:r.id,object:r,geometry:i,material:o,program:p.program||s,groupOrder:a,renderOrder:r.renderOrder,z:l,group:c},e[n]=u):(u.id=r.id,u.object=r,u.geometry=i,u.material=o,u.program=p.program||s,u.groupOrder=a,u.renderOrder=r.renderOrder,u.z=l,u.group=c),n++,u}return{opaque:r,transparent:i,init:function(){n=0,r.length=0,i.length=0},push:function(t,e,n,s,a,l){const c=o(t,e,n,s,a,l);(!0===n.transparent?i:r).push(c)},unshift:function(t,e,n,s,a,l){const c=o(t,e,n,s,a,l);(!0===n.transparent?i:r).unshift(c)},finish:function(){for(let t=n,r=e.length;t<r;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){r.length>1&&r.sort(t||Oa),i.length>1&&i.sort(e||Ba)}}}function Fa(t){let e=new WeakMap;return{get:function(n,r){let i;return!1===e.has(n)?(i=new Na(t),e.set(n,[i])):r>=e.get(n).length?(i=new Na(t),e.get(n).push(i)):i=e.get(n)[r],i},dispose:function(){e=new WeakMap}}}function Ha(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new ar,color:new Ni};break;case"SpotLight":n={position:new ar,direction:new ar,color:new Ni,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new ar,color:new Ni,distance:0,decay:0};break;case"HemisphereLight":n={direction:new ar,skyColor:new Ni,groundColor:new Ni};break;case"RectAreaLight":n={color:new Ni,position:new ar,halfWidth:new ar,halfHeight:new ar}}return t[e.id]=n,n}}}let Ga=0;function Ua(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function ja(t,e){const n=new Ha,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Zn};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Zn,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)i.probe.push(new ar);const s=new ar,o=new Fr,a=new Fr;return{setup:function(s){let o=0,a=0,l=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let c=0,u=0,p=0,h=0,d=0,m=0,f=0,g=0;s.sort(Ua);for(let t=0,e=s.length;t<e;t++){const e=s[t],_=e.color,y=e.intensity,v=e.distance,b=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=_.r*y,a+=_.g*y,l+=_.b*y;else if(e.isLightProbe)for(let t=0;t<9;t++)i.probe[t].addScaledVector(e.sh.coefficients[t],y);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.directionalShadow[c]=n,i.directionalShadowMap[c]=b,i.directionalShadowMatrix[c]=e.shadow.matrix,m++}i.directional[c]=t,c++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(_).multiplyScalar(y),t.distance=v,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.spotShadow[p]=n,i.spotShadowMap[p]=b,i.spotShadowMatrix[p]=e.shadow.matrix,g++}i.spot[p]=t,p++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(_).multiplyScalar(y),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),i.rectArea[h]=t,h++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,i.pointShadow[u]=n,i.pointShadowMap[u]=b,i.pointShadowMatrix[u]=e.shadow.matrix,f++}i.point[u]=t,u++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(y),t.groundColor.copy(e.groundColor).multiplyScalar(y),i.hemi[d]=t,d++}}h>0&&(e.isWebGL2?(i.rectAreaLTC1=qs.LTC_FLOAT_1,i.rectAreaLTC2=qs.LTC_FLOAT_2):!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=qs.LTC_FLOAT_1,i.rectAreaLTC2=qs.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=qs.LTC_HALF_1,i.rectAreaLTC2=qs.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=a,i.ambient[2]=l;const _=i.hash;_.directionalLength===c&&_.pointLength===u&&_.spotLength===p&&_.rectAreaLength===h&&_.hemiLength===d&&_.numDirectionalShadows===m&&_.numPointShadows===f&&_.numSpotShadows===g||(i.directional.length=c,i.spot.length=p,i.rectArea.length=h,i.point.length=u,i.hemi.length=d,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=f,i.pointShadowMap.length=f,i.spotShadow.length=g,i.spotShadowMap.length=g,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=f,i.spotShadowMatrix.length=g,_.directionalLength=c,_.pointLength=u,_.spotLength=p,_.rectAreaLength=h,_.hemiLength=d,_.numDirectionalShadows=m,_.numPointShadows=f,_.numSpotShadows=g,i.version=Ga++)},setupView:function(t,e){let n=0,r=0,l=0,c=0,u=0;const p=e.matrixWorldInverse;for(let e=0,h=t.length;e<h;e++){const h=t[e];if(h.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(h.matrixWorld),s.setFromMatrixPosition(h.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(p),n++}else if(h.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(p),t.direction.setFromMatrixPosition(h.matrixWorld),s.setFromMatrixPosition(h.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(p),l++}else if(h.isRectAreaLight){const t=i.rectArea[c];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(p),a.identity(),o.copy(h.matrixWorld),o.premultiply(p),a.extractRotation(o),t.halfWidth.set(.5*h.width,0,0),t.halfHeight.set(0,.5*h.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),c++}else if(h.isPointLight){const t=i.point[r];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(p),r++}else if(h.isHemisphereLight){const t=i.hemi[u];t.direction.setFromMatrixPosition(h.matrixWorld),t.direction.transformDirection(p),t.direction.normalize(),u++}}},state:i}}function Va(t,e){const n=new ja(t,e),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(){n.setup(r)},setupLightsView:function(t){n.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){i.push(t)}}}function ka(t,e){let n=new WeakMap;return{get:function(r,i=0){let s;return!1===n.has(r)?(s=new Va(t,e),n.set(r,[s])):i>=n.get(r).length?(s=new Va(t,e),n.get(r).push(s)):s=n.get(r)[i],s},dispose:function(){n=new WeakMap}}}class Wa extends zi{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=on,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}Wa.prototype.isMeshDepthMaterial=!0;class qa extends zi{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new ar,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}qa.prototype.isMeshDistanceMaterial=!0;function Ya(t,e,n){let r=new Us;const i=new Zn,s=new Zn,o=new rr,a=[],l=[],c={},u=n.maxTextureSize,h={0:f,1:m,2:g},_=new Ps({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Zn},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),y=_.clone();y.defines.HORIZONTAL_PASS=1;const b=new ls;b.setAttribute("position",new Ui(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Es(b,_),w=this;function M(n,r){const i=e.update(x);_.uniforms.shadow_pass.value=n.map.texture,_.uniforms.resolution.value=n.mapSize,_.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,i,_,x,null),y.uniforms.shadow_pass.value=n.mapPass.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,i,y,x,null)}function S(t,e,n){const r=t<<0|e<<1|n<<2;let i=a[r];return void 0===i&&(i=new Wa({depthPacking:an,morphTargets:t,skinning:e}),a[r]=i),i}function T(t,e,n){const r=t<<0|e<<1|n<<2;let i=l[r];return void 0===i&&(i=new qa({morphTargets:t,skinning:e}),l[r]=i),i}function E(e,n,r,i,s,o,a){let l=null,u=S,p=e.customDepthMaterial;if(!0===i.isPointLight&&(u=T,p=e.customDistanceMaterial),void 0===p){let t=!1;!0===r.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let i=!1;!0===e.isSkinnedMesh&&(!0===r.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),l=u(t,i,!0===e.isInstancedMesh)}else l=p;if(t.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){const t=l.uuid,e=r.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let i=n[e];void 0===i&&(i=l.clone(),n[e]=i),l=i}return l.visible=r.visible,l.wireframe=r.wireframe,l.side=a===d?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:h[r.side],l.clipShadows=r.clipShadows,l.clippingPlanes=r.clippingPlanes,l.clipIntersection=r.clipIntersection,l.wireframeLinewidth=r.wireframeLinewidth,l.linewidth=r.linewidth,!0===i.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(i.matrixWorld),l.nearDistance=s,l.farDistance=o),l}function A(n,i,s,o,a){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&a===d)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const r=e.update(n),i=n.material;if(Array.isArray(i)){const e=r.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],u=i[c.materialIndex];if(u&&u.visible){const e=E(n,r,u,o,s.near,s.far,a);t.renderBufferDirect(s,null,r,e,n,c)}}}else if(i.visible){const e=E(n,r,i,o,s.near,s.far,a);t.renderBufferDirect(s,null,r,e,n,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)A(l[t],i,s,o,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=p,this.render=function(e,n,a){if(!1===w.enabled)return;if(!1===w.autoUpdate&&!1===w.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),p=t.getActiveMipmapLevel(),h=t.state;h.setBlending(v),h.buffers.color.setClear(1,1,1,1),h.buffers.depth.setTest(!0),h.setScissorTest(!1);for(let l=0,c=e.length;l<c;l++){const c=e[l],p=c.shadow;if(void 0===p){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===p.autoUpdate&&!1===p.needsUpdate)continue;i.copy(p.mapSize);const m=p.getFrameExtents();if(i.multiply(m),s.copy(p.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/m.x),i.x=s.x*m.x,p.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/m.y),i.y=s.y*m.y,p.mapSize.y=s.y)),null===p.map&&!p.isPointLightShadow&&this.type===d){const t={minFilter:bt,magFilter:bt,format:Ht};p.map=new ir(i.x,i.y,t),p.map.texture.name=c.name+".shadowMap",p.mapPass=new ir(i.x,i.y,t),p.camera.updateProjectionMatrix()}if(null===p.map){const t={minFilter:ft,magFilter:ft,format:Ht};p.map=new ir(i.x,i.y,t),p.map.texture.name=c.name+".shadowMap",p.camera.updateProjectionMatrix()}t.setRenderTarget(p.map),t.clear();const f=p.getViewportCount();for(let t=0;t<f;t++){const e=p.getViewport(t);o.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),h.viewport(o),p.updateMatrices(c,t),r=p.getFrustum(),A(n,a,p.camera,c,this.type)}p.isPointLightShadow||this.type!==d||M(p,a),p.needsUpdate=!1}w.needsUpdate=!1,t.setRenderTarget(l,c,p)}}function Xa(t,e,n){const r=n.isWebGL2;const i=new function(){let e=!1;const n=new rr;let r=null;const i=new rr(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,s,o,a){!0===a&&(e*=o,r*=o,s*=o),n.set(e,r,s,o),!1===i.equals(n)&&(t.clearColor(e,r,s,o),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}},s=new function(){let e=!1,n=null,r=null,i=null;return{setTest:function(t){t?gt(2929):_t(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case U:t.depthFunc(512);break;case j:t.depthFunc(519);break;case V:t.depthFunc(513);break;case k:t.depthFunc(515);break;case W:t.depthFunc(514);break;case q:t.depthFunc(518);break;case Y:t.depthFunc(516);break;case X:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,r=null,i=null}}},c=new function(){let e=!1,n=null,r=null,i=null,s=null,o=null,a=null,l=null,c=null;return{setTest:function(t){e||(t?gt(2960):_t(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,o){r===e&&i===n&&s===o||(t.stencilFunc(e,n,o),r=e,i=n,s=o)},setOp:function(e,n,r){o===e&&a===n&&l===r||(t.stencilOp(e,n,r),o=e,a=n,l=r)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,r=null,i=null,s=null,o=null,a=null,l=null,c=null}}};let u={},p=null,h={},d=null,m=!1,_=null,y=null,J=null,Z=null,Q=null,K=null,$=null,tt=!1,et=null,nt=null,rt=null,it=null,st=null;const ot=t.getParameter(35661);let at=!1,lt=0;const ct=t.getParameter(7938);-1!==ct.indexOf("WebGL")?(lt=parseFloat(/^WebGL (\d)/.exec(ct)[1]),at=lt>=1):-1!==ct.indexOf("OpenGL ES")&&(lt=parseFloat(/^OpenGL ES (\d)/.exec(ct)[1]),at=lt>=2);let ut=null,pt={};const ht=new rr(0,0,t.canvas.width,t.canvas.height),dt=new rr(0,0,t.canvas.width,t.canvas.height);function mt(e,n,r){const i=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<r;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,i);return s}const ft={};function gt(e){!0!==u[e]&&(t.enable(e),u[e]=!0)}function _t(e){!1!==u[e]&&(t.disable(e),u[e]=!1)}ft[3553]=mt(3553,3553,1),ft[34067]=mt(34067,34069,6),i.setClear(0,0,0,1),s.setClear(1),c.setClear(0),gt(2929),s.setFunc(k),xt(!1),wt(a),gt(2884),bt(v);const yt={[T]:32774,[E]:32778,[A]:32779};if(r)yt[C]=32775,yt[L]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(yt[C]=t.MIN_EXT,yt[L]=t.MAX_EXT)}const vt={[z]:0,[R]:1,[P]:768,[I]:770,[G]:776,[F]:774,[B]:772,[D]:769,[O]:771,[H]:775,[N]:773};function bt(e,n,r,i,s,o,a,l){if(e!==v){if(!1===m&&(gt(3042),m=!0),e===S)s=s||n,o=o||r,a=a||i,n===y&&s===Q||(t.blendEquationSeparate(yt[n],yt[s]),y=n,Q=s),r===J&&i===Z&&o===K&&a===$||(t.blendFuncSeparate(vt[r],vt[i],vt[o],vt[a]),J=r,Z=i,K=o,$=a),_=e,tt=null;else if(e!==_||l!==tt){if(y===T&&Q===T||(t.blendEquation(32774),y=T,Q=T),l)switch(e){case b:t.blendFuncSeparate(1,771,1,771);break;case x:t.blendFunc(1,1);break;case w:t.blendFuncSeparate(0,0,769,771);break;case M:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case b:t.blendFuncSeparate(770,771,1,771);break;case x:t.blendFunc(770,1);break;case w:t.blendFunc(0,769);break;case M:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}J=null,Z=null,K=null,$=null,_=e,tt=l}}else!0===m&&(_t(3042),m=!1)}function xt(e){et!==e&&(e?t.frontFace(2304):t.frontFace(2305),et=e)}function wt(e){e!==o?(gt(2884),e!==nt&&(e===a?t.cullFace(1029):e===l?t.cullFace(1028):t.cullFace(1032))):_t(2884),nt=e}function Mt(e,n,r){e?(gt(32823),it===n&&st===r||(t.polygonOffset(n,r),it=n,st=r)):_t(32823)}function St(e){void 0===e&&(e=33984+ot-1),ut!==e&&(t.activeTexture(e),ut=e)}return{buffers:{color:i,depth:s,stencil:c},enable:gt,disable:_t,bindFramebuffer:function(e,n){null===n&&null!==p&&(n=p),h[e]!==n&&(t.bindFramebuffer(e,n),h[e]=n,r&&(36009===e&&(h[36160]=n),36160===e&&(h[36009]=n)))},bindXRFramebuffer:function(e){e!==p&&(t.bindFramebuffer(36160,e),p=e)},useProgram:function(e){return d!==e&&(t.useProgram(e),d=e,!0)},setBlending:bt,setMaterial:function(t,e){t.side===g?_t(2884):gt(2884);let n=t.side===f;e&&(n=!n),xt(n),t.blending===b&&!1===t.transparent?bt(v):bt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),i.setMask(t.colorWrite);const r=t.stencilWrite;c.setTest(r),r&&(c.setMask(t.stencilWriteMask),c.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),c.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Mt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?gt(32926):_t(32926)},setFlipSided:xt,setCullFace:wt,setLineWidth:function(e){e!==rt&&(at&&t.lineWidth(e),rt=e)},setPolygonOffset:Mt,setScissorTest:function(t){t?gt(3089):_t(3089)},activeTexture:St,bindTexture:function(e,n){null===ut&&St();let r=pt[ut];void 0===r&&(r={type:void 0,texture:void 0},pt[ut]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||ft[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=pt[ut];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(e,n,r,i,s,o,a,l,c,u){try{void 0===l?t.compressedTexImage2D(e,n,r,i,s,o,a):void 0===c?t.compressedTexImage2D(e,n,r,i,s,o,a,l):void 0===u?t.compressedTexImage2D(e,n,r,i,s,o,a,l,c):t.compressedTexImage2D(e,n,r,i,s,o,a,l,c,u)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(e,n,r,i,s,o,a,l,c){try{void 0===a?t.texImage2D(e,n,r,i,s,o):t.texImage2D(e,n,r,i,s,o,a,l,c)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(e,n,r,i,s,o,a,l,c,u,p){try{void 0===p?t.texImage3D(e,n,r,i,s,o,a,l,c,u):t.texImage3D(e,n,r,i,s,o,a,l,c,u,p)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===ht.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),ht.copy(e))},viewport:function(e){!1===dt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),dt.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),u={},ut=null,pt={},p=null,h={},d=null,m=!1,_=null,y=null,J=null,Z=null,Q=null,K=null,$=null,tt=!1,et=null,nt=null,rt=null,it=null,st=null,ht.set(0,0,t.canvas.width,t.canvas.height),dt.set(0,0,t.canvas.width,t.canvas.height),i.reset(),s.reset(),c.reset()}}}function Ja(t,e,n,r,i,s,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,p=i.maxSamples,h=new WeakMap;let d,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function f(t,e){return m?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(t,e,n,r){let i=1;if((t.width>r||t.height>r)&&(i=r/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const r=e?Xn:Math.floor,s=r(i*t.width),o=r(i*t.height);void 0===d&&(d=f(s,o));const a=n?f(s,o):d;return a.width=s,a.height=o,a.getContext("2d").drawImage(t,0,0,s,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+s+"x"+o+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function _(t){return qn(t.width)&&qn(t.height)}function y(t,e){return t.generateMipmaps&&e&&t.minFilter!==ft&&t.minFilter!==bt}function v(e,n,i,s){t.generateMipmap(e),r.get(n).__maxMipLevel=Math.log2(Math.max(i,s))}function b(n,r,i){if(!1===a)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let s=r;return 6403===r&&(5126===i&&(s=33326),5131===i&&(s=33325),5121===i&&(s=33321)),6407===r&&(5126===i&&(s=34837),5131===i&&(s=34843),5121===i&&(s=32849)),6408===r&&(5126===i&&(s=34836),5131===i&&(s=34842),5121===i&&(s=32856)),33325!==s&&33326!==s&&34842!==s&&34836!==s||e.get("EXT_color_buffer_float"),s}function x(t){return t===ft||t===gt||t===yt?9728:9729}function w(e){const n=e.target;n.removeEventListener("dispose",w),function(e){const n=r.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),r.remove(e)}(n),n.isVideoTexture&&h.delete(n),o.memory.textures--}function M(e){const n=e.target;n.removeEventListener("dispose",M),function(e){const n=e.texture,i=r.get(e),s=r.get(n);if(!e)return;void 0!==s.__webglTexture&&t.deleteTexture(s.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);r.remove(n),r.remove(e)}(n),o.memory.textures--}let S=0;function T(t,e){const i=r.get(t);if(t.isVideoTexture&&function(t){const e=o.render.frame;h.get(t)!==e&&(h.set(t,e),t.update())}(t),t.version>0&&i.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void R(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,i.__webglTexture)}function E(e,i){const o=r.get(e);e.version>0&&o.__version!==e.version?function(e,r,i){if(6!==r.image.length)return;z(e,r),n.activeTexture(33984+i),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const o=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),l=r.image[0]&&r.image[0].isDataTexture,u=[];for(let t=0;t<6;t++)u[t]=o||l?l?r.image[t].image:r.image[t]:g(r.image[t],!1,!0,c);const p=u[0],h=_(p)||a,d=s.convert(r.format),m=s.convert(r.type),f=b(r.internalFormat,d,m);let x;if(L(34067,r,h),o){for(let t=0;t<6;t++){x=u[t].mipmaps;for(let e=0;e<x.length;e++){const i=x[e];r.format!==Ht&&r.format!==Ft?null!==d?n.compressedTexImage2D(34069+t,e,f,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,e,f,i.width,i.height,0,d,m,i.data)}}e.__maxMipLevel=x.length-1}else{x=r.mipmaps;for(let t=0;t<6;t++)if(l){n.texImage2D(34069+t,0,f,u[t].width,u[t].height,0,d,m,u[t].data);for(let e=0;e<x.length;e++){const r=x[e].image[t].image;n.texImage2D(34069+t,e+1,f,r.width,r.height,0,d,m,r.data)}}else{n.texImage2D(34069+t,0,f,d,m,u[t]);for(let e=0;e<x.length;e++){const r=x[e];n.texImage2D(34069+t,e+1,f,d,m,r.image[t])}}e.__maxMipLevel=x.length}y(r,h)&&v(34067,r,p.width,p.height);e.__version=r.version,r.onUpdate&&r.onUpdate(r)}(o,e,i):(n.activeTexture(33984+i),n.bindTexture(34067,o.__webglTexture))}const A={[ht]:10497,[dt]:33071,[mt]:33648},C={[ft]:9728,[gt]:9984,[yt]:9986,[bt]:9729,[xt]:9985,[Mt]:9987};function L(n,s,o){if(o?(t.texParameteri(n,10242,A[s.wrapS]),t.texParameteri(n,10243,A[s.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,A[s.wrapR]),t.texParameteri(n,10240,C[s.magFilter]),t.texParameteri(n,10241,C[s.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),s.wrapS===dt&&s.wrapT===dt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,x(s.magFilter)),t.texParameteri(n,10241,x(s.minFilter)),s.minFilter!==ft&&s.minFilter!==bt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const o=e.get("EXT_texture_filter_anisotropic");if(s.type===Rt&&!1===e.has("OES_texture_float_linear"))return;if(!1===a&&s.type===Pt&&!1===e.has("OES_texture_half_float_linear"))return;(s.anisotropy>1||r.get(s).__currentAnisotropy)&&(t.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,i.getMaxAnisotropy())),r.get(s).__currentAnisotropy=s.anisotropy)}}function z(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",w),e.__webglTexture=t.createTexture(),o.memory.textures++)}function R(e,r,i){let o=3553;r.isDataTexture2DArray&&(o=35866),r.isDataTexture3D&&(o=32879),z(e,r),n.activeTexture(33984+i),n.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const l=function(t){return!a&&(t.wrapS!==dt||t.wrapT!==dt||t.minFilter!==ft&&t.minFilter!==bt)}(r)&&!1===_(r.image),c=g(r.image,l,!1,u),p=_(c)||a,h=s.convert(r.format);let d,m=s.convert(r.type),f=b(r.internalFormat,h,m);L(o,r,p);const x=r.mipmaps;if(r.isDepthTexture)f=6402,a?f=r.type===Rt?36012:r.type===zt?33190:r.type===Bt?35056:33189:r.type===Rt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===Vt&&6402===f&&r.type!==Ct&&r.type!==zt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Ct,m=s.convert(r.type)),r.format===kt&&6402===f&&(f=34041,r.type!==Bt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Bt,m=s.convert(r.type))),n.texImage2D(3553,0,f,c.width,c.height,0,h,m,null);else if(r.isDataTexture)if(x.length>0&&p){for(let t=0,e=x.length;t<e;t++)d=x[t],n.texImage2D(3553,t,f,d.width,d.height,0,h,m,d.data);r.generateMipmaps=!1,e.__maxMipLevel=x.length-1}else n.texImage2D(3553,0,f,c.width,c.height,0,h,m,c.data),e.__maxMipLevel=0;else if(r.isCompressedTexture){for(let t=0,e=x.length;t<e;t++)d=x[t],r.format!==Ht&&r.format!==Ft?null!==h?n.compressedTexImage2D(3553,t,f,d.width,d.height,0,d.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,f,d.width,d.height,0,h,m,d.data);e.__maxMipLevel=x.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,f,c.width,c.height,c.depth,0,h,m,c.data),e.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,f,c.width,c.height,c.depth,0,h,m,c.data),e.__maxMipLevel=0;else if(x.length>0&&p){for(let t=0,e=x.length;t<e;t++)d=x[t],n.texImage2D(3553,t,f,h,m,d);r.generateMipmaps=!1,e.__maxMipLevel=x.length-1}else n.texImage2D(3553,0,f,h,m,c),e.__maxMipLevel=0;y(r,p)&&v(o,r,c.width,c.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function P(e,i,o,a){const l=i.texture,c=s.convert(l.format),u=s.convert(l.type),p=b(l.internalFormat,c,u);32879===a||35866===a?n.texImage3D(a,0,p,i.width,i.height,i.depth,0,c,u,null):n.texImage2D(a,0,p,i.width,i.height,0,c,u,null),n.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,o,a,r.get(l).__webglTexture,0),n.bindFramebuffer(36160,null)}function D(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Rt?i=36012:e.type===zt&&(i=33190));const r=O(n);t.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else t.renderbufferStorage(36161,i,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const e=O(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=n.texture,i=s.convert(e.format),o=s.convert(e.type),a=b(e.internalFormat,i,o);if(r){const e=O(n);t.renderbufferStorageMultisample(36161,e,a,n.width,n.height)}else t.renderbufferStorage(36161,a,n.width,n.height)}t.bindRenderbuffer(36161,null)}function I(e){const i=r.get(e),s=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(s)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),T(i.depthTexture,0);const s=r.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===Vt)t.framebufferTexture2D(36160,36096,3553,s,0);else{if(i.depthTexture.format!==kt)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,s,0)}}(i.__webglFramebuffer,e)}else if(s){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=t.createRenderbuffer(),D(i.__webglDepthbuffer[r],e,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),D(i.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function O(t){return a&&t.isWebGLMultisampleRenderTarget?Math.min(p,t.samples):0}let B=!1,N=!1;this.allocateTextureUnit=function(){const t=S;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),S+=1,t},this.resetTextureUnits=function(){S=0},this.setTexture2D=T,this.setTexture2DArray=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?R(i,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?R(i,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=E,this.setupRenderTarget=function(e){const i=e.texture,l=r.get(e),c=r.get(i);e.addEventListener("dispose",M),c.__webglTexture=t.createTexture(),c.__version=i.version,o.memory.textures++;const u=!0===e.isWebGLCubeRenderTarget,p=!0===e.isWebGLMultisampleRenderTarget,h=i.isDataTexture3D||i.isDataTexture2DArray,d=_(e)||a;if(!a||i.format!==Ft||i.type!==Rt&&i.type!==Pt||(i.format=Ht,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),u){l.__webglFramebuffer=[];for(let e=0;e<6;e++)l.__webglFramebuffer[e]=t.createFramebuffer()}else if(l.__webglFramebuffer=t.createFramebuffer(),p)if(a){l.__webglMultisampledFramebuffer=t.createFramebuffer(),l.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,l.__webglColorRenderbuffer);const r=s.convert(i.format),o=s.convert(i.type),a=b(i.internalFormat,r,o),c=O(e);t.renderbufferStorageMultisample(36161,c,a,e.width,e.height),n.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,l.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(l.__webglDepthRenderbuffer=t.createRenderbuffer(),D(l.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(u){n.bindTexture(34067,c.__webglTexture),L(34067,i,d);for(let t=0;t<6;t++)P(l.__webglFramebuffer[t],e,36064,34069+t);y(i,d)&&v(34067,i,e.width,e.height),n.bindTexture(34067,null)}else{let t=3553;if(h)if(a){t=i.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(t,c.__webglTexture),L(t,i,d),P(l.__webglFramebuffer,e,36064,t),y(i,d)&&v(3553,i,e.width,e.height),n.bindTexture(3553,null)}e.depthBuffer&&I(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(y(e,_(t)||a)){const i=t.isWebGLCubeRenderTarget?34067:3553,s=r.get(e).__webglTexture;n.bindTexture(i,s),v(i,e,t.width,t.height),n.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(a){const i=e.width,s=e.height;let o=16384;e.depthBuffer&&(o|=256),e.stencilBuffer&&(o|=1024);const a=r.get(e);n.bindFramebuffer(36008,a.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,a.__webglFramebuffer),t.blitFramebuffer(0,0,i,s,0,0,i,s,o,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,a.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),B=!0),t=t.texture),T(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===N&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),N=!0),t=t.texture),E(t,e)}}function Za(t,e,n){const r=n.isWebGL2;return{convert:function(t){let n;if(t===Tt)return 5121;if(t===Dt)return 32819;if(t===It)return 32820;if(t===Ot)return 33635;if(t===Et)return 5120;if(t===At)return 5122;if(t===Ct)return 5123;if(t===Lt)return 5124;if(t===zt)return 5125;if(t===Rt)return 5126;if(t===Pt)return r?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(t===Nt)return 6406;if(t===Ft)return 6407;if(t===Ht)return 6408;if(t===Gt)return 6409;if(t===Ut)return 6410;if(t===Vt)return 6402;if(t===kt)return 34041;if(t===Wt)return 6403;if(t===qt)return 36244;if(t===Yt)return 33319;if(t===Xt)return 33320;if(t===Jt)return 36248;if(t===Zt)return 36249;if(t===Qt||t===Kt||t===$t||t===te){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(t===Qt)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Kt)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===$t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===te)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===ee||t===ne||t===re||t===ie){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(t===ee)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===ne)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===re)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===ie)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===se)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===oe||t===ae)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(t===oe)return n.COMPRESSED_RGB8_ETC2;if(t===ae)return n.COMPRESSED_RGBA8_ETC2_EAC}return t===le||t===ce||t===ue||t===pe||t===he||t===de||t===me||t===fe||t===ge||t===_e||t===ye||t===ve||t===be||t===xe||t===Me||t===Se||t===Te||t===Ee||t===Ae||t===Ce||t===Le||t===ze||t===Re||t===Pe||t===De||t===Ie||t===Oe||t===Be?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):t===we?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===Bt?r?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class Qa extends Is{constructor(t=[]){super(),this.cameras=t}}Qa.prototype.isArrayCamera=!0;class Ka extends di{constructor(){super(),this.type="Group"}}Ka.prototype.isGroup=!0;const $a={type:"move"};class tl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Ka,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Ka,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ar,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ar),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Ka,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ar,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ar),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,i=null,s=null;const o=this._targetRay,a=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==o&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent($a))),l&&t.hand){s=!0;for(const r of t.hand.values()){const t=e.getJointPose(r,n);if(void 0===l.joints[r.jointName]){const t=new Ka;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[r.jointName]=t,l.add(t)}const i=l.joints[r.jointName];null!==t&&(i.matrix.fromArray(t.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=t.radius),i.visible=null!==t}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],o=r.position.distanceTo(i.position),a=.02,c=.005;l.inputState.pinching&&o>a+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&o<=a-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==a&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1));return null!==o&&(o.visible=null!==r),null!==a&&(a.visible=null!==i),null!==l&&(l.visible=null!==s),this}}class el extends Nn{constructor(t,e){super();const n=this,r=t.state;let i=null,s=1,o=null,a="local-floor",l=null;const c=[],u=new Map,p=new Is;p.layers.enable(1),p.viewport=new rr;const h=new Is;h.layers.enable(2),h.viewport=new rr;const d=[p,h],m=new Qa;m.layers.enable(1),m.layers.enable(2);let f=null,g=null;function _(t){const e=u.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function y(){u.forEach((function(t,e){t.disconnect(e)})),u.clear(),f=null,g=null,r.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function v(t){const e=i.inputSources;for(let t=0;t<c.length;t++)u.set(e[t],c[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],r=u.get(n);r&&(r.dispatchEvent({type:"disconnected",data:n}),u.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],r=u.get(n);r&&r.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=c[t];return void 0===e&&(e=new tl,c[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=c[t];return void 0===e&&(e=new tl,c[t]=e),e.getGripSpace()},this.getHand=function(t){let e=c[t];return void 0===e&&(e=new tl,c[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return i},this.setSession=async function(t){if(i=t,null!==i){i.addEventListener("select",_),i.addEventListener("selectstart",_),i.addEventListener("selectend",_),i.addEventListener("squeeze",_),i.addEventListener("squeezestart",_),i.addEventListener("squeezeend",_),i.addEventListener("end",y),i.addEventListener("inputsourceschange",v);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const r={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:s},l=new XRWebGLLayer(i,e,r);i.updateRenderState({baseLayer:l}),o=await i.requestReferenceSpace(a),S.setContext(i),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const b=new ar,x=new ar;function w(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){m.near=h.near=p.near=t.near,m.far=h.far=p.far=t.far,f===m.near&&g===m.far||(i.updateRenderState({depthNear:m.near,depthFar:m.far}),f=m.near,g=m.far);const e=t.parent,n=m.cameras;w(m,e);for(let t=0;t<n.length;t++)w(n[t],e);t.matrixWorld.copy(m.matrixWorld),t.matrix.copy(m.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const r=t.children;for(let t=0,e=r.length;t<e;t++)r[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){b.setFromMatrixPosition(e.matrixWorld),x.setFromMatrixPosition(n.matrixWorld);const r=b.distanceTo(x),i=e.projectionMatrix.elements,s=n.projectionMatrix.elements,o=i[14]/(i[10]-1),a=i[14]/(i[10]+1),l=(i[9]+1)/i[5],c=(i[9]-1)/i[5],u=(i[8]-1)/i[0],p=(s[8]+1)/s[0],h=o*u,d=o*p,m=r/(-u+p),f=m*-u;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=o+m,_=a+m,y=h-f,v=d+(r-f),w=l*a/_*g,M=c*a/_*g;t.projectionMatrix.makePerspective(y,v,w,M,g,_)}(m,p,h):m.projectionMatrix.copy(p.projectionMatrix),m};let M=null;const S=new js;S.setAnimationLoop((function(t,e){if(l=e.getViewerPose(o),null!==l){const t=l.views,e=i.renderState.baseLayer;r.bindXRFramebuffer(e.framebuffer);let n=!1;t.length!==m.cameras.length&&(m.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const i=t[r],s=e.getViewport(i),o=d[r];o.matrix.fromArray(i.transform.matrix),o.projectionMatrix.fromArray(i.projectionMatrix),o.viewport.set(s.x,s.y,s.width,s.height),0===r&&m.matrix.copy(o.matrix),!0===n&&m.cameras.push(o)}}const n=i.inputSources;for(let t=0;t<c.length;t++){const r=c[t],i=n[t];r.update(i,e,o)}M&&M(t,e)})),this.setAnimationLoop=function(t){M=t},this.dispose=function(){}}}function nl(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const r=t.get(n).envMap;if(r){e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const i=t.get(r).__maxMipLevel;void 0!==i&&(e.maxMipLevel.value=i)}let i,s;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(i=n.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix)),n.aoMap?s=n.aoMap:n.lightMap&&(s=n.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),e.uv2Transform.value.copy(s.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===f&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===f&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,i,s){r.isMeshBasicMaterial?e(t,r):r.isMeshLambertMaterial?(e(t,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,r)):r.isMeshToonMaterial?(e(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshPhongMaterial?(e(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshStandardMaterial?(e(t,r),r.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===f&&t.clearcoatNormalScale.value.negate());t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,r):n(t,r)):r.isMeshMatcapMaterial?(e(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDepthMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDistanceMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?(e(t,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let i;e.map?i=e.map:e.alphaMap&&(i=e.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,r,i,s):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function rl(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,r=void 0!==t.alpha&&t.alpha,i=void 0===t.depth||t.depth,s=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:"default",u=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let p=null,h=null;const d=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Qe,this.physicallyCorrectLights=!1,this.toneMapping=K,this.toneMappingExposure=1;const f=this;let g=!1,_=0,y=0,v=null,b=-1,x=null;const w=new rr,M=new rr;let S=null,T=e.width,E=e.height,A=1,C=null,L=null;const z=new rr(0,0,T,E),R=new rr(0,0,T,E);let P=!1;const D=new Us;let I=!1,O=!1;const B=new Fr,N=new ar,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function H(){return null===v?A:1}let G,U,j,V,k,W,q,Y,X,J,Z,Q,$,tt,et,nt,rt,it,st,ot,at,lt,ct=n;function ut(t,n){for(let r=0;r<t.length;r++){const i=t[r],s=e.getContext(i,n);if(null!==s)return s}return null}try{const t={alpha:r,depth:i,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(e.addEventListener("webglcontextlost",dt,!1),e.addEventListener("webglcontextrestored",mt,!1),null===ct){const e=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&e.shift(),ct=ut(e,t),null===ct)throw ut(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ct.getShaderPrecisionFormat&&(ct.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function pt(){G=new to(ct),U=new Qs(ct,G,t),G.init(U),at=new Za(ct,G,U),j=new Xa(ct,G,U),V=new ro(ct),k=new Ia,W=new Ja(ct,G,j,k,U,at,V),q=new $s(f),Y=new Vs(ct,U),lt=new Js(ct,G,Y,U),X=new eo(ct,Y,V,lt),J=new ao(ct,X,Y,V),it=new oo(ct),et=new Ks(k),Z=new Da(f,q,G,U,lt,et),Q=new nl(k),$=new Fa(k),tt=new ka(G,U),rt=new Xs(f,q,j,J,a),nt=new Ya(f,J,U),st=new Zs(ct,G,V,U),ot=new no(ct,G,V,U),V.programs=Z.programs,f.capabilities=U,f.extensions=G,f.properties=k,f.renderLists=$,f.shadowMap=nt,f.state=j,f.info=V}pt();const ht=new el(f,ct);function dt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function mt(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const t=V.autoReset,e=nt.enabled,n=nt.autoUpdate,r=nt.needsUpdate,i=nt.type;pt(),V.autoReset=t,nt.enabled=e,nt.autoUpdate=n,nt.needsUpdate=r,nt.type=i}function ft(t){const e=t.target;e.removeEventListener("dispose",ft),function(t){(function(t){const e=k.get(t).programs;void 0!==e&&e.forEach((function(t){Z.releaseProgram(t)}))})(t),k.remove(t)}(e)}this.xr=ht,this.getContext=function(){return ct},this.getContextAttributes=function(){return ct.getContextAttributes()},this.forceContextLoss=function(){const t=G.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=G.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(t){void 0!==t&&(A=t,this.setSize(T,E,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new Zn),t.set(T,E)},this.setSize=function(t,n,r){ht.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(T=t,E=n,e.width=Math.floor(t*A),e.height=Math.floor(n*A),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new Zn),t.set(T*A,E*A).floor()},this.setDrawingBufferSize=function(t,n,r){T=t,E=n,A=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new rr),t.copy(w)},this.getViewport=function(t){return t.copy(z)},this.setViewport=function(t,e,n,r){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,r),j.viewport(w.copy(z).multiplyScalar(A).floor())},this.getScissor=function(t){return t.copy(R)},this.setScissor=function(t,e,n,r){t.isVector4?R.set(t.x,t.y,t.z,t.w):R.set(t,e,n,r),j.scissor(M.copy(R).multiplyScalar(A).floor())},this.getScissorTest=function(){return P},this.setScissorTest=function(t){j.setScissorTest(P=t)},this.setOpaqueSort=function(t){C=t},this.setTransparentSort=function(t){L=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new Ni),t.copy(rt.getClearColor())},this.setClearColor=function(){rt.setClearColor.apply(rt,arguments)},this.getClearAlpha=function(){return rt.getClearAlpha()},this.setClearAlpha=function(){rt.setClearAlpha.apply(rt,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),ct.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",dt,!1),e.removeEventListener("webglcontextrestored",mt,!1),$.dispose(),tt.dispose(),k.dispose(),q.dispose(),J.dispose(),lt.dispose(),ht.dispose(),ht.removeEventListener("sessionstart",_t),ht.removeEventListener("sessionend",yt),vt.stop()},this.renderBufferImmediate=function(t,e){lt.initAttributes();const n=k.get(t);t.hasPositions&&!n.position&&(n.position=ct.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=ct.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=ct.createBuffer()),t.hasColors&&!n.color&&(n.color=ct.createBuffer());const r=e.getAttributes();t.hasPositions&&(ct.bindBuffer(34962,n.position),ct.bufferData(34962,t.positionArray,35048),lt.enableAttribute(r.position),ct.vertexAttribPointer(r.position,3,5126,!1,0,0)),t.hasNormals&&(ct.bindBuffer(34962,n.normal),ct.bufferData(34962,t.normalArray,35048),lt.enableAttribute(r.normal),ct.vertexAttribPointer(r.normal,3,5126,!1,0,0)),t.hasUvs&&(ct.bindBuffer(34962,n.uv),ct.bufferData(34962,t.uvArray,35048),lt.enableAttribute(r.uv),ct.vertexAttribPointer(r.uv,2,5126,!1,0,0)),t.hasColors&&(ct.bindBuffer(34962,n.color),ct.bufferData(34962,t.colorArray,35048),lt.enableAttribute(r.color),ct.vertexAttribPointer(r.color,3,5126,!1,0,0)),lt.disableUnusedAttributes(),ct.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,r,i,s){null===e&&(e=F);const o=i.isMesh&&i.matrixWorld.determinant()<0,a=Et(t,e,r,i);j.setMaterial(r,o);let l=n.index;const c=n.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let u,p=1;!0===r.wireframe&&(l=X.getWireframeAttribute(n),p=2),(r.morphTargets||r.morphNormals)&&it.update(i,n,r,a),lt.setup(i,r,a,n,l);let h=st;null!==l&&(u=Y.get(l),h=ot,h.setIndex(u));const d=null!==l?l.count:c.count,m=n.drawRange.start*p,f=n.drawRange.count*p,g=null!==s?s.start*p:0,_=null!==s?s.count*p:1/0,y=Math.max(m,g),v=Math.min(d,m+f,g+_)-1,b=Math.max(0,v-y+1);if(0!==b){if(i.isMesh)!0===r.wireframe?(j.setLineWidth(r.wireframeLinewidth*H()),h.setMode(1)):h.setMode(4);else if(i.isLine){let t=r.linewidth;void 0===t&&(t=1),j.setLineWidth(t*H()),i.isLineSegments?h.setMode(1):i.isLineLoop?h.setMode(2):h.setMode(3)}else i.isPoints?h.setMode(0):i.isSprite&&h.setMode(4);if(i.isInstancedMesh)h.renderInstances(y,b,i.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);h.renderInstances(y,b,t)}else h.render(y,b)}},this.compile=function(t,e){h=tt.get(t),h.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(h.pushLight(t),t.castShadow&&h.pushShadow(t))})),h.setupLights(),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++){Mt(n[r],t,e)}else Mt(n,t,e)}))};let gt=null;function _t(){vt.stop()}function yt(){vt.start()}const vt=new js;function bt(t,e,n,r){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)h.pushLight(t),t.castShadow&&h.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||D.intersectsSprite(t)){r&&N.setFromMatrixPosition(t.matrixWorld).applyMatrix4(B);const e=J.update(t),i=t.material;i.visible&&p.push(t,e,i,n,N.z,null)}}else if(t.isImmediateRenderObject)r&&N.setFromMatrixPosition(t.matrixWorld).applyMatrix4(B),p.push(t,null,t.material,n,N.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==V.render.frame&&(t.skeleton.update(),t.skeleton.frame=V.render.frame),!t.frustumCulled||D.intersectsObject(t))){r&&N.setFromMatrixPosition(t.matrixWorld).applyMatrix4(B);const e=J.update(t),i=t.material;if(Array.isArray(i)){const r=e.groups;for(let s=0,o=r.length;s<o;s++){const o=r[s],a=i[o.materialIndex];a&&a.visible&&p.push(t,e,a,n,N.z,o)}}else i.visible&&p.push(t,e,i,n,N.z,null)}const i=t.children;for(let t=0,s=i.length;t<s;t++)bt(i[t],e,n,r)}function xt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,s=t.length;i<s;i++){const s=t[i],o=s.object,a=s.geometry,l=null===r?s.material:r,c=s.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,r=t.length;n<r;n++){const r=t[n];o.layers.test(r.layers)&&(j.viewport(w.copy(r.viewport)),h.setupLightsView(r),wt(o,e,r,a,l,c))}}else wt(o,e,n,a,l,c)}}function wt(t,e,n,r,i,s){if(t.onBeforeRender(f,e,n,r,i,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const r=Et(n,e,i,t);j.setMaterial(i),lt.reset(),function(t,e){t.render((function(t){f.renderBufferImmediate(t,e)}))}(t,r)}else f.renderBufferDirect(n,e,r,i,t,s);t.onAfterRender(f,e,n,r,i,s)}function Mt(t,e,n){!0!==e.isScene&&(e=F);const r=k.get(t),i=h.state.lights,s=h.state.shadowsArray,o=i.state.version,a=Z.getParameters(t,i.state,s,e,n),l=Z.getProgramCacheKey(a);let c=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=q.get(t.envMap||r.environment),void 0===c&&(t.addEventListener("dispose",ft),c=new Map,r.programs=c);let u=c.get(l);if(void 0!==u){if(r.currentProgram===u&&r.lightsStateVersion===o)return St(t,a),u}else a.uniforms=Z.getUniforms(t),t.onBuild(a,f),t.onBeforeCompile(a,f),u=Z.acquireProgram(a,l),c.set(l,u),r.uniforms=a.uniforms;const p=r.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(p.clippingPlanes=et.uniform),St(t,a),r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=o,r.needsLights&&(p.ambientLightColor.value=i.state.ambient,p.lightProbe.value=i.state.probe,p.directionalLights.value=i.state.directional,p.directionalLightShadows.value=i.state.directionalShadow,p.spotLights.value=i.state.spot,p.spotLightShadows.value=i.state.spotShadow,p.rectAreaLights.value=i.state.rectArea,p.ltc_1.value=i.state.rectAreaLTC1,p.ltc_2.value=i.state.rectAreaLTC2,p.pointLights.value=i.state.point,p.pointLightShadows.value=i.state.pointShadow,p.hemisphereLights.value=i.state.hemi,p.directionalShadowMap.value=i.state.directionalShadowMap,p.directionalShadowMatrix.value=i.state.directionalShadowMatrix,p.spotShadowMap.value=i.state.spotShadowMap,p.spotShadowMatrix.value=i.state.spotShadowMatrix,p.pointShadowMap.value=i.state.pointShadowMap,p.pointShadowMatrix.value=i.state.pointShadowMatrix);const d=u.getUniforms(),m=ha.seqWithValue(d.seq,p);return r.currentProgram=u,r.uniformsList=m,u}function St(t,e){const n=k.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function Et(t,e,n,r){!0!==e.isScene&&(e=F),W.resetTextureUnits();const i=e.fog,s=n.isMeshStandardMaterial?e.environment:null,o=null===v?f.outputEncoding:v.texture.encoding,a=q.get(n.envMap||s),l=!0===n.vertexColors&&r.geometry&&r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize,c=k.get(n),u=h.state.lights;if(!0===I&&(!0===O||t!==x)){const e=t===x&&n.id===b;et.setState(n,t,e)}let p=!1;n.version===c.__version?c.needsLights&&c.lightsStateVersion!==u.state.version?p=!0:c.outputEncoding!==o?p=!0:r.isInstancedMesh&&!1===c.instancing?p=!0:r.isInstancedMesh||!0!==c.instancing?c.envMap!==a?p=!0:n.fog&&c.fog!==i?p=!0:void 0===c.numClippingPlanes||c.numClippingPlanes===et.numPlanes&&c.numIntersection===et.numIntersection?c.vertexAlphas!==l&&(p=!0):p=!0:p=!0:(p=!0,c.__version=n.version);let d=c.currentProgram;!0===p&&(d=Mt(n,e,r));let m=!1,g=!1,_=!1;const y=d.getUniforms(),w=c.uniforms;if(j.useProgram(d.program)&&(m=!0,g=!0,_=!0),n.id!==b&&(b=n.id,g=!0),m||x!==t){if(y.setValue(ct,"projectionMatrix",t.projectionMatrix),U.logarithmicDepthBuffer&&y.setValue(ct,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),x!==t&&(x=t,g=!0,_=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=y.map.cameraPosition;void 0!==e&&e.setValue(ct,N.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&y.setValue(ct,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&y.setValue(ct,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){y.setOptional(ct,r,"bindMatrix"),y.setOptional(ct,r,"bindMatrixInverse");const t=r.skeleton;if(t){const e=t.bones;if(U.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=Yn(n),n=Math.max(n,4);const r=new Float32Array(n*n*4);r.set(t.boneMatrices);const i=new Fs(r,n,n,Ht,Rt);t.boneMatrices=r,t.boneTexture=i,t.boneTextureSize=n}y.setValue(ct,"boneTexture",t.boneTexture,W),y.setValue(ct,"boneTextureSize",t.boneTextureSize)}else y.setOptional(ct,t,"boneMatrices")}}var M,S;return(g||c.receiveShadow!==r.receiveShadow)&&(c.receiveShadow=r.receiveShadow,y.setValue(ct,"receiveShadow",r.receiveShadow)),g&&(y.setValue(ct,"toneMappingExposure",f.toneMappingExposure),y.setValue(ct,"tonemappingLUT",f.tonemappingLUT,W),c.needsLights&&(S=_,(M=w).ambientLightColor.needsUpdate=S,M.lightProbe.needsUpdate=S,M.directionalLights.needsUpdate=S,M.directionalLightShadows.needsUpdate=S,M.pointLights.needsUpdate=S,M.pointLightShadows.needsUpdate=S,M.spotLights.needsUpdate=S,M.spotLightShadows.needsUpdate=S,M.rectAreaLights.needsUpdate=S,M.hemisphereLights.needsUpdate=S),i&&n.fog&&Q.refreshFogUniforms(w,i),Q.refreshMaterialUniforms(w,n,A,E),ha.upload(ct,c.uniformsList,w,W)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ha.upload(ct,c.uniformsList,w,W),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&y.setValue(ct,"center",r.center),y.setValue(ct,"modelViewMatrix",r.modelViewMatrix),y.setValue(ct,"normalMatrix",r.normalMatrix),y.setValue(ct,"modelMatrix",r.matrixWorld),d}vt.setAnimationLoop((function(t){gt&&gt(t)})),"undefined"!=typeof window&&vt.setContext(window),this.setAnimationLoop=function(t){gt=t,ht.setAnimationLoop(t),null===t?vt.stop():vt.start()},ht.addEventListener("sessionstart",_t),ht.addEventListener("sessionend",yt),this.render=function(t,e){let n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ht.enabled&&!0===ht.isPresenting&&(e=ht.getCamera(e)),!0===t.isScene&&t.onBeforeRender(f,t,e,n||v),h=tt.get(t,m.length),h.init(),m.push(h),B.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),D.setFromProjectionMatrix(B),O=this.localClippingEnabled,I=et.init(this.clippingPlanes,O,e),p=$.get(t,d.length),p.init(),d.push(p),bt(t,e,0,f.sortObjects),p.finish(),!0===f.sortObjects&&p.sort(C,L),!0===I&&et.beginShadows();const i=h.state.shadowsArray;nt.render(i,t,e),h.setupLights(),h.setupLightsView(e),!0===I&&et.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),rt.render(p,t,e,r);const s=p.opaque,o=p.transparent;s.length>0&&xt(s,t,e),o.length>0&&xt(o,t,e),null!==v&&(W.updateRenderTargetMipmap(v),W.updateMultisampleRenderTarget(v)),!0===t.isScene&&t.onAfterRender(f,t,e),j.buffers.depth.setTest(!0),j.buffers.depth.setMask(!0),j.buffers.color.setMask(!0),j.setPolygonOffset(!1),lt.resetDefaultState(),b=-1,x=null,m.pop(),h=m.length>0?m[m.length-1]:null,d.pop(),p=d.length>0?d[d.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return v},this.setRenderTarget=function(t,e=0,n=0){v=t,_=e,y=n,t&&void 0===k.get(t).__webglFramebuffer&&W.setupRenderTarget(t);let r=null,i=!1,s=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(s=!0);const o=k.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=o[e],i=!0):r=t.isWebGLMultisampleRenderTarget?k.get(t).__webglMultisampledFramebuffer:o,w.copy(t.viewport),M.copy(t.scissor),S=t.scissorTest}else w.copy(z).multiplyScalar(A).floor(),M.copy(R).multiplyScalar(A).floor(),S=P;if(j.bindFramebuffer(36160,r),j.viewport(w),j.scissor(M),j.setScissorTest(S),i){const r=k.get(t.texture);ct.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(s){const r=k.get(t.texture),i=e||0;ct.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,i)}},this.readRenderTargetPixels=function(t,e,n,r,i,s,o){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=k.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(a=a[o]),a){j.bindFramebuffer(36160,a);try{const o=t.texture,a=o.format,l=o.type;if(a!==Ht&&at.convert(a)!==ct.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===Pt&&(G.has("EXT_color_buffer_half_float")||U.isWebGL2&&G.has("EXT_color_buffer_float"));if(!(l===Tt||at.convert(l)===ct.getParameter(35738)||l===Rt&&(U.isWebGL2||G.has("OES_texture_float")||G.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ct.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&ct.readPixels(e,n,r,i,at.convert(a),at.convert(l),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==v?k.get(v).__webglFramebuffer:null;j.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const r=Math.pow(2,-n),i=Math.floor(e.image.width*r),s=Math.floor(e.image.height*r),o=at.convert(e.format);W.setTexture2D(e,0),ct.copyTexImage2D(3553,n,o,t.x,t.y,i,s,0),j.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const i=e.image.width,s=e.image.height,o=at.convert(n.format),a=at.convert(n.type);W.setTexture2D(n,0),ct.pixelStorei(37440,n.flipY),ct.pixelStorei(37441,n.premultiplyAlpha),ct.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?ct.texSubImage2D(3553,r,t.x,t.y,i,s,o,a,e.image.data):e.isCompressedTexture?ct.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,o,e.mipmaps[0].data):ct.texSubImage2D(3553,r,t.x,t.y,o,a,e.image),0===r&&n.generateMipmaps&&ct.generateMipmap(3553),j.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,i=0){if(f.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:s,height:o,data:a}=n.image,l=at.convert(r.format),c=at.convert(r.type);let u;if(r.isDataTexture3D)W.setTexture3D(r,0),u=32879;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");W.setTexture2DArray(r,0),u=35866}ct.pixelStorei(37440,r.flipY),ct.pixelStorei(37441,r.premultiplyAlpha),ct.pixelStorei(3317,r.unpackAlignment);const p=ct.getParameter(3314),h=ct.getParameter(32878),d=ct.getParameter(3316),m=ct.getParameter(3315),g=ct.getParameter(32877);ct.pixelStorei(3314,s),ct.pixelStorei(32878,o),ct.pixelStorei(3316,t.min.x),ct.pixelStorei(3315,t.min.y),ct.pixelStorei(32877,t.min.z),ct.texSubImage3D(u,i,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,l,c,a),ct.pixelStorei(3314,p),ct.pixelStorei(32878,h),ct.pixelStorei(3316,d),ct.pixelStorei(3315,m),ct.pixelStorei(32877,g),0===i&&r.generateMipmaps&&ct.generateMipmap(u),j.unbindTexture()},this.initTexture=function(t){W.setTexture2D(t,0),j.unbindTexture()},this.resetState=function(){_=0,y=0,v=null,j.reset(),lt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class il extends rl{}il.prototype.isWebGL1Renderer=!0;class sl{constructor(t,e=25e-5){this.name="",this.color=new Ni(t),this.density=e}clone(){return new sl(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}sl.prototype.isFogExp2=!0;class ol{constructor(t,e=1,n=1e3){this.name="",this.color=new Ni(t),this.near=e,this.far=n}clone(){return new ol(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}ol.prototype.isFog=!0;class al extends di{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}al.prototype.isScene=!0;class ll{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=En,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=jn(),this.onUploadCallback=function(){}}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=jn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new ll(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=jn()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}ll.prototype.isInterleavedBuffer=!0;const cl=new ar;class ul{constructor(t,e,n,r){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)cl.x=this.getX(e),cl.y=this.getY(e),cl.z=this.getZ(e),cl.applyMatrix4(t),this.setXYZ(e,cl.x,cl.y,cl.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)cl.x=this.getX(e),cl.y=this.getY(e),cl.z=this.getZ(e),cl.applyNormalMatrix(t),this.setXYZ(e,cl.x,cl.y,cl.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)cl.x=this.getX(e),cl.y=this.getY(e),cl.z=this.getZ(e),cl.transformDirection(t),this.setXYZ(e,cl.x,cl.y,cl.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Ui(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ul(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}ul.prototype.isInterleavedBufferAttribute=!0;class pl extends zi{constructor(t){super(),this.type="SpriteMaterial",this.color=new Ni(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let hl;pl.prototype.isSpriteMaterial=!0;const dl=new ar,ml=new ar,fl=new ar,gl=new Zn,_l=new Zn,yl=new Fr,vl=new ar,bl=new ar,xl=new ar,wl=new Zn,Ml=new Zn,Sl=new Zn;class Tl extends di{constructor(t){if(super(),this.type="Sprite",void 0===hl){hl=new ls;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new ll(t,5);hl.setIndex([0,1,2,0,2,3]),hl.setAttribute("position",new ul(e,3,0,!1)),hl.setAttribute("uv",new ul(e,2,3,!1))}this.geometry=hl,this.material=void 0!==t?t:new pl,this.center=new Zn(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ml.setFromMatrixScale(this.matrixWorld),yl.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),fl.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ml.multiplyScalar(-fl.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const s=this.center;El(vl.set(-.5,-.5,0),fl,s,ml,r,i),El(bl.set(.5,-.5,0),fl,s,ml,r,i),El(xl.set(.5,.5,0),fl,s,ml,r,i),wl.set(0,0),Ml.set(1,0),Sl.set(1,1);let o=t.ray.intersectTriangle(vl,bl,xl,!1,dl);if(null===o&&(El(bl.set(-.5,.5,0),fl,s,ml,r,i),Ml.set(0,1),o=t.ray.intersectTriangle(vl,xl,bl,!1,dl),null===o))return;const a=t.ray.origin.distanceTo(dl);a<t.near||a>t.far||e.push({distance:a,point:dl.clone(),uv:Ci.getUV(dl,vl,bl,xl,wl,Ml,Sl,new Zn),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function El(t,e,n,r,i,s){gl.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(_l.x=s*gl.x-i*gl.y,_l.y=i*gl.x+s*gl.y):_l.copy(gl),t.copy(e),t.x+=_l.x,t.y+=_l.y,t.applyMatrix4(yl)}Tl.prototype.isSprite=!0;const Al=new ar,Cl=new ar;class Ll extends di{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const n=this.levels;let r;for(r=0;r<n.length&&!(e<n[r].distance);r++);return n.splice(r,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,r;for(n=1,r=e.length;n<r&&!(t<e[n].distance);n++);return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Al.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Al);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Al.setFromMatrixPosition(t.matrixWorld),Cl.setFromMatrixPosition(this.matrixWorld);const n=Al.distanceTo(Cl)/t.zoom;let r,i;for(e[0].object.visible=!0,r=1,i=e.length;r<i&&n>=e[r].distance;r++)e[r-1].object.visible=!1,e[r].object.visible=!0;for(this._currentLevel=r-1;r<i;r++)e[r].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,r=n.length;t<r;t++){const r=n[t];e.object.levels.push({object:r.object.uuid,distance:r.distance})}return e}}const zl=new ar,Rl=new rr,Pl=new rr,Dl=new ar,Il=new Fr;class Ol extends Es{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Fr,this.bindMatrixInverse=new Fr}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new rr,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;Rl.fromBufferAttribute(r.attributes.skinIndex,t),Pl.fromBufferAttribute(r.attributes.skinWeight,t),zl.fromBufferAttribute(r.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const r=Pl.getComponent(t);if(0!==r){const i=Rl.getComponent(t);Il.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),e.addScaledVector(Dl.copy(zl).applyMatrix4(Il),r)}}return e.applyMatrix4(this.bindMatrixInverse)}}Ol.prototype.isSkinnedMesh=!0;class Bl extends di{constructor(){super(),this.type="Bone"}}Bl.prototype.isBone=!0;const Nl=new Fr,Fl=new Fr;class Hl{constructor(t=[],e=[]){this.uuid=jn(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Fr)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Fr;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let r=0,i=t.length;r<i;r++){const i=t[r]?t[r].matrixWorld:Fl;Nl.multiplyMatrices(i,e[r]),Nl.toArray(n,16*r)}null!==r&&(r.needsUpdate=!0)}clone(){return new Hl(this.bones,this.boneInverses)}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,r=t.bones.length;n<r;n++){const r=t.bones[n];let i=e[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new Bl),this.bones.push(i),this.boneInverses.push((new Fr).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let r=0,i=e.length;r<i;r++){const i=e[r];t.bones.push(i.uuid);const s=n[r];t.boneInverses.push(s.toArray())}return t}}const Gl=new Fr,Ul=new Fr,jl=[],Vl=new Es;class kl extends Es{constructor(t,e,n){super(t,e),this.instanceMatrix=new Ui(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(Vl.geometry=this.geometry,Vl.material=this.material,void 0!==Vl.material)for(let i=0;i<r;i++){this.getMatrixAt(i,Gl),Ul.multiplyMatrices(n,Gl),Vl.matrixWorld=Ul,Vl.raycast(t,jl);for(let t=0,n=jl.length;t<n;t++){const n=jl[t];n.instanceId=i,n.object=this,e.push(n)}jl.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Ui(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}kl.prototype.isInstancedMesh=!0;class Wl extends zi{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Ni(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}Wl.prototype.isLineBasicMaterial=!0;const ql=new ar,Yl=new ar,Xl=new Fr,Jl=new Nr,Zl=new Lr;class Ql extends di{constructor(t=new ls,e=new Wl){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)ql.fromBufferAttribute(e,t-1),Yl.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=ql.distanceTo(Yl);t.setAttribute("lineDistance",new Zi(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Zl.copy(n.boundingSphere),Zl.applyMatrix4(r),Zl.radius+=i,!1===t.ray.intersectsSphere(Zl))return;Xl.copy(r).invert(),Jl.copy(t.ray).applyMatrix4(Xl);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,l=new ar,c=new ar,u=new ar,p=new ar,h=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,i=n.attributes.position;if(null!==r){for(let n=Math.max(0,s.start),o=Math.min(r.count,s.start+s.count)-1;n<o;n+=h){const s=r.getX(n),o=r.getX(n+1);if(l.fromBufferAttribute(i,s),c.fromBufferAttribute(i,o),Jl.distanceSqToSegment(l,c,p,u)>a)continue;p.applyMatrix4(this.matrixWorld);const h=t.ray.origin.distanceTo(p);h<t.near||h>t.far||e.push({distance:h,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else{for(let n=Math.max(0,s.start),r=Math.min(i.count,s.start+s.count)-1;n<r;n+=h){if(l.fromBufferAttribute(i,n),c.fromBufferAttribute(i,n+1),Jl.distanceSqToSegment(l,c,p,u)>a)continue;p.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(p);r<t.near||r>t.far||e.push({distance:r,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Ql.prototype.isLine=!0;const Kl=new ar,$l=new ar;class tc extends Ql{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)Kl.fromBufferAttribute(e,t),$l.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Kl.distanceTo($l);t.setAttribute("lineDistance",new Zi(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}tc.prototype.isLineSegments=!0;class ec extends Ql{constructor(t,e){super(t,e),this.type="LineLoop"}}ec.prototype.isLineLoop=!0;class nc extends zi{constructor(t){super(),this.type="PointsMaterial",this.color=new Ni(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}nc.prototype.isPointsMaterial=!0;const rc=new Fr,ic=new Nr,sc=new Lr,oc=new ar;class ac extends di{constructor(t=new ls,e=new nc){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),sc.copy(n.boundingSphere),sc.applyMatrix4(r),sc.radius+=i,!1===t.ray.intersectsSphere(sc))return;rc.copy(r).invert(),ic.copy(t.ray).applyMatrix4(rc);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o;if(n.isBufferGeometry){const i=n.index,o=n.attributes.position;if(null!==i){for(let n=Math.max(0,s.start),l=Math.min(i.count,s.start+s.count);n<l;n++){const s=i.getX(n);oc.fromBufferAttribute(o,s),lc(oc,s,a,r,t,e,this)}}else{for(let n=Math.max(0,s.start),i=Math.min(o.count,s.start+s.count);n<i;n++)oc.fromBufferAttribute(o,n),lc(oc,n,a,r,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function lc(t,e,n,r,i,s,o){const a=ic.distanceSqToPoint(t);if(a<n){const n=new ar;ic.closestPointToPoint(t,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:n,index:e,face:null,object:o})}}ac.prototype.isPoints=!0;class cc extends er{constructor(t,e,n,r,i,s,o,a,l){super(t,e,n,r,i,s,o,a,l),this.format=void 0!==o?o:Ft,this.minFilter=void 0!==s?s:bt,this.magFilter=void 0!==i?i:bt,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}cc.prototype.isVideoTexture=!0;class uc extends er{constructor(t,e,n,r,i,s,o,a,l,c,u,p){super(null,s,o,a,l,c,r,i,u,p),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}uc.prototype.isCompressedTexture=!0;class pc extends er{constructor(t,e,n,r,i,s,o,a,l){super(t,e,n,r,i,s,o,a,l),this.needsUpdate=!0}}pc.prototype.isCanvasTexture=!0;class hc extends er{constructor(t,e,n,r,i,s,o,a,l,c){if((c=void 0!==c?c:Vt)!==Vt&&c!==kt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===Vt&&(n=Ct),void 0===n&&c===kt&&(n=Bt),super(null,r,i,s,o,a,c,n,l),this.image={width:t,height:e},this.magFilter=void 0!==o?o:ft,this.minFilter=void 0!==a?a:ft,this.flipY=!1,this.generateMipmaps=!1}}hc.prototype.isDepthTexture=!0;class dc extends ls{constructor(t=1,e=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},e=Math.max(3,e);const i=[],s=[],o=[],a=[],l=new ar,c=new Zn;s.push(0,0,0),o.push(0,0,1),a.push(.5,.5);for(let i=0,u=3;i<=e;i++,u+=3){const p=n+i/e*r;l.x=t*Math.cos(p),l.y=t*Math.sin(p),s.push(l.x,l.y,l.z),o.push(0,0,1),c.x=(s[u]/t+1)/2,c.y=(s[u+1]/t+1)/2,a.push(c.x,c.y)}for(let t=1;t<=e;t++)i.push(t,t+1,0);this.setIndex(i),this.setAttribute("position",new Zi(s,3)),this.setAttribute("normal",new Zi(o,3)),this.setAttribute("uv",new Zi(a,2))}}class mc extends ls{constructor(t=1,e=1,n=1,r=8,i=1,s=!1,o=0,a=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a};const l=this;r=Math.floor(r),i=Math.floor(i);const c=[],u=[],p=[],h=[];let d=0;const m=[],f=n/2;let g=0;function _(n){const i=d,s=new Zn,m=new ar;let _=0;const y=!0===n?t:e,v=!0===n?1:-1;for(let t=1;t<=r;t++)u.push(0,f*v,0),p.push(0,v,0),h.push(.5,.5),d++;const b=d;for(let t=0;t<=r;t++){const e=t/r*a+o,n=Math.cos(e),i=Math.sin(e);m.x=y*i,m.y=f*v,m.z=y*n,u.push(m.x,m.y,m.z),p.push(0,v,0),s.x=.5*n+.5,s.y=.5*i*v+.5,h.push(s.x,s.y),d++}for(let t=0;t<r;t++){const e=i+t,r=b+t;!0===n?c.push(r,r+1,e):c.push(r+1,r,e),_+=3}l.addGroup(g,_,!0===n?1:2),g+=_}!function(){const s=new ar,_=new ar;let y=0;const v=(e-t)/n;for(let l=0;l<=i;l++){const c=[],g=l/i,y=g*(e-t)+t;for(let t=0;t<=r;t++){const e=t/r,i=e*a+o,l=Math.sin(i),m=Math.cos(i);_.x=y*l,_.y=-g*n+f,_.z=y*m,u.push(_.x,_.y,_.z),s.set(l,v,m).normalize(),p.push(s.x,s.y,s.z),h.push(e,1-g),c.push(d++)}m.push(c)}for(let t=0;t<r;t++)for(let e=0;e<i;e++){const n=m[e][t],r=m[e+1][t],i=m[e+1][t+1],s=m[e][t+1];c.push(n,r,s),c.push(r,i,s),y+=6}l.addGroup(g,y,0),g+=y}(),!1===s&&(t>0&&_(!0),e>0&&_(!1)),this.setIndex(c),this.setAttribute("position",new Zi(u,3)),this.setAttribute("normal",new Zi(p,3)),this.setAttribute("uv",new Zi(h,2))}}class fc extends mc{constructor(t=1,e=1,n=8,r=1,i=!1,s=0,o=2*Math.PI){super(0,t,e,n,r,i,s,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:s,thetaLength:o}}}class gc extends ls{constructor(t,e,n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const i=[],s=[];function o(t,e,n,r){const i=r+1,s=[];for(let r=0;r<=i;r++){s[r]=[];const o=t.clone().lerp(n,r/i),a=e.clone().lerp(n,r/i),l=i-r;for(let t=0;t<=l;t++)s[r][t]=0===t&&r===i?o:o.clone().lerp(a,t/l)}for(let t=0;t<i;t++)for(let e=0;e<2*(i-t)-1;e++){const n=Math.floor(e/2);e%2==0?(a(s[t][n+1]),a(s[t+1][n]),a(s[t][n])):(a(s[t][n+1]),a(s[t+1][n+1]),a(s[t+1][n]))}}function a(t){i.push(t.x,t.y,t.z)}function l(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function c(t,e,n,r){r<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=r/2/Math.PI+.5)}function u(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new ar,r=new ar,i=new ar;for(let s=0;s<e.length;s+=3)l(e[s+0],n),l(e[s+1],r),l(e[s+2],i),o(n,r,i,t)}(r),function(t){const e=new ar;for(let n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}(n),function(){const t=new ar;for(let n=0;n<i.length;n+=3){t.x=i[n+0],t.y=i[n+1],t.z=i[n+2];const r=u(t)/2/Math.PI+.5,o=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);s.push(r,1-o)}var e;(function(){const t=new ar,e=new ar,n=new ar,r=new ar,o=new Zn,a=new Zn,l=new Zn;for(let p=0,h=0;p<i.length;p+=9,h+=6){t.set(i[p+0],i[p+1],i[p+2]),e.set(i[p+3],i[p+4],i[p+5]),n.set(i[p+6],i[p+7],i[p+8]),o.set(s[h+0],s[h+1]),a.set(s[h+2],s[h+3]),l.set(s[h+4],s[h+5]),r.copy(t).add(e).add(n).divideScalar(3);const d=u(r);c(o,h+0,t,d),c(a,h+2,e,d),c(l,h+4,n,d)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],r=s[t+4],i=Math.max(e,n,r),o=Math.min(e,n,r);i>.9&&o<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),r<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new Zi(i,3)),this.setAttribute("normal",new Zi(i.slice(),3)),this.setAttribute("uv",new Zi(s,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}}class _c extends gc{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}}const yc=new ar,vc=new ar,bc=new ar,xc=new Ci;class wc extends ls{constructor(t,e){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1,!0===t.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const n=Math.pow(10,4),r=Math.cos(Gn*e),i=t.getIndex(),s=t.getAttribute("position"),o=i?i.count:s.count,a=[0,0,0],l=["a","b","c"],c=new Array(3),u={},p=[];for(let t=0;t<o;t+=3){i?(a[0]=i.getX(t),a[1]=i.getX(t+1),a[2]=i.getX(t+2)):(a[0]=t,a[1]=t+1,a[2]=t+2);const{a:e,b:o,c:h}=xc;if(e.fromBufferAttribute(s,a[0]),o.fromBufferAttribute(s,a[1]),h.fromBufferAttribute(s,a[2]),xc.getNormal(bc),c[0]=`${Math.round(e.x*n)},${Math.round(e.y*n)},${Math.round(e.z*n)}`,c[1]=`${Math.round(o.x*n)},${Math.round(o.y*n)},${Math.round(o.z*n)}`,c[2]=`${Math.round(h.x*n)},${Math.round(h.y*n)},${Math.round(h.z*n)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=c[t],i=c[e],s=xc[l[t]],o=xc[l[e]],h=`${n}_${i}`,d=`${i}_${n}`;d in u&&u[d]?(bc.dot(u[d].normal)<=r&&(p.push(s.x,s.y,s.z),p.push(o.x,o.y,o.z)),u[d]=null):h in u||(u[h]={index0:a[t],index1:a[e],normal:bc.clone()})}}for(const t in u)if(u[t]){const{index0:e,index1:n}=u[t];yc.fromBufferAttribute(s,e),vc.fromBufferAttribute(s,n),p.push(yc.x,yc.y,yc.z),p.push(vc.x,vc.y,vc.z)}this.setAttribute("position",new Zi(p,3))}}const Mc=function(t,e,n){n=n||2;const r=e&&e.length,i=r?e[0]*n:t.length;let s=Sc(t,0,i,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,p,h,d;if(r&&(s=function(t,e,n,r){const i=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*r,l=s<o-1?e[s+1]*r:t.length,c=Sc(t,a,l,r,!1),c===c.next&&(c.steiner=!0),i.push(Oc(c));for(i.sort(Rc),s=0;s<i.length;s++)Pc(i[s],n),n=Tc(n,n.next);return n}(t,e,s,n)),t.length>80*n){a=c=t[0],l=u=t[1];for(let e=n;e<i;e+=n)p=t[e],h=t[e+1],p<a&&(a=p),h<l&&(l=h),p>c&&(c=p),h>u&&(u=h);d=Math.max(c-a,u-l),d=0!==d?1/d:0}return Ec(s,o,n,a,l,d),o};function Sc(t,e,n,r,i){let s,o;if(i===function(t,e,n,r){let i=0;for(let s=e,o=n-r;s<n;s+=r)i+=(t[o]-t[s])*(t[s+1]+t[o+1]),o=s;return i}(t,e,n,r)>0)for(s=e;s<n;s+=r)o=Wc(s,t[s],t[s+1],o);else for(s=n-r;s>=e;s-=r)o=Wc(s,t[s],t[s+1],o);return o&&Hc(o,o.next)&&(qc(o),o=o.next),o}function Tc(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!Hc(r,r.next)&&0!==Fc(r.prev,r,r.next))r=r.next;else{if(qc(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function Ec(t,e,n,r,i,s,o){if(!t)return;!o&&s&&function(t,e,n,r){let i=t;do{null===i.z&&(i.z=Ic(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){let e,n,r,i,s,o,a,l,c=1;do{for(n=t,t=null,s=null,o=0;n;){for(o++,r=n,a=0,e=0;e<c&&(a++,r=r.nextZ,r);e++);for(l=c;a>0||l>0&&r;)0!==a&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,a--):(i=r,r=r.nextZ,l--),s?s.nextZ=i:t=i,i.prevZ=s,s=i;n=r}s.nextZ=null,c*=2}while(o>1)}(i)}(t,r,i,s);let a,l,c=t;for(;t.prev!==t.next;)if(a=t.prev,l=t.next,s?Cc(t,r,i,s):Ac(t))e.push(a.i/n),e.push(t.i/n),e.push(l.i/n),qc(t),t=l.next,c=l.next;else if((t=l)===c){o?1===o?Ec(t=Lc(Tc(t),e,n),e,n,r,i,s,2):2===o&&zc(t,e,n,r,i,s):Ec(Tc(t),e,n,r,i,s,1);break}}function Ac(t){const e=t.prev,n=t,r=t.next;if(Fc(e,n,r)>=0)return!1;let i=t.next.next;for(;i!==t.prev;){if(Bc(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&Fc(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Cc(t,e,n,r){const i=t.prev,s=t,o=t.next;if(Fc(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,l=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,c=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,p=Ic(a,l,e,n,r),h=Ic(c,u,e,n,r);let d=t.prevZ,m=t.nextZ;for(;d&&d.z>=p&&m&&m.z<=h;){if(d!==t.prev&&d!==t.next&&Bc(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Fc(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,m!==t.prev&&m!==t.next&&Bc(i.x,i.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Fc(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;d&&d.z>=p;){if(d!==t.prev&&d!==t.next&&Bc(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Fc(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;m&&m.z<=h;){if(m!==t.prev&&m!==t.next&&Bc(i.x,i.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Fc(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Lc(t,e,n){let r=t;do{const i=r.prev,s=r.next.next;!Hc(i,s)&&Gc(i,r,r.next,s)&&Vc(i,s)&&Vc(s,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(s.i/n),qc(r),qc(r.next),r=t=s),r=r.next}while(r!==t);return Tc(r)}function zc(t,e,n,r,i,s){let o=t;do{let t=o.next.next;for(;t!==o.prev;){if(o.i!==t.i&&Nc(o,t)){let a=kc(o,t);return o=Tc(o,o.next),a=Tc(a,a.next),Ec(o,e,n,r,i,s),void Ec(a,e,n,r,i,s)}t=t.next}o=o.next}while(o!==t)}function Rc(t,e){return t.x-e.x}function Pc(t,e){if(e=function(t,e){let n=e;const r=t.x,i=t.y;let s,o=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const t=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>o){if(o=t,t===r){if(i===n.y)return n;if(i===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(r===o)return s;const a=s,l=s.x,c=s.y;let u,p=1/0;n=s;do{r>=n.x&&n.x>=l&&r!==n.x&&Bc(i<c?r:o,i,l,c,i<c?o:r,i,n.x,n.y)&&(u=Math.abs(i-n.y)/(r-n.x),Vc(n,t)&&(u<p||u===p&&(n.x>s.x||n.x===s.x&&Dc(s,n)))&&(s=n,p=u)),n=n.next}while(n!==a);return s}(t,e)){const n=kc(e,t);Tc(e,e.next),Tc(n,n.next)}}function Dc(t,e){return Fc(t.prev,t,e.prev)<0&&Fc(e.next,t,t.next)<0}function Ic(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Oc(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Bc(t,e,n,r,i,s,o,a){return(i-o)*(e-a)-(t-o)*(s-a)>=0&&(t-o)*(r-a)-(n-o)*(e-a)>=0&&(n-o)*(s-a)-(i-o)*(r-a)>=0}function Nc(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Gc(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Vc(t,e)&&Vc(e,t)&&function(t,e){let n=t,r=!1;const i=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&i<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(Fc(t.prev,t,e.prev)||Fc(t,e.prev,e))||Hc(t,e)&&Fc(t.prev,t,t.next)>0&&Fc(e.prev,e,e.next)>0)}function Fc(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Hc(t,e){return t.x===e.x&&t.y===e.y}function Gc(t,e,n,r){const i=jc(Fc(t,e,n)),s=jc(Fc(t,e,r)),o=jc(Fc(n,r,t)),a=jc(Fc(n,r,e));return i!==s&&o!==a||(!(0!==i||!Uc(t,n,e))||(!(0!==s||!Uc(t,r,e))||(!(0!==o||!Uc(n,t,r))||!(0!==a||!Uc(n,e,r)))))}function Uc(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function jc(t){return t>0?1:t<0?-1:0}function Vc(t,e){return Fc(t.prev,t,t.next)<0?Fc(t,e,t.next)>=0&&Fc(t,t.prev,e)>=0:Fc(t,e,t.prev)<0||Fc(t,t.next,e)<0}function kc(t,e){const n=new Yc(t.i,t.x,t.y),r=new Yc(e.i,e.x,e.y),i=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,s.next=r,r.prev=s,r}function Wc(t,e,n,r){const i=new Yc(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function qc(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Yc(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Xc{static area(t){const e=t.length;let n=0;for(let r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n}static isClockWise(t){return Xc.area(t)<0}static triangulateShape(t,e){const n=[],r=[],i=[];Jc(t),Zc(n,t);let s=t.length;e.forEach(Jc);for(let t=0;t<e.length;t++)r.push(s),s+=e[t].length,Zc(n,e[t]);const o=Mc(n,r);for(let t=0;t<o.length;t+=3)i.push(o.slice(t,t+3));return i}}function Jc(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Zc(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Qc extends ls{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],i=[];for(let e=0,n=t.length;e<n;e++){s(t[e])}function s(t){const s=[],o=void 0!==e.curveSegments?e.curveSegments:12,a=void 0!==e.steps?e.steps:1;let l=void 0!==e.depth?e.depth:100,c=void 0===e.bevelEnabled||e.bevelEnabled,u=void 0!==e.bevelThickness?e.bevelThickness:6,p=void 0!==e.bevelSize?e.bevelSize:u-2,h=void 0!==e.bevelOffset?e.bevelOffset:0,d=void 0!==e.bevelSegments?e.bevelSegments:3;const m=e.extrudePath,f=void 0!==e.UVGenerator?e.UVGenerator:Kc;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=e.amount);let g,_,y,v,b,x=!1;m&&(g=m.getSpacedPoints(a),x=!0,c=!1,_=m.computeFrenetFrames(a,!1),y=new ar,v=new ar,b=new ar),c||(d=0,u=0,p=0,h=0);const w=t.extractPoints(o);let M=w.shape;const S=w.holes;if(!Xc.isClockWise(M)){M=M.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];Xc.isClockWise(e)&&(S[t]=e.reverse())}}const T=Xc.triangulateShape(M,S),E=M;for(let t=0,e=S.length;t<e;t++){const e=S[t];M=M.concat(e)}function A(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const C=M.length,L=T.length;function z(t,e,n){let r,i,s;const o=t.x-e.x,a=t.y-e.y,l=n.x-t.x,c=n.y-t.y,u=o*o+a*a,p=o*c-a*l;if(Math.abs(p)>Number.EPSILON){const p=Math.sqrt(u),h=Math.sqrt(l*l+c*c),d=e.x-a/p,m=e.y+o/p,f=((n.x-c/h-d)*c-(n.y+l/h-m)*l)/(o*c-a*l);r=d+o*f-t.x,i=m+a*f-t.y;const g=r*r+i*i;if(g<=2)return new Zn(r,i);s=Math.sqrt(g/2)}else{let t=!1;o>Number.EPSILON?l>Number.EPSILON&&(t=!0):o<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(c)&&(t=!0),t?(r=-a,i=o,s=Math.sqrt(u)):(r=o,i=a,s=Math.sqrt(u/2))}return new Zn(r/s,i/s)}const R=[];for(let t=0,e=E.length,n=e-1,r=t+1;t<e;t++,n++,r++)n===e&&(n=0),r===e&&(r=0),R[t]=z(E[t],E[n],E[r]);const P=[];let D,I=R.concat();for(let t=0,e=S.length;t<e;t++){const e=S[t];D=[];for(let t=0,n=e.length,r=n-1,i=t+1;t<n;t++,r++,i++)r===n&&(r=0),i===n&&(i=0),D[t]=z(e[t],e[r],e[i]);P.push(D),I=I.concat(D)}for(let t=0;t<d;t++){const e=t/d,n=u*Math.cos(e*Math.PI/2),r=p*Math.sin(e*Math.PI/2)+h;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],R[t],r);N(e.x,e.y,-n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];D=P[t];for(let t=0,i=e.length;t<i;t++){const i=A(e[t],D[t],r);N(i.x,i.y,-n)}}}const O=p+h;for(let t=0;t<C;t++){const e=c?A(M[t],I[t],O):M[t];x?(v.copy(_.normals[0]).multiplyScalar(e.x),y.copy(_.binormals[0]).multiplyScalar(e.y),b.copy(g[0]).add(v).add(y),N(b.x,b.y,b.z)):N(e.x,e.y,0)}for(let t=1;t<=a;t++)for(let e=0;e<C;e++){const n=c?A(M[e],I[e],O):M[e];x?(v.copy(_.normals[t]).multiplyScalar(n.x),y.copy(_.binormals[t]).multiplyScalar(n.y),b.copy(g[t]).add(v).add(y),N(b.x,b.y,b.z)):N(n.x,n.y,l/a*t)}for(let t=d-1;t>=0;t--){const e=t/d,n=u*Math.cos(e*Math.PI/2),r=p*Math.sin(e*Math.PI/2)+h;for(let t=0,e=E.length;t<e;t++){const e=A(E[t],R[t],r);N(e.x,e.y,l+n)}for(let t=0,e=S.length;t<e;t++){const e=S[t];D=P[t];for(let t=0,i=e.length;t<i;t++){const i=A(e[t],D[t],r);x?N(i.x,i.y+g[a-1].y,g[a-1].x+n):N(i.x,i.y,l+n)}}}function B(t,e){let n=t.length;for(;--n>=0;){const r=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=a+2*d;t<n;t++){const n=C*t,s=C*(t+1);H(e+r+n,e+i+n,e+i+s,e+r+s)}}}function N(t,e,n){s.push(t),s.push(e),s.push(n)}function F(t,e,i){G(t),G(e),G(i);const s=r.length/3,o=f.generateTopUV(n,r,s-3,s-2,s-1);U(o[0]),U(o[1]),U(o[2])}function H(t,e,i,s){G(t),G(e),G(s),G(e),G(i),G(s);const o=r.length/3,a=f.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);U(a[0]),U(a[1]),U(a[3]),U(a[1]),U(a[2]),U(a[3])}function G(t){r.push(s[3*t+0]),r.push(s[3*t+1]),r.push(s[3*t+2])}function U(t){i.push(t.x),i.push(t.y)}!function(){const t=r.length/3;if(c){let t=0,e=C*t;for(let t=0;t<L;t++){const n=T[t];F(n[2]+e,n[1]+e,n[0]+e)}t=a+2*d,e=C*t;for(let t=0;t<L;t++){const n=T[t];F(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<L;t++){const e=T[t];F(e[2],e[1],e[0])}for(let t=0;t<L;t++){const e=T[t];F(e[0]+C*a,e[1]+C*a,e[2]+C*a)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;B(E,e),e+=E.length;for(let t=0,n=S.length;t<n;t++){const n=S[t];B(n,e),e+=n.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new Zi(r,3)),this.setAttribute("uv",new Zi(i,2)),this.computeVertexNormals()}toJSON(){const t=ls.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,r=t.length;e<r;e++){const r=t[e];n.shapes.push(r.uuid)}else n.shapes.push(t.uuid);void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}}const Kc={generateTopUV:function(t,e,n,r,i){const s=e[3*n],o=e[3*n+1],a=e[3*r],l=e[3*r+1],c=e[3*i],u=e[3*i+1];return[new Zn(s,o),new Zn(a,l),new Zn(c,u)]},generateSideWallUV:function(t,e,n,r,i,s){const o=e[3*n],a=e[3*n+1],l=e[3*n+2],c=e[3*r],u=e[3*r+1],p=e[3*r+2],h=e[3*i],d=e[3*i+1],m=e[3*i+2],f=e[3*s],g=e[3*s+1],_=e[3*s+2];return Math.abs(a-u)<.01?[new Zn(o,1-l),new Zn(c,1-p),new Zn(h,1-m),new Zn(f,1-_)]:[new Zn(a,1-l),new Zn(u,1-p),new Zn(d,1-m),new Zn(g,1-_)]}};class $c extends gc{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}}class tu extends ls{constructor(t,e=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e),r=Vn(r,0,2*Math.PI);const i=[],s=[],o=[],a=1/e,l=new ar,c=new Zn;for(let i=0;i<=e;i++){const u=n+i*a*r,p=Math.sin(u),h=Math.cos(u);for(let n=0;n<=t.length-1;n++)l.x=t[n].x*p,l.y=t[n].y,l.z=t[n].x*h,s.push(l.x,l.y,l.z),c.x=i/e,c.y=n/(t.length-1),o.push(c.x,c.y)}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const r=e+n*t.length,s=r,o=r+t.length,a=r+t.length+1,l=r+1;i.push(s,o,l),i.push(o,a,l)}if(this.setIndex(i),this.setAttribute("position",new Zi(s,3)),this.setAttribute("uv",new Zi(o,2)),this.computeVertexNormals(),r===2*Math.PI){const n=this.attributes.normal.array,r=new ar,i=new ar,s=new ar,o=e*t.length*3;for(let e=0,a=0;e<t.length;e++,a+=3)r.x=n[a+0],r.y=n[a+1],r.z=n[a+2],i.x=n[o+a+0],i.y=n[o+a+1],i.z=n[o+a+2],s.addVectors(r,i).normalize(),n[a+0]=n[o+a+0]=s.x,n[a+1]=n[o+a+1]=s.y,n[a+2]=n[o+a+2]=s.z}}}class eu extends gc{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}}class nu extends ls{constructor(t,e,n){super(),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const r=[],i=[],s=[],o=[],a=new ar,l=new ar,c=new ar,u=new ar,p=new ar;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const h=e+1;for(let r=0;r<=n;r++){const h=r/n;for(let n=0;n<=e;n++){const r=n/e;t(r,h,l),i.push(l.x,l.y,l.z),r-1e-5>=0?(t(r-1e-5,h,c),u.subVectors(l,c)):(t(r+1e-5,h,c),u.subVectors(c,l)),h-1e-5>=0?(t(r,h-1e-5,c),p.subVectors(l,c)):(t(r,h+1e-5,c),p.subVectors(c,l)),a.crossVectors(u,p).normalize(),s.push(a.x,a.y,a.z),o.push(r,h)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*h+n,i=t*h+n+1,s=(t+1)*h+n+1,o=(t+1)*h+n;r.push(e,i,o),r.push(i,s,o)}this.setIndex(r),this.setAttribute("position",new Zi(i,3)),this.setAttribute("normal",new Zi(s,3)),this.setAttribute("uv",new Zi(o,2))}}class ru extends ls{constructor(t=.5,e=1,n=8,r=1,i=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:s},n=Math.max(3,n);const o=[],a=[],l=[],c=[];let u=t;const p=(e-t)/(r=Math.max(1,r)),h=new ar,d=new Zn;for(let t=0;t<=r;t++){for(let t=0;t<=n;t++){const r=i+t/n*s;h.x=u*Math.cos(r),h.y=u*Math.sin(r),a.push(h.x,h.y,h.z),l.push(0,0,1),d.x=(h.x/e+1)/2,d.y=(h.y/e+1)/2,c.push(d.x,d.y)}u+=p}for(let t=0;t<r;t++){const e=t*(n+1);for(let t=0;t<n;t++){const r=t+e,i=r,s=r+n+1,a=r+n+2,l=r+1;o.push(i,s,l),o.push(s,a,l)}}this.setIndex(o),this.setAttribute("position",new Zi(a,3)),this.setAttribute("normal",new Zi(l,3)),this.setAttribute("uv",new Zi(c,2))}}class iu extends ls{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],i=[],s=[];let o=0,a=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(o,a,e),o+=a,a=0;function l(t){const o=r.length/3,l=t.extractPoints(e);let c=l.shape;const u=l.holes;!1===Xc.isClockWise(c)&&(c=c.reverse());for(let t=0,e=u.length;t<e;t++){const e=u[t];!0===Xc.isClockWise(e)&&(u[t]=e.reverse())}const p=Xc.triangulateShape(c,u);for(let t=0,e=u.length;t<e;t++){const e=u[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];r.push(e.x,e.y,0),i.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=p.length;t<e;t++){const e=p[t],r=e[0]+o,i=e[1]+o,s=e[2]+o;n.push(r,i,s),a+=3}}this.setIndex(n),this.setAttribute("position",new Zi(r,3)),this.setAttribute("normal",new Zi(i,3)),this.setAttribute("uv",new Zi(s,2))}toJSON(){const t=ls.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class su extends ls{constructor(t=1,e=8,n=6,r=0,i=2*Math.PI,s=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:i,thetaStart:s,thetaLength:o},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const a=Math.min(s+o,Math.PI);let l=0;const c=[],u=new ar,p=new ar,h=[],d=[],m=[],f=[];for(let h=0;h<=n;h++){const g=[],_=h/n;let y=0;0==h&&0==s?y=.5/e:h==n&&a==Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const a=n/e;u.x=-t*Math.cos(r+a*i)*Math.sin(s+_*o),u.y=t*Math.cos(s+_*o),u.z=t*Math.sin(r+a*i)*Math.sin(s+_*o),d.push(u.x,u.y,u.z),p.copy(u).normalize(),m.push(p.x,p.y,p.z),f.push(a+y,1-_),g.push(l++)}c.push(g)}for(let t=0;t<n;t++)for(let r=0;r<e;r++){const e=c[t][r+1],i=c[t][r],o=c[t+1][r],l=c[t+1][r+1];(0!==t||s>0)&&h.push(e,i,l),(t!==n-1||a<Math.PI)&&h.push(i,o,l)}this.setIndex(h),this.setAttribute("position",new Zi(d,3)),this.setAttribute("normal",new Zi(m,3)),this.setAttribute("uv",new Zi(f,2))}}class ou extends gc{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}}class au extends Qc{constructor(t,e={}){const n=e.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ls;const r=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(r,e),this.type="TextGeometry"}}class lu extends ls{constructor(t=1,e=.4,n=8,r=6,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:i},n=Math.floor(n),r=Math.floor(r);const s=[],o=[],a=[],l=[],c=new ar,u=new ar,p=new ar;for(let s=0;s<=n;s++)for(let h=0;h<=r;h++){const d=h/r*i,m=s/n*Math.PI*2;u.x=(t+e*Math.cos(m))*Math.cos(d),u.y=(t+e*Math.cos(m))*Math.sin(d),u.z=e*Math.sin(m),o.push(u.x,u.y,u.z),c.x=t*Math.cos(d),c.y=t*Math.sin(d),p.subVectors(u,c).normalize(),a.push(p.x,p.y,p.z),l.push(h/r),l.push(s/n)}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){const n=(r+1)*t+e-1,i=(r+1)*(t-1)+e-1,o=(r+1)*(t-1)+e,a=(r+1)*t+e;s.push(n,i,a),s.push(i,o,a)}this.setIndex(s),this.setAttribute("position",new Zi(o,3)),this.setAttribute("normal",new Zi(a,3)),this.setAttribute("uv",new Zi(l,2))}}class cu extends ls{constructor(t=1,e=.4,n=64,r=8,i=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:i,q:s},n=Math.floor(n),r=Math.floor(r);const o=[],a=[],l=[],c=[],u=new ar,p=new ar,h=new ar,d=new ar,m=new ar,f=new ar,g=new ar;for(let o=0;o<=n;++o){const y=o/n*i*Math.PI*2;_(y,i,s,t,h),_(y+.01,i,s,t,d),f.subVectors(d,h),g.addVectors(d,h),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=r;++t){const i=t/r*Math.PI*2,s=-e*Math.cos(i),d=e*Math.sin(i);u.x=h.x+(s*g.x+d*m.x),u.y=h.y+(s*g.y+d*m.y),u.z=h.z+(s*g.z+d*m.z),a.push(u.x,u.y,u.z),p.subVectors(u,h).normalize(),l.push(p.x,p.y,p.z),c.push(o/n),c.push(t/r)}}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),s=(r+1)*t+e,a=(r+1)*(t-1)+e;o.push(n,i,a),o.push(i,s,a)}function _(t,e,n,r,i){const s=Math.cos(t),o=Math.sin(t),a=n/e*t,l=Math.cos(a);i.x=r*(2+l)*.5*s,i.y=r*(2+l)*o*.5,i.z=r*Math.sin(a)*.5}this.setIndex(o),this.setAttribute("position",new Zi(a,3)),this.setAttribute("normal",new Zi(l,3)),this.setAttribute("uv",new Zi(c,2))}}class uu extends ls{constructor(t,e=64,n=1,r=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i};const s=t.computeFrenetFrames(e,i);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const o=new ar,a=new ar,l=new Zn;let c=new ar;const u=[],p=[],h=[],d=[];function m(i){c=t.getPointAt(i/e,c);const l=s.normals[i],h=s.binormals[i];for(let t=0;t<=r;t++){const e=t/r*Math.PI*2,i=Math.sin(e),s=-Math.cos(e);a.x=s*l.x+i*h.x,a.y=s*l.y+i*h.y,a.z=s*l.z+i*h.z,a.normalize(),p.push(a.x,a.y,a.z),o.x=c.x+n*a.x,o.y=c.y+n*a.y,o.z=c.z+n*a.z,u.push(o.x,o.y,o.z)}}!function(){for(let t=0;t<e;t++)m(t);m(!1===i?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=r;n++)l.x=t/e,l.y=n/r,h.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),s=(r+1)*t+e,o=(r+1)*(t-1)+e;d.push(n,i,o),d.push(i,s,o)}}()}(),this.setIndex(d),this.setAttribute("position",new Zi(u,3)),this.setAttribute("normal",new Zi(p,3)),this.setAttribute("uv",new Zi(h,2))}toJSON(){const t=ls.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}class pu extends ls{constructor(t){if(super(),this.type="WireframeGeometry",!0===t.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const e=[],n=[0,0],r={},i=new ar;if(null!==t.index){const s=t.attributes.position,o=t.index;let a=t.groups;0===a.length&&(a=[{start:0,count:o.count,materialIndex:0}]);for(let t=0,e=a.length;t<e;++t){const e=a[t],i=e.start;for(let t=i,s=i+e.count;t<s;t+=3)for(let e=0;e<3;e++){const i=o.getX(t+e),s=o.getX(t+(e+1)%3);n[0]=Math.min(i,s),n[1]=Math.max(i,s);const a=n[0]+","+n[1];void 0===r[a]&&(r[a]={index1:n[0],index2:n[1]})}}for(const t in r){const n=r[t];i.fromBufferAttribute(s,n.index1),e.push(i.x,i.y,i.z),i.fromBufferAttribute(s,n.index2),e.push(i.x,i.y,i.z)}}else{const n=t.attributes.position;for(let t=0,r=n.count/3;t<r;t++)for(let r=0;r<3;r++){const s=3*t+r;i.fromBufferAttribute(n,s),e.push(i.x,i.y,i.z);const o=3*t+(r+1)%3;i.fromBufferAttribute(n,o),e.push(i.x,i.y,i.z)}}this.setAttribute("position",new Zi(e,3))}}var hu=Object.freeze({__proto__:null,BoxGeometry:Cs,BoxBufferGeometry:Cs,CircleGeometry:dc,CircleBufferGeometry:dc,ConeGeometry:fc,ConeBufferGeometry:fc,CylinderGeometry:mc,CylinderBufferGeometry:mc,DodecahedronGeometry:_c,DodecahedronBufferGeometry:_c,EdgesGeometry:wc,ExtrudeGeometry:Qc,ExtrudeBufferGeometry:Qc,IcosahedronGeometry:$c,IcosahedronBufferGeometry:$c,LatheGeometry:tu,LatheBufferGeometry:tu,OctahedronGeometry:eu,OctahedronBufferGeometry:eu,ParametricGeometry:nu,ParametricBufferGeometry:nu,PlaneGeometry:ks,PlaneBufferGeometry:ks,PolyhedronGeometry:gc,PolyhedronBufferGeometry:gc,RingGeometry:ru,RingBufferGeometry:ru,ShapeGeometry:iu,ShapeBufferGeometry:iu,SphereGeometry:su,SphereBufferGeometry:su,TetrahedronGeometry:ou,TetrahedronBufferGeometry:ou,TextGeometry:au,TextBufferGeometry:au,TorusGeometry:lu,TorusBufferGeometry:lu,TorusKnotGeometry:cu,TorusKnotBufferGeometry:cu,TubeGeometry:uu,TubeBufferGeometry:uu,WireframeGeometry:pu});class du extends zi{constructor(t){super(),this.type="ShadowMaterial",this.color=new Ni(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}du.prototype.isShadowMaterial=!0;class mu extends Ps{constructor(t){super(t),this.type="RawShaderMaterial"}}mu.prototype.isRawShaderMaterial=!0;class fu extends zi{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ni(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ni(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this}}fu.prototype.isMeshStandardMaterial=!0;class gu extends fu{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Zn(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=Vn(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Ni).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this}}gu.prototype.isMeshPhysicalMaterial=!0;class _u extends zi{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Ni(16777215),this.specular=new Ni(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ni(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}_u.prototype.isMeshPhongMaterial=!0;class yu extends zi{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ni(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ni(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}yu.prototype.isMeshToonMaterial=!0;class vu extends zi{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}vu.prototype.isMeshNormalMaterial=!0;class bu extends zi{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Ni(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ni(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}bu.prototype.isMeshLambertMaterial=!0;class xu extends zi{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ni(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}xu.prototype.isMeshMatcapMaterial=!0;class wu extends Wl{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}wu.prototype.isLineDashedMaterial=!0;var Mu=Object.freeze({__proto__:null,ShadowMaterial:du,SpriteMaterial:pl,RawShaderMaterial:mu,ShaderMaterial:Ps,PointsMaterial:nc,MeshPhysicalMaterial:gu,MeshStandardMaterial:fu,MeshPhongMaterial:_u,MeshToonMaterial:yu,MeshNormalMaterial:vu,MeshLambertMaterial:bu,MeshDepthMaterial:Wa,MeshDistanceMaterial:qa,MeshBasicMaterial:Fi,MeshMatcapMaterial:xu,LineDashedMaterial:wu,LineBasicMaterial:Wl,Material:zi});const Su={arraySlice:function(t,e,n){return Su.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const r=t.length,i=new t.constructor(r);for(let s=0,o=0;o!==r;++s){const r=n[s]*e;for(let n=0;n!==e;++n)i[o++]=t[r+n]}return i},flattenJSON:function(t,e,n,r){let i=1,s=t[0];for(;void 0!==s&&void 0===s[r];)s=t[i++];if(void 0===s)return;let o=s[r];if(void 0!==o)if(Array.isArray(o))do{o=s[r],void 0!==o&&(e.push(s.time),n.push.apply(n,o)),s=t[i++]}while(void 0!==s);else if(void 0!==o.toArray)do{o=s[r],void 0!==o&&(e.push(s.time),o.toArray(n,n.length)),s=t[i++]}while(void 0!==s);else do{o=s[r],void 0!==o&&(e.push(s.time),n.push(o)),s=t[i++]}while(void 0!==s)},subclip:function(t,e,n,r,i=30){const s=t.clone();s.name=e;const o=[];for(let t=0;t<s.tracks.length;++t){const e=s.tracks[t],a=e.getValueSize(),l=[],c=[];for(let t=0;t<e.times.length;++t){const s=e.times[t]*i;if(!(s<n||s>=r)){l.push(e.times[t]);for(let n=0;n<a;++n)c.push(e.values[t*a+n])}}0!==l.length&&(e.times=Su.convertArray(l,e.times.constructor),e.values=Su.convertArray(c,e.values.constructor),o.push(e))}s.tracks=o;let a=1/0;for(let t=0;t<s.tracks.length;++t)a>s.tracks[t].times[0]&&(a=s.tracks[t].times[0]);for(let t=0;t<s.tracks.length;++t)s.tracks[t].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const i=n.tracks.length,s=e/r;for(let e=0;e<i;++e){const r=n.tracks[e],i=r.ValueTypeName;if("bool"===i||"string"===i)continue;const o=t.tracks.find((function(t){return t.name===r.name&&t.ValueTypeName===i}));if(void 0===o)continue;let a=0;const l=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=l/3);let c=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);const p=r.times.length-1;let h;if(s<=r.times[0]){const t=a,e=l-a;h=Su.arraySlice(r.values,t,e)}else if(s>=r.times[p]){const t=p*l+a,e=t+l-a;h=Su.arraySlice(r.values,t,e)}else{const t=r.createInterpolant(),e=a,n=l-a;t.evaluate(s),h=Su.arraySlice(t.resultBuffer,e,n)}if("quaternion"===i){(new or).fromArray(h).normalize().conjugate().toArray(h)}const d=o.times.length;for(let t=0;t<d;++t){const e=t*u+c;if("quaternion"===i)or.multiplyQuaternionsFlat(o.values,e,h,0,o.values,e);else{const t=u-2*c;for(let n=0;n<t;++n)o.values[e+n]-=h[n]}}}return t.blendMode=Ye,t}};class Tu{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{let s;n:{r:if(!(t<r)){for(let s=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===s)break;if(i=r,r=e[++n],t<r)break e}s=e.length;break n}if(t>=i)break t;{const o=e[1];t<o&&(n=2,i=o);for(let s=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===s)break;if(r=i,i=e[--n-1],t>=i)break e}s=n,n=0}}for(;n<s;){const r=n+s>>>1;t<e[r]?s=r:n=r+1}if(r=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r;for(let t=0;t!==r;++t)e[t]=n[i+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Tu.prototype.beforeStart_=Tu.prototype.copySampleValue_,Tu.prototype.afterEnd_=Tu.prototype.copySampleValue_;class Eu extends Tu{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ve,endingEnd:Ve}}intervalChanged_(t,e,n){const r=this.parameterPositions;let i=t-2,s=t+1,o=r[i],a=r[s];if(void 0===o)switch(this.getSettings_().endingStart){case ke:i=t,o=2*e-n;break;case We:i=r.length-2,o=e+r[i]-r[i+1];break;default:i=t,o=n}if(void 0===a)switch(this.getSettings_().endingEnd){case ke:s=t,a=2*n-e;break;case We:s=1,a=n+r[1]-r[0];break;default:s=t-1,a=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(a-n),this._offsetPrev=i*c,this._offsetNext=s*c}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,l=a-o,c=this._offsetPrev,u=this._offsetNext,p=this._weightPrev,h=this._weightNext,d=(n-e)/(r-e),m=d*d,f=m*d,g=-p*f+2*p*m-p*d,_=(1+p)*f+(-1.5-2*p)*m+(-.5+p)*d+1,y=(-1-h)*f+(1.5+h)*m+.5*d,v=h*f-h*m;for(let t=0;t!==o;++t)i[t]=g*s[c+t]+_*s[l+t]+y*s[a+t]+v*s[u+t];return i}}class Au extends Tu{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,l=a-o,c=(n-e)/(r-e),u=1-c;for(let t=0;t!==o;++t)i[t]=s[l+t]*u+s[a+t]*c;return i}}class Cu extends Tu{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class Lu{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Su.convertArray(e,this.TimeBufferType),this.values=Su.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Su.convertArray(t.times,Array),values:Su.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Cu(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Au(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Eu(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Ge:e=this.InterpolantFactoryMethodDiscrete;break;case Ue:e=this.InterpolantFactoryMethodLinear;break;case je:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ge;case this.InterpolantFactoryMethodLinear:return Ue;case this.InterpolantFactoryMethodSmooth:return je}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let i=0,s=r-1;for(;i!==r&&n[i]<t;)++i;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==i||s!==r){i>=s&&(s=Math.max(s,1),i=s-1);const t=this.getValueSize();this.times=Su.arraySlice(n,i,s),this.values=Su.arraySlice(this.values,i*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==i;e++){const r=n[e];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,r),t=!1;break}if(null!==s&&s>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,r,s),t=!1;break}s=r}if(void 0!==r&&Su.isTypedArray(r))for(let e=0,n=r.length;e!==n;++e){const n=r[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=Su.arraySlice(this.times),e=Su.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===je,i=t.length-1;let s=1;for(let o=1;o<i;++o){let i=!1;const a=t[o];if(a!==t[o+1]&&(1!==o||a!==t[0]))if(r)i=!0;else{const t=o*n,r=t-n,s=t+n;for(let o=0;o!==n;++o){const n=e[t+o];if(n!==e[r+o]||n!==e[s+o]){i=!0;break}}}if(i){if(o!==s){t[s]=t[o];const r=o*n,i=s*n;for(let t=0;t!==n;++t)e[i+t]=e[r+t]}++s}}if(i>0){t[s]=t[i];for(let t=i*n,r=s*n,o=0;o!==n;++o)e[r+o]=e[t+o];++s}return s!==t.length?(this.times=Su.arraySlice(t,0,s),this.values=Su.arraySlice(e,0,s*n)):(this.times=t,this.values=e),this}clone(){const t=Su.arraySlice(this.times,0),e=Su.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Lu.prototype.TimeBufferType=Float32Array,Lu.prototype.ValueBufferType=Float32Array,Lu.prototype.DefaultInterpolation=Ue;class zu extends Lu{}zu.prototype.ValueTypeName="bool",zu.prototype.ValueBufferType=Array,zu.prototype.DefaultInterpolation=Ge,zu.prototype.InterpolantFactoryMethodLinear=void 0,zu.prototype.InterpolantFactoryMethodSmooth=void 0;class Ru extends Lu{}Ru.prototype.ValueTypeName="color";class Pu extends Lu{}Pu.prototype.ValueTypeName="number";class Du extends Tu{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-e)/(r-e);let l=t*o;for(let t=l+o;l!==t;l+=4)or.slerpFlat(i,0,s,l-o,s,l,a);return i}}class Iu extends Lu{InterpolantFactoryMethodLinear(t){return new Du(this.times,this.values,this.getValueSize(),t)}}Iu.prototype.ValueTypeName="quaternion",Iu.prototype.DefaultInterpolation=Ue,Iu.prototype.InterpolantFactoryMethodSmooth=void 0;class Ou extends Lu{}Ou.prototype.ValueTypeName="string",Ou.prototype.ValueBufferType=Array,Ou.prototype.DefaultInterpolation=Ge,Ou.prototype.InterpolantFactoryMethodLinear=void 0,Ou.prototype.InterpolantFactoryMethodSmooth=void 0;class Bu extends Lu{}Bu.prototype.ValueTypeName="vector";class Nu{constructor(t,e=-1,n,r=qe){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=jn(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let t=0,i=n.length;t!==i;++t)e.push(Fu(n[t]).scale(r));const i=new this(t.name,t.duration,e,t.blendMode);return i.uuid=t.uuid,i}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,r=n.length;t!==r;++t)e.push(Lu.toJSON(n[t]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const i=e.length,s=[];for(let t=0;t<i;t++){let o=[],a=[];o.push((t+i-1)%i,t,(t+1)%i),a.push(0,1,0);const l=Su.getKeyframeOrder(o);o=Su.sortedArray(o,1,l),a=Su.sortedArray(a,1,l),r||0!==o[0]||(o.push(i),a.push(a[0])),s.push(new Pu(".morphTargetInfluences["+e[t].name+"]",o,a).scale(1/n))}return new this(t,-1,s)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},i=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.name.match(i);if(s&&s.length>1){const t=s[1];let e=r[t];e||(r[t]=e=[]),e.push(n)}}const s=[];for(const t in r)s.push(this.CreateFromMorphTargetSequence(t,r[t],e,n));return s}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,i){if(0!==n.length){const s=[],o=[];Su.flattenJSON(n,s,o,r),0!==s.length&&i.push(new t(e,s,o))}},r=[],i=t.name||"default",s=t.fps||30,o=t.blendMode;let a=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const i=l[t].keys;if(i&&0!==i.length)if(i[0].morphTargets){const t={};let e;for(e=0;e<i.length;e++)if(i[e].morphTargets)for(let n=0;n<i[e].morphTargets.length;n++)t[i[e].morphTargets[n]]=-1;for(const n in t){const t=[],s=[];for(let r=0;r!==i[e].morphTargets.length;++r){const r=i[e];t.push(r.time),s.push(r.morphTarget===n?1:0)}r.push(new Pu(".morphTargetInfluence["+n+"]",t,s))}a=t.length*(s||1)}else{const s=".bones["+e[t].name+"]";n(Bu,s+".position",i,"pos",r),n(Iu,s+".quaternion",i,"rot",r),n(Bu,s+".scale",i,"scl",r)}}return 0===r.length?null:new this(i,a,r,o)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Fu(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Pu;case"vector":case"vector2":case"vector3":case"vector4":return Bu;case"color":return Ru;case"quaternion":return Iu;case"bool":case"boolean":return zu;case"string":return Ou}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Su.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Hu={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Gu{constructor(t,e,n){const r=this;let i=!1,s=0,o=0,a=void 0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===i&&void 0!==r.onStart&&r.onStart(t,s,o),i=!0},this.itemEnd=function(t){s++,void 0!==r.onProgress&&r.onProgress(t,s,o),s===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return a?a(t):t},this.setURLModifier=function(t){return a=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],r=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}}}const Uu=new Gu;class ju{constructor(t){this.manager=void 0!==t?t:Uu,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,i){n.load(t,r,e,i)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const Vu={};class ku extends ju{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=Hu.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;if(void 0!==Vu[t])return void Vu[t].push({onLoad:e,onProgress:n,onError:r});const o=t.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(o){const n=o[1],s=!!o[2];let a=o[3];a=decodeURIComponent(a),s&&(a=atob(a));try{let r;const s=(this.responseType||"").toLowerCase();switch(s){case"arraybuffer":case"blob":const t=new Uint8Array(a.length);for(let e=0;e<a.length;e++)t[e]=a.charCodeAt(e);r="blob"===s?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;r=e.parseFromString(a,n);break;case"json":r=JSON.parse(a);break;default:r=a}setTimeout((function(){e&&e(r),i.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}),0)}}else{Vu[t]=[],Vu[t].push({onLoad:e,onProgress:n,onError:r}),a=new XMLHttpRequest,a.open("GET",t,!0),a.addEventListener("load",(function(e){const n=this.response,r=Vu[t];if(delete Vu[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Hu.add(t,n);for(let t=0,e=r.length;t<e;t++){const e=r[t];e.onLoad&&e.onLoad(n)}i.manager.itemEnd(t)}else{for(let t=0,n=r.length;t<n;t++){const n=r[t];n.onError&&n.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}}),!1),a.addEventListener("progress",(function(e){const n=Vu[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onProgress&&r.onProgress(e)}}),!1),a.addEventListener("error",(function(e){const n=Vu[t];delete Vu[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}),!1),a.addEventListener("abort",(function(e){const n=Vu[t];delete Vu[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return i.manager.itemStart(t),a}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Wu extends ju{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new ku(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e=[];for(let n=0;n<t.length;n++){const r=Nu.parse(t[n]);e.push(r)}return e}}class qu extends ju{constructor(t){super(t)}load(t,e,n,r){const i=this,s=[],o=new uc,a=new ku(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(i.withCredentials);let l=0;function c(c){a.load(t[c],(function(t){const n=i.parse(t,!0);s[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(o.minFilter=bt),o.image=s,o.format=n.format,o.needsUpdate=!0,e&&e(o))}),n,r)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)c(e);else a.load(t,(function(t){const n=i.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}o.image=s}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=bt),o.format=n.format,o.needsUpdate=!0,e&&e(o)}),n,r);return o}}class Yu extends ju{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=Hu.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),Hu.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(t),o.src=t,o}}class Xu extends ju{constructor(t){super(t)}load(t,e,n,r){const i=new Bs,s=new Yu(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(n){s.load(t[n],(function(t){i.images[n]=t,o++,6===o&&(i.needsUpdate=!0,e&&e(i))}),void 0,r)}for(let e=0;e<t.length;++e)a(e);return i}}class Ju extends ju{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new Fs,o=new ku(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(i.withCredentials),o.load(t,(function(t){const n=i.parse(t);n&&(void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:dt,s.wrapT=void 0!==n.wrapT?n.wrapT:dt,s.magFilter=void 0!==n.magFilter?n.magFilter:bt,s.minFilter=void 0!==n.minFilter?n.minFilter:bt,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(s.encoding=n.encoding),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=Mt),1===n.mipmapCount&&(s.minFilter=bt),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n))}),n,r),s}}class Zu extends ju{constructor(t){super(t)}load(t,e,n,r){const i=new er,s=new Yu(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(n){i.image=n;const r=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);i.format=r?Ft:Ht,i.needsUpdate=!0,void 0!==e&&e(i)}),n,r),i}}class Qu{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),i=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),i+=n.distanceTo(r),e.push(i),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let r=0;const i=n.length;let s;s=e||t*n[i-1];let o,a=0,l=i-1;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),o=n[r]-s,o<0)a=r+1;else{if(!(o>0)){l=r;break}l=r-1}if(r=l,n[r]===s)return r/(i-1);const c=n[r];return(r+(s-c)/(n[r+1]-c))/(i-1)}getTangent(t,e){let n=t-1e-4,r=t+1e-4;n<0&&(n=0),r>1&&(r=1);const i=this.getPoint(n),s=this.getPoint(r),o=e||(i.isVector2?new Zn:new ar);return o.copy(s).sub(i).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new ar,r=[],i=[],s=[],o=new ar,a=new Fr;for(let e=0;e<=t;e++){const n=e/t;r[e]=this.getTangentAt(n,new ar),r[e].normalize()}i[0]=new ar,s[0]=new ar;let l=Number.MAX_VALUE;const c=Math.abs(r[0].x),u=Math.abs(r[0].y),p=Math.abs(r[0].z);c<=l&&(l=c,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),p<=l&&n.set(0,0,1),o.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],o),s[0].crossVectors(r[0],i[0]);for(let e=1;e<=t;e++){if(i[e]=i[e-1].clone(),s[e]=s[e-1].clone(),o.crossVectors(r[e-1],r[e]),o.length()>Number.EPSILON){o.normalize();const t=Math.acos(Vn(r[e-1].dot(r[e]),-1,1));i[e].applyMatrix4(a.makeRotationAxis(o,t))}s[e].crossVectors(r[e],i[e])}if(!0===e){let e=Math.acos(Vn(i[0].dot(i[t]),-1,1));e/=t,r[0].dot(o.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(a.makeRotationAxis(r[n],e*n)),s[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Ku extends Qu{constructor(t=0,e=0,n=1,r=1,i=0,s=2*Math.PI,o=!1,a=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=s,this.aClockwise=o,this.aRotation=a}getPoint(t,e){const n=e||new Zn,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const s=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=s?0:r),!0!==this.aClockwise||s||(i===r?i=-r:i-=r);const o=this.aStartAngle+t*i;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=a-this.aX,r=l-this.aY;a=n*t-r*e+this.aX,l=n*e+r*t+this.aY}return n.set(a,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Ku.prototype.isEllipseCurve=!0;class $u extends Ku{constructor(t,e,n,r,i,s){super(t,e,n,n,r,i,s),this.type="ArcCurve"}}function tp(){let t=0,e=0,n=0,r=0;function i(i,s,o,a){t=i,e=o,n=-3*i+3*s-2*o-a,r=2*i-2*s+o+a}return{initCatmullRom:function(t,e,n,r,s){i(e,n,s*(n-t),s*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,s,o,a){let l=(e-t)/s-(n-t)/(s+o)+(n-e)/o,c=(n-e)/o-(r-e)/(o+a)+(r-n)/a;l*=o,c*=o,i(e,n,l,c)},calc:function(i){const s=i*i;return t+e*i+n*s+r*(s*i)}}}$u.prototype.isArcCurve=!0;const ep=new ar,np=new tp,rp=new tp,ip=new tp;class sp extends Qu{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new ar){const n=e,r=this.points,i=r.length,s=(i-(this.closed?0:1))*t;let o,a,l=Math.floor(s),c=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/i)+1)*i:0===c&&l===i-1&&(l=i-2,c=1),this.closed||l>0?o=r[(l-1)%i]:(ep.subVectors(r[0],r[1]).add(r[0]),o=ep);const u=r[l%i],p=r[(l+1)%i];if(this.closed||l+2<i?a=r[(l+2)%i]:(ep.subVectors(r[i-1],r[i-2]).add(r[i-1]),a=ep),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(o.distanceToSquared(u),t),n=Math.pow(u.distanceToSquared(p),t),r=Math.pow(p.distanceToSquared(a),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),np.initNonuniformCatmullRom(o.x,u.x,p.x,a.x,e,n,r),rp.initNonuniformCatmullRom(o.y,u.y,p.y,a.y,e,n,r),ip.initNonuniformCatmullRom(o.z,u.z,p.z,a.z,e,n,r)}else"catmullrom"===this.curveType&&(np.initCatmullRom(o.x,u.x,p.x,a.x,this.tension),rp.initCatmullRom(o.y,u.y,p.y,a.y,this.tension),ip.initCatmullRom(o.z,u.z,p.z,a.z,this.tension));return n.set(np.calc(c),rp.calc(c),ip.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new ar).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function op(t,e,n,r,i){const s=.5*(r-e),o=.5*(i-n),a=t*t;return(2*n-2*r+s+o)*(t*a)+(-3*n+3*r-2*s-o)*a+s*t+n}function ap(t,e,n,r){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function lp(t,e,n,r,i){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,i)}sp.prototype.isCatmullRomCurve3=!0;class cp extends Qu{constructor(t=new Zn,e=new Zn,n=new Zn,r=new Zn){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new Zn){const n=e,r=this.v0,i=this.v1,s=this.v2,o=this.v3;return n.set(lp(t,r.x,i.x,s.x,o.x),lp(t,r.y,i.y,s.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}cp.prototype.isCubicBezierCurve=!0;class up extends Qu{constructor(t=new ar,e=new ar,n=new ar,r=new ar){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new ar){const n=e,r=this.v0,i=this.v1,s=this.v2,o=this.v3;return n.set(lp(t,r.x,i.x,s.x,o.x),lp(t,r.y,i.y,s.y,o.y),lp(t,r.z,i.z,s.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}up.prototype.isCubicBezierCurve3=!0;class pp extends Qu{constructor(t=new Zn,e=new Zn){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Zn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new Zn;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}pp.prototype.isLineCurve=!0;class hp extends Qu{constructor(t=new ar,e=new ar){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new ar){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class dp extends Qu{constructor(t=new Zn,e=new Zn,n=new Zn){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Zn){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(ap(t,r.x,i.x,s.x),ap(t,r.y,i.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}dp.prototype.isQuadraticBezierCurve=!0;class mp extends Qu{constructor(t=new ar,e=new ar,n=new ar){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ar){const n=e,r=this.v0,i=this.v1,s=this.v2;return n.set(ap(t,r.x,i.x,s.x),ap(t,r.y,i.y,s.y),ap(t,r.z,i.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}mp.prototype.isQuadraticBezierCurve3=!0;class fp extends Qu{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new Zn){const n=e,r=this.points,i=(r.length-1)*t,s=Math.floor(i),o=i-s,a=r[0===s?s:s-1],l=r[s],c=r[s>r.length-2?r.length-1:s+1],u=r[s>r.length-3?r.length-1:s+2];return n.set(op(o,a.x,l.x,c.x,u.x),op(o,a.y,l.y,c.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Zn).fromArray(n))}return this}}fp.prototype.isSplineCurve=!0;var gp=Object.freeze({__proto__:null,ArcCurve:$u,CatmullRomCurve3:sp,CubicBezierCurve:cp,CubicBezierCurve3:up,EllipseCurve:Ku,LineCurve:pp,LineCurve3:hp,QuadraticBezierCurve:dp,QuadraticBezierCurve3:mp,SplineCurve:fp});class _p extends Qu{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new pp(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=e){const t=n[r]-e,i=this.curves[r],s=i.getLength(),o=0===s?0:1-t/s;return i.getPointAt(o)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const s=i[r],o=s&&s.isEllipseCurve?2*t:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?t*s.points.length:t,a=s.getPoints(o);for(let t=0;t<a.length;t++){const r=a[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new gp[n.type]).fromJSON(n))}return this}}class yp extends _p{constructor(t){super(),this.type="Path",this.currentPoint=new Zn,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new pp(this.currentPoint.clone(),new Zn(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const i=new dp(this.currentPoint.clone(),new Zn(t,e),new Zn(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,i,s){const o=new cp(this.currentPoint.clone(),new Zn(t,e),new Zn(n,r),new Zn(i,s));return this.curves.push(o),this.currentPoint.set(i,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new fp(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,i,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+o,e+a,n,r,i,s),this}absarc(t,e,n,r,i,s){return this.absellipse(t,e,n,n,r,i,s),this}ellipse(t,e,n,r,i,s,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,r,i,s,o,a),this}absellipse(t,e,n,r,i,s,o,a){const l=new Ku(t,e,n,r,i,s,o,a);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class vp extends yp{constructor(t){super(t),this.uuid=jn(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new yp).fromJSON(n))}return this}}class bp extends di{constructor(t,e=1){super(),this.type="Light",this.color=new Ni(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}bp.prototype.isLight=!0;class xp extends bp{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(di.DefaultUp),this.updateMatrix(),this.groundColor=new Ni(e)}copy(t){return bp.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}xp.prototype.isHemisphereLight=!0;const wp=new Fr,Mp=new ar,Sp=new ar;class Tp{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Zn(512,512),this.map=null,this.mapPass=null,this.matrix=new Fr,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Us,this._frameExtents=new Zn(1,1),this._viewportCount=1,this._viewports=[new rr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Mp.setFromMatrixPosition(t.matrixWorld),e.position.copy(Mp),Sp.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Sp),e.updateMatrixWorld(),wp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(wp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Ep extends Tp{constructor(){super(new Is(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*Un*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Ep.prototype.isSpotLightShadow=!0;class Ap extends bp{constructor(t,e,n=0,r=Math.PI/3,i=0,s=1){super(t,e),this.type="SpotLight",this.position.copy(di.DefaultUp),this.updateMatrix(),this.target=new di,this.distance=n,this.angle=r,this.penumbra=i,this.decay=s,this.shadow=new Ep}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Ap.prototype.isSpotLight=!0;const Cp=new Fr,Lp=new ar,zp=new ar;class Rp extends Tp{constructor(){super(new Is(90,1,.5,500)),this._frameExtents=new Zn(4,2),this._viewportCount=6,this._viewports=[new rr(2,1,1,1),new rr(0,1,1,1),new rr(3,1,1,1),new rr(1,1,1,1),new rr(3,0,1,1),new rr(1,0,1,1)],this._cubeDirections=[new ar(1,0,0),new ar(-1,0,0),new ar(0,0,1),new ar(0,0,-1),new ar(0,1,0),new ar(0,-1,0)],this._cubeUps=[new ar(0,1,0),new ar(0,1,0),new ar(0,1,0),new ar(0,1,0),new ar(0,0,1),new ar(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,i=t.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),Lp.setFromMatrixPosition(t.matrixWorld),n.position.copy(Lp),zp.copy(n.position),zp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(zp),n.updateMatrixWorld(),r.makeTranslation(-Lp.x,-Lp.y,-Lp.z),Cp.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Cp)}}Rp.prototype.isPointLightShadow=!0;class Pp extends bp{constructor(t,e,n=0,r=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Rp}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}Pp.prototype.isPointLight=!0;class Dp extends Ds{constructor(t=-1,e=1,n=1,r=-1,i=.1,s=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=i,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,i,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-t,s=n+t,o=r+e,a=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,s=i+t*this.view.width,o-=e*this.view.offsetY,a=o-e*this.view.height}this.projectionMatrix.makeOrthographic(i,s,o,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Dp.prototype.isOrthographicCamera=!0;class Ip extends Tp{constructor(){super(new Dp(-5,5,5,-5,.5,500))}}Ip.prototype.isDirectionalLightShadow=!0;class Op extends bp{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(di.DefaultUp),this.updateMatrix(),this.target=new di,this.shadow=new Ip}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Op.prototype.isDirectionalLight=!0;class Bp extends bp{constructor(t,e){super(t,e),this.type="AmbientLight"}}Bp.prototype.isAmbientLight=!0;class Np extends bp{constructor(t,e,n=10,r=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=r}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}Np.prototype.isRectAreaLight=!0;class Fp{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new ar)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*r),e.addScaledVector(s[2],.488603*i),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*r*1.092548),e.addScaledVector(s[5],r*i*1.092548),e.addScaledVector(s[6],.315392*(3*i*i-1)),e.addScaledVector(s[7],n*i*1.092548),e.addScaledVector(s[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,i=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*r),e.addScaledVector(s[2],1.023328*i),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*r),e.addScaledVector(s[5],.858086*r*i),e.addScaledVector(s[6],.743125*i*i-.247708),e.addScaledVector(s[7],.858086*n*i),e.addScaledVector(s[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,i=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-r*r)}}Fp.prototype.isSphericalHarmonics3=!0;class Hp extends bp{constructor(t=new Fp,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Hp.prototype.isLightProbe=!0;class Gp extends ju{constructor(t){super(t),this.textures={}}load(t,e,n,r){const i=this,s=new ku(i.manager);s.setPath(i.path),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=new Mu[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=(new Ni).setHex(t.sheen)),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(r.morphNormals=t.morphNormals),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.vertexTangents&&(r.vertexTangents=t.vertexTangents),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const i=t.uniforms[e];switch(r.uniforms[e]={},i.type){case"t":r.uniforms[e].value=n(i.value);break;case"c":r.uniforms[e].value=(new Ni).setHex(i.value);break;case"v2":r.uniforms[e].value=(new Zn).fromArray(i.value);break;case"v3":r.uniforms[e].value=(new ar).fromArray(i.value);break;case"v4":r.uniforms[e].value=(new rr).fromArray(i.value);break;case"m3":r.uniforms[e].value=(new Qn).fromArray(i.value);break;case"m4":r.uniforms[e].value=(new Fr).fromArray(i.value);break;default:r.uniforms[e].value=i.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)r.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new Zn).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Zn).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),r}setTextures(t){return this.textures=t,this}}class Up{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}}class jp extends ls{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}jp.prototype.isInstancedBufferGeometry=!0;class Vp extends Ui{constructor(t,e,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=r||1}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}Vp.prototype.isInstancedBufferAttribute=!0;class kp extends ju{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new ku(i.manager);s.setPath(i.path),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e={},n={};function r(t,r){if(void 0!==e[r])return e[r];const i=t.interleavedBuffers[r],s=function(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers[e],i=new Uint32Array(r).buffer;return n[e]=i,i}(t,i.buffer),o=ts(i.type,s),a=new ll(o,i.stride);return a.uuid=i.uuid,e[r]=a,a}const i=t.isInstancedBufferGeometry?new jp:new ls,s=t.data.index;if(void 0!==s){const t=ts(s.type,s.array);i.setIndex(new Ui(t,1))}const o=t.data.attributes;for(const e in o){const n=o[e];let s;if(n.isInterleavedBufferAttribute){const e=r(t.data,n.data);s=new ul(e,n.itemSize,n.offset,n.normalized)}else{const t=ts(n.type,n.array);s=new(n.isInstancedBufferAttribute?Vp:Ui)(t,n.itemSize,n.normalized)}void 0!==n.name&&(s.name=n.name),void 0!==n.usage&&s.setUsage(n.usage),void 0!==n.updateRange&&(s.updateRange.offset=n.updateRange.offset,s.updateRange.count=n.updateRange.count),i.setAttribute(e,s)}const a=t.data.morphAttributes;if(a)for(const e in a){const n=a[e],s=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];let o;if(i.isInterleavedBufferAttribute){const e=r(t.data,i.data);o=new ul(e,i.itemSize,i.offset,i.normalized)}else{const t=ts(i.type,i.array);o=new Ui(t,i.itemSize,i.normalized)}void 0!==i.name&&(o.name=i.name),s.push(o)}i.morphAttributes[e]=s}t.data.morphTargetsRelative&&(i.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];i.addGroup(e.start,e.count,e.materialIndex)}const c=t.data.boundingSphere;if(void 0!==c){const t=new ar;void 0!==c.center&&t.fromArray(c.center),i.boundingSphere=new Lr(t,c.radius)}return t.name&&(i.name=t.name),t.userData&&(i.userData=t.userData),i}}class Wp extends ju{constructor(t){super(t)}load(t,e,n,r){const i=this,s=""===this.path?Up.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const o=new ku(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(n){let s=null;try{s=JSON.parse(n)}catch(e){return void 0!==r&&r(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const o=s.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?i.parse(s,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,r)}parse(t,e){const n=this.parseAnimations(t.animations),r=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,r),s=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),o=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,o),l=this.parseObject(t.object,i,a,n),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),void 0!==e){let t=!1;for(const e in s)if(s[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}parseShapes(t){const e={};if(void 0!==t)for(let n=0,r=t.length;n<r;n++){const r=(new vp).fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},r={};if(e.traverse((function(t){t.isBone&&(r[t.uuid]=t)})),void 0!==t)for(let e=0,i=t.length;e<i;e++){const i=(new Hl).fromJSON(t[e],r);n[i.uuid]=i}return n}parseGeometries(t,e){const n={};let r;if(void 0!==t){const i=new kp;for(let s=0,o=t.length;s<o;s++){let o;const a=t[s];switch(a.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new hu[a.type](a.width,a.height,a.widthSegments,a.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":o=new hu[a.type](a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new hu[a.type](a.radius,a.segments,a.thetaStart,a.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new hu[a.type](a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new hu[a.type](a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new hu[a.type](a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new hu[a.type](a.radius,a.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new hu[a.type](a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new hu[a.type](a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new hu[a.type](a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new hu[a.type]((new gp[a.path.type]).fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new hu[a.type](a.points,a.segments,a.phiStart,a.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new hu[a.type](a.vertices,a.indices,a.radius,a.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":r=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];r.push(n)}o=new hu[a.type](r,a.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":r=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];r.push(n)}const t=a.options.extrudePath;void 0!==t&&(a.options.extrudePath=(new gp[t.type]).fromJSON(t)),o=new hu[a.type](r,a.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(a);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+a.type+'"');continue}o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),!0===o.isBufferGeometry&&void 0!==a.userData&&(o.userData=a.userData),n[a.uuid]=o}}return n}parseMaterials(t,e){const n={},r={};if(void 0!==t){const i=new Gp;i.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];if("MultiMaterial"===s.type){const t=[];for(let e=0;e<s.materials.length;e++){const r=s.materials[e];void 0===n[r.uuid]&&(n[r.uuid]=i.parse(r)),t.push(n[r.uuid])}r[s.uuid]=t}else void 0===n[s.uuid]&&(n[s.uuid]=i.parse(s)),r[s.uuid]=n[s.uuid]}}return r}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const r=t[n],i=Nu.parse(r);e[i.uuid]=i}return e}parseImages(t,e){const n=this,r={};let i;function s(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),i.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:ts(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new Gu(e);i=new Yu(n),i.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],i=n.url;if(Array.isArray(i)){r[n.uuid]=[];for(let t=0,e=i.length;t<e;t++){const e=s(i[t]);null!==e&&(e instanceof HTMLImageElement?r[n.uuid].push(e):r[n.uuid].push(new Fs(e.data,e.width,e.height)))}}else{const t=s(n.url);null!==t&&(r[n.uuid]=t)}}}return r}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const r={};if(void 0!==t)for(let i=0,s=t.length;i<s;i++){const s=t[i];let o;void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);const a=e[s.image];Array.isArray(a)?(o=new Bs(a),6===a.length&&(o.needsUpdate=!0)):(o=a&&a.data?new Fs(a.data,a.width,a.height):new er(a),a&&(o.needsUpdate=!0)),o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=n(s.mapping,qp)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=n(s.wrap[0],Yp),o.wrapT=n(s.wrap[1],Yp)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=n(s.minFilter,Xp)),void 0!==s.magFilter&&(o.magFilter=n(s.magFilter,Xp)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),r[s.uuid]=o}return r}parseObject(t,e,n,r){let i,s,o;function a(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function l(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let r=0,i=t.length;r<i;r++){const i=t[r];void 0===n[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),e.push(n[i])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}switch(t.type){case"Scene":i=new al,void 0!==t.background&&Number.isInteger(t.background)&&(i.background=new Ni(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?i.fog=new ol(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(i.fog=new sl(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":i=new Is(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(i.focus=t.focus),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.filmGauge&&(i.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(i.filmOffset=t.filmOffset),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case"OrthographicCamera":i=new Dp(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case"AmbientLight":i=new Bp(t.color,t.intensity);break;case"DirectionalLight":i=new Op(t.color,t.intensity);break;case"PointLight":i=new Pp(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":i=new Np(t.color,t.intensity,t.width,t.height);break;case"SpotLight":i=new Ap(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new xp(t.color,t.groundColor,t.intensity);break;case"LightProbe":i=(new Hp).fromJSON(t);break;case"SkinnedMesh":s=a(t.geometry),o=l(t.material),i=new Ol(s,o),void 0!==t.bindMode&&(i.bindMode=t.bindMode),void 0!==t.bindMatrix&&i.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(i.skeleton=t.skeleton);break;case"Mesh":s=a(t.geometry),o=l(t.material),i=new Es(s,o);break;case"InstancedMesh":s=a(t.geometry),o=l(t.material);const e=t.count,n=t.instanceMatrix,r=t.instanceColor;i=new kl(s,o,e),i.instanceMatrix=new Ui(new Float32Array(n.array),16),void 0!==r&&(i.instanceColor=new Ui(new Float32Array(r.array),r.itemSize));break;case"LOD":i=new Ll;break;case"Line":i=new Ql(a(t.geometry),l(t.material));break;case"LineLoop":i=new ec(a(t.geometry),l(t.material));break;case"LineSegments":i=new tc(a(t.geometry),l(t.material));break;case"PointCloud":case"Points":i=new ac(a(t.geometry),l(t.material));break;case"Sprite":i=new Tl(l(t.material));break;case"Group":i=new Ka;break;case"Bone":i=new Bl;break;default:i=new di}if(i.uuid=t.uuid,void 0!==t.name&&(i.name=t.name),void 0!==t.matrix?(i.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(i.matrixAutoUpdate=t.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(void 0!==t.position&&i.position.fromArray(t.position),void 0!==t.rotation&&i.rotation.fromArray(t.rotation),void 0!==t.quaternion&&i.quaternion.fromArray(t.quaternion),void 0!==t.scale&&i.scale.fromArray(t.scale)),void 0!==t.castShadow&&(i.castShadow=t.castShadow),void 0!==t.receiveShadow&&(i.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(i.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(i.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(i.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&i.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(i.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.frustumCulled&&(i.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(i.renderOrder=t.renderOrder),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.layers&&(i.layers.mask=t.layers),void 0!==t.children){const s=t.children;for(let t=0;t<s.length;t++)i.add(this.parseObject(s[t],e,n,r))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];i.animations.push(r[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(i.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],r=i.getObjectByProperty("uuid",n.object);void 0!==r&&i.addLevel(r,n.distance)}}return i}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}}))}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const qp={UVMapping:st,CubeReflectionMapping:ot,CubeRefractionMapping:at,EquirectangularReflectionMapping:lt,EquirectangularRefractionMapping:ct,CubeUVReflectionMapping:ut,CubeUVRefractionMapping:pt},Yp={RepeatWrapping:ht,ClampToEdgeWrapping:dt,MirroredRepeatWrapping:mt},Xp={NearestFilter:ft,NearestMipmapNearestFilter:gt,NearestMipmapLinearFilter:yt,LinearFilter:bt,LinearMipmapNearestFilter:xt,LinearMipmapLinearFilter:Mt};class Jp extends ju{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,s=Hu.get(t);if(void 0!==s)return i.manager.itemStart(t),setTimeout((function(){e&&e(s),i.manager.itemEnd(t)}),0),s;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(t,o).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(i.options,{colorSpaceConversion:"none"}))})).then((function(n){Hu.add(t,n),e&&e(n),i.manager.itemEnd(t)})).catch((function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)})),i.manager.itemStart(t)}}Jp.prototype.isImageBitmapLoader=!0;class Zp{constructor(){this.type="ShapePath",this.color=new Ni,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new yp,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,i,s){return this.currentPath.bezierCurveTo(t,e,n,r,i,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],i=new vp;i.curves=r.curves,e.push(i)}return e}function r(t,e){const n=e.length;let r=!1;for(let i=n-1,s=0;s<n;i=s++){let n=e[i],o=e[s],a=o.x-n.x,l=o.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[s],a=-a,o=e[i],l=-l),t.y<n.y||t.y>o.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-a*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(o.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=o.x)return!0}}return r}const i=Xc.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return n(s);let o,a,l;const c=[];if(1===s.length)return a=s[0],l=new vp,l.curves=a.curves,c.push(l),c;let u=!i(s[0].getPoints());u=t?!u:u;const p=[],h=[];let d,m,f=[],g=0;h[g]=void 0,f[g]=[];for(let e=0,n=s.length;e<n;e++)a=s[e],d=a.getPoints(),o=i(d),o=t?!o:o,o?(!u&&h[g]&&g++,h[g]={s:new vp,p:d},h[g].s.curves=a.curves,u&&g++,f[g]=[]):f[g].push({h:a,p:d[0]});if(!h[0])return n(s);if(h.length>1){let t=!1;const e=[];for(let t=0,e=h.length;t<e;t++)p[t]=[];for(let n=0,i=h.length;n<i;n++){const i=f[n];for(let s=0;s<i.length;s++){const o=i[s];let a=!0;for(let i=0;i<h.length;i++)r(o.p,h[i].p)&&(n!==i&&e.push({froms:n,tos:i,hole:s}),a?(a=!1,p[i].push(o)):t=!0);a&&p[n].push(o)}}e.length>0&&(t||(f=p))}for(let t=0,e=h.length;t<e;t++){l=h[t].s,c.push(l),m=f[t];for(let t=0,e=m.length;t<e;t++)l.holes.push(m[t].h)}return c}}class Qp{constructor(t){this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],r=function(t,e,n){const r=Array.from(t),i=e/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,o=[];let a=0,l=0;for(let t=0;t<r.length;t++){const e=r[t];if("\n"===e)a=0,l-=s;else{const t=Kp(e,i,a,l,n);a+=t.offsetX,o.push(t.path)}}return o}(t,e,this.data);for(let t=0,e=r.length;t<e;t++)Array.prototype.push.apply(n,r[t].toShapes());return n}}function Kp(t,e,n,r,i){const s=i.glyphs[t]||i.glyphs["?"];if(!s)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+i.familyName+".");const o=new Zp;let a,l,c,u,p,h,d,m;if(s.o){const t=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let i=0,s=t.length;i<s;){switch(t[i++]){case"m":a=t[i++]*e+n,l=t[i++]*e+r,o.moveTo(a,l);break;case"l":a=t[i++]*e+n,l=t[i++]*e+r,o.lineTo(a,l);break;case"q":c=t[i++]*e+n,u=t[i++]*e+r,p=t[i++]*e+n,h=t[i++]*e+r,o.quadraticCurveTo(p,h,c,u);break;case"b":c=t[i++]*e+n,u=t[i++]*e+r,p=t[i++]*e+n,h=t[i++]*e+r,d=t[i++]*e+n,m=t[i++]*e+r,o.bezierCurveTo(p,h,d,m,c,u)}}}return{offsetX:s.ha*e,path:o}}Qp.prototype.isFont=!0;class $p extends ju{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new ku(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(i.withCredentials),s.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const r=i.parse(n);e&&e(r)}),n,r)}parse(t){return new Qp(t)}}let th;const eh={getContext:function(){return void 0===th&&(th=new(window.AudioContext||window.webkitAudioContext)),th},setContext:function(t){th=t}};class nh extends ju{constructor(t){super(t)}load(t,e,n,r){const i=this,s=new ku(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{const t=n.slice(0);eh.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}}class rh extends Hp{constructor(t,e,n=1){super(void 0,n);const r=(new Ni).set(t),i=(new Ni).set(e),s=new ar(r.r,r.g,r.b),o=new ar(i.r,i.g,i.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}}rh.prototype.isHemisphereLightProbe=!0;class ih extends Hp{constructor(t,e=1){super(void 0,e);const n=(new Ni).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}ih.prototype.isAmbientLightProbe=!0;const sh=new Fr,oh=new Fr;class ah{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Is,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Is,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),r=e.eyeSep/2,i=r*e.near/e.focus,s=e.near*Math.tan(Gn*e.fov*.5)/e.zoom;let o,a;oh.elements[12]=-r,sh.elements[12]=r,o=-s*e.aspect+i,a=s*e.aspect+i,n.elements[0]=2*e.near/(a-o),n.elements[8]=(a+o)/(a-o),this.cameraL.projectionMatrix.copy(n),o=-s*e.aspect-i,a=s*e.aspect-i,n.elements[0]=2*e.near/(a-o),n.elements[8]=(a+o)/(a-o),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(oh),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(sh)}}class lh{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=ch(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=ch();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function ch(){return("undefined"==typeof performance?Date:performance).now()}const uh=new ar,ph=new or,hh=new ar,dh=new ar;class mh extends di{constructor(){super(),this.type="AudioListener",this.context=eh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new lh}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(uh,ph,hh),dh.set(0,0,-1).applyQuaternion(ph),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(uh.x,t),e.positionY.linearRampToValueAtTime(uh.y,t),e.positionZ.linearRampToValueAtTime(uh.z,t),e.forwardX.linearRampToValueAtTime(dh.x,t),e.forwardY.linearRampToValueAtTime(dh.y,t),e.forwardZ.linearRampToValueAtTime(dh.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(uh.x,uh.y,uh.z),e.setOrientation(dh.x,dh.y,dh.z,n.x,n.y,n.z)}}class fh extends di{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const gh=new ar,_h=new or,yh=new ar,vh=new ar;class bh extends fh{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){super.updateMatrixWorld(t);let e=!1;if(this._lastPosition||(e=!0,this._lastPosition=new ar,this._lastOrientation=new ar),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(gh,_h,yh),vh.set(0,0,1).applyQuaternion(_h);const n=this.panner;if(!(!e&&Math.abs(gh.x-this._lastPosition.x)<Number.EPSILON&&Math.abs(gh.y-this._lastPosition.y)<Number.EPSILON&&Math.abs(gh.z-this._lastPosition.z)<Number.EPSILON&&Math.abs(vh.x-this._lastOrientation.x)<Number.EPSILON&&Math.abs(vh.y-this._lastOrientation.y)<Number.EPSILON&&Math.abs(vh.z-this._lastOrientation.z)<Number.EPSILON)){if(n.positionX){const t=this.context.currentTime+this.listener.timeDelta;n.positionX.linearRampToValueAtTime(gh.x,t),n.positionY.linearRampToValueAtTime(gh.y,t),n.positionZ.linearRampToValueAtTime(gh.z,t),n.orientationX.linearRampToValueAtTime(vh.x,t),n.orientationY.linearRampToValueAtTime(vh.y,t),n.orientationZ.linearRampToValueAtTime(vh.z,t)}else n.setPosition(gh.x,gh.y,gh.z),n.setOrientation(vh.x,vh.y,vh.z);this._lastPosition.x=gh.x,this._lastPosition.y=gh.y,this._lastPosition.z=gh.z,this._lastOrientation.x=vh.x,this._lastOrientation.y=vh.y,this._lastOrientation.z=vh.z}}}class xh{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class wh{constructor(t,e,n){let r,i,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,i=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,i=t*r+r;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==r;++t)n[i+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-i,e)}s>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let t=e,i=e+e;t!==i;++t)if(n[t]!==n[t+e]){o.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let t=n,i=r;t!==i;++t)e[t]=e[r+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,i){if(r>=.5)for(let r=0;r!==i;++r)t[e+r]=t[n+r]}_slerp(t,e,n,r){or.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,i){const s=this._workIndex*i;or.multiplyQuaternionsFlat(t,s,t,e,t,n),or.slerpFlat(t,e,t,e,t,s,r)}_lerp(t,e,n,r,i){const s=1-r;for(let o=0;o!==i;++o){const i=e+o;t[i]=t[i]*s+t[n+o]*r}}_lerpAdditive(t,e,n,r,i){for(let s=0;s!==i;++s){const i=e+s;t[i]=t[i]+t[n+s]*r}}}const Mh=new RegExp("[\\[\\]\\.:\\/]","g"),Sh="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Th=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),Eh=/(WCOD+)?/.source.replace("WCOD",Sh),Ah=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Ch=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Lh=new RegExp("^"+Th+Eh+Ah+Ch+"$"),zh=["material","materials","bones"];class Rh{constructor(t,e,n){this.path=e,this.parsedPath=n||Rh.parseTrackName(e),this.node=Rh.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Rh.Composite(t,e,n):new Rh(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Mh,"")}static parseTrackName(t){const e=Lh.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==zh.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const i=t[r];if(i.name===e||i.uuid===e)return i;const s=n(i.children);if(s)return s}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.node[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0,this.targetObject.matrixNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0,this.targetObject.matrixNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0,this.targetObject.matrixNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let i=e.propertyIndex;if(t||(t=Rh.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const s=t[r];if(void 0===s){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let o=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Rh.Composite=class{constructor(t,e,n){const r=n||Rh.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},Rh.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Rh.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Rh.prototype.GetterByBindingType=[Rh.prototype._getValue_direct,Rh.prototype._getValue_array,Rh.prototype._getValue_arrayElement,Rh.prototype._getValue_toArray],Rh.prototype.SetterByBindingTypeAndVersioning=[[Rh.prototype._setValue_direct,Rh.prototype._setValue_direct_setNeedsUpdate,Rh.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Rh.prototype._setValue_array,Rh.prototype._setValue_array_setNeedsUpdate,Rh.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Rh.prototype._setValue_arrayElement,Rh.prototype._setValue_arrayElement_setNeedsUpdate,Rh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Rh.prototype._setValue_fromArray,Rh.prototype._setValue_fromArray_setNeedsUpdate,Rh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Ph{constructor(){this.uuid=jn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,s=i.length;let o=void 0,a=t.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const u=arguments[c],p=u.uuid;let h=e[p];if(void 0===h){h=a++,e[p]=h,t.push(u);for(let t=0,e=s;t!==e;++t)i[t].push(new Rh(u,n[t],r[t]))}else if(h<l){o=t[h];const a=--l,c=t[a];e[c.uuid]=h,t[h]=c,e[p]=a,t[a]=u;for(let t=0,e=s;t!==e;++t){const e=i[t],s=e[a];let o=e[h];e[h]=s,void 0===o&&(o=new Rh(u,n[t],r[t])),e[a]=o}}else t[h]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const o=arguments[s],a=o.uuid,l=e[a];if(void 0!==l&&l>=i){const s=i++,c=t[s];e[c.uuid]=l,t[l]=c,e[a]=s,t[s]=o;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[s],i=e[l];e[l]=r,e[s]=i}}}this.nCachedObjects_=i}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,s=t.length;for(let o=0,a=arguments.length;o!==a;++o){const a=arguments[o].uuid,l=e[a];if(void 0!==l)if(delete e[a],l<i){const o=--i,a=t[o],c=--s,u=t[c];e[a.uuid]=l,t[l]=a,e[u.uuid]=o,t[o]=u,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[o],i=e[c];e[l]=r,e[o]=i,e.pop()}}else{const i=--s,o=t[i];i>0&&(e[o.uuid]=l),t[l]=o,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[l]=e[i],e.pop()}}}this.nCachedObjects_=i}subscribe_(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const i=this._bindings;if(void 0!==r)return i[r];const s=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,u=new Array(l);r=i.length,n[t]=r,s.push(t),o.push(e),i.push(u);for(let n=c,r=a.length;n!==r;++n){const r=a[n];u[n]=new Rh(r,t,e)}return u}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o];e[t[o]]=n,s[n]=a,s.pop(),i[n]=i[o],i.pop(),r[n]=r[o],r.pop()}}}Ph.prototype.isAnimationObjectGroup=!0;class Dh{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const i=e.tracks,s=i.length,o=new Array(s),a={endingStart:Ve,endingEnd:Ve};for(let t=0;t!==s;++t){const e=i[t].createInterpolant(null);o[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Fe,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,i=r/n,s=n/r;t.warp(1,i,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,i=r.time,s=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=i,a[1]=i+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const r=(t-i)*n;if(r<0||0===n)return;this._startTime=null,e=n*r}e*=this._updateTimeScale(t);const s=this._updateTime(e),o=this._updateWeight(t);if(o>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case Ye:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulateAdditive(o);break;case qe:default:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulate(r,o)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,i=this._loopCount;const s=n===He;if(0===t)return-1===i?r:s&&1==(1&i)?e-r:r;if(n===Ne){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,i+=Math.abs(n);const o=this.repetitions-i;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===o){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(s&&1==(1&i))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=ke,r.endingEnd=ke):(r.endingStart=t?this.zeroSlopeAtStart?ke:Ve:We,r.endingEnd=e?this.zeroSlopeAtEnd?ke:Ve:We)}_scheduleFading(t,e,n){const r=this._mixer,i=r.time;let s=this._weightInterpolant;null===s&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,a=s.sampleValues;return o[0]=i,a[0]=e,o[1]=i+t,a[1]=n,this}}class Ih extends Nn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,s=t._propertyBindings,o=t._interpolants,a=n.uuid,l=this._bindingsByRootAndName;let c=l[a];void 0===c&&(c={},l[a]=c);for(let t=0;t!==i;++t){const i=r[t],l=i.name;let u=c[l];if(void 0!==u)s[t]=u;else{if(u=s[t],void 0!==u){null===u._cacheIndex&&(++u.referenceCount,this._addInactiveBinding(u,a,l));continue}const r=e&&e._propertyBindings[t].binding.parsedPath;u=new wh(Rh.create(n,l,r),i.ValueTypeName,i.getValueSize()),++u.referenceCount,this._addInactiveBinding(u,a,l),s[t]=u}o[t].resultBuffer=u.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,i=this._actionsByClip;let s=i[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,s=this._actionsByClip,o=s[i],a=o.knownActions,l=a[a.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),t._byClipCacheIndex=null,delete o.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete s[i],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,i=this._bindings;let s=r[e];void 0===s&&(s={},r[e]=s),s[n]=t,t._cacheIndex=i.length,i.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,s=this._bindingsByRootAndName,o=s[r],a=e[e.length-1],l=t._cacheIndex;a._cacheIndex=l,e[l]=a,e.pop(),delete o[i],0===Object.keys(o).length&&delete s[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new Au(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i}clipAction(t,e,n){const r=e||this._root,i=r.uuid;let s="string"==typeof t?Nu.findByName(r,t):t;const o=null!==s?s.uuid:t,a=this._actionsByClip[o];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:qe),void 0!==a){const t=a.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;l=a.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new Dh(this,s,e,n);return this._bindAction(c,l),this._addInactiveAction(c,o,i),c}existingAction(t,e){const n=e||this._root,r=n.uuid,i="string"==typeof t?Nu.findByName(n,t):t,s=i?i.uuid:t,o=this._actionsByClip[s];return void 0!==o&&o.actionByRoot[r]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),s=this._accuIndex^=1;for(let o=0;o!==n;++o){e[o]._update(r,t,i,s)}const o=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)o[t].apply(s);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const t=i.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const i=r._cacheIndex,s=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,s._cacheIndex=i,e[i]=s,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const r=n[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const t in r){const e=r[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}Ih.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Oh{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Oh(void 0===this.value.clone?this.value:this.value.clone())}}class Bh extends ll{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n||1}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}Bh.prototype.isInstancedInterleavedBuffer=!0;class Nh{constructor(t,e,n,r,i){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}Nh.prototype.isGLBufferAttribute=!0;class Fh{constructor(t,e,n=0,r=1/0){this.ray=new Nr(t,e),this.near=n,this.far=r,this.camera=null,this.layers=new Jr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!1,n=[]){return Gh(t,this,n,e),n.sort(Hh),n}intersectObjects(t,e=!1,n=[]){for(let r=0,i=t.length;r<i;r++)Gh(t[r],this,n,e);return n.sort(Hh),n}}function Hh(t,e){return t.distance-e.distance}function Gh(t,e,n,r){if(t.visible&&(t.raycast(e,n),!0===r)){const r=t.children;for(let t=0,i=r.length;t<i;t++)Gh(r[t],e,n,!0)}}class Uh{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Vn(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class jh{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}const Vh=new Zn;class kh{constructor(t=new Zn(1/0,1/0),e=new Zn(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Vh.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new Zn),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new Zn),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Zn),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Zn),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Vh.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}kh.prototype.isBox2=!0;const Wh=new ar,qh=new ar;class Yh{constructor(t=new ar,e=new ar){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new ar),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new ar),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new ar),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Wh.subVectors(t,this.start),qh.subVectors(this.end,this.start);const n=qh.dot(qh);let r=qh.dot(Wh)/n;return e&&(r=Vn(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new ar),this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class Xh extends di{constructor(t){super(),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}Xh.prototype.isImmediateRenderObject=!0;const Jh=new ar;class Zh extends di{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new ls,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const i=t/n*Math.PI*2,s=e/n*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(s),Math.sin(s),1)}n.setAttribute("position",new Zi(r,3));const i=new Wl({fog:!1,toneMapped:!1});this.cone=new tc(n,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Jh.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Jh),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Qh=new ar,Kh=new Fr,$h=new Fr;class td extends tc{constructor(t){const e=function t(e){const n=[];e&&e.isBone&&n.push(e);for(let r=0;r<e.children.length;r++)n.push.apply(n,t(e.children[r]));return n}(t),n=new ls,r=[],i=[],s=new Ni(0,0,1),o=new Ni(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(s.r,s.g,s.b),i.push(o.r,o.g,o.b))}n.setAttribute("position",new Zi(r,3)),n.setAttribute("color",new Zi(i,3)),super(n,new Wl({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");$h.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(Kh.multiplyMatrices($h,i.matrixWorld),Qh.setFromMatrixPosition(Kh),r.setXYZ(n,Qh.x,Qh.y,Qh.z),Kh.multiplyMatrices($h,i.parent.matrixWorld),Qh.setFromMatrixPosition(Kh),r.setXYZ(n+1,Qh.x,Qh.y,Qh.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}class ed extends Es{constructor(t,e,n){super(new su(e,4,2),new Fi({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const nd=new ar,rd=new Ni,id=new Ni;class sd extends di{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new eu(e);r.rotateY(.5*Math.PI),this.material=new Fi({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=r.getAttribute("position"),s=new Float32Array(3*i.count);r.setAttribute("color",new Ui(s,3)),this.add(new Es(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");rd.copy(this.light.color),id.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const r=t<n/2?rd:id;e.setXYZ(t,r.r,r.g,r.b)}e.needsUpdate=!0}t.lookAt(nd.setFromMatrixPosition(this.light.matrixWorld).negate())}}class od extends tc{constructor(t=10,e=10,n=4473924,r=8947848){n=new Ni(n),r=new Ni(r);const i=e/2,s=t/e,o=t/2,a=[],l=[];for(let t=0,c=0,u=-o;t<=e;t++,u+=s){a.push(-o,0,u,o,0,u),a.push(u,0,-o,u,0,o);const e=t===i?n:r;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new ls;c.setAttribute("position",new Zi(a,3)),c.setAttribute("color",new Zi(l,3)),super(c,new Wl({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class ad extends tc{constructor(t=10,e=16,n=8,r=64,i=4473924,s=8947848){i=new Ni(i),s=new Ni(s);const o=[],a=[];for(let n=0;n<=e;n++){const r=n/e*(2*Math.PI),l=Math.sin(r)*t,c=Math.cos(r)*t;o.push(0,0,0),o.push(l,0,c);const u=1&n?i:s;a.push(u.r,u.g,u.b),a.push(u.r,u.g,u.b)}for(let e=0;e<=n;e++){const l=1&e?i:s,c=t-t/n*e;for(let t=0;t<r;t++){let e=t/r*(2*Math.PI),n=Math.sin(e)*c,i=Math.cos(e)*c;o.push(n,0,i),a.push(l.r,l.g,l.b),e=(t+1)/r*(2*Math.PI),n=Math.sin(e)*c,i=Math.cos(e)*c,o.push(n,0,i),a.push(l.r,l.g,l.b)}}const l=new ls;l.setAttribute("position",new Zi(o,3)),l.setAttribute("color",new Zi(a,3)),super(l,new Wl({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const ld=new ar,cd=new ar,ud=new ar;class pd extends di{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let r=new ls;r.setAttribute("position",new Zi([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const i=new Wl({fog:!1,toneMapped:!1});this.lightPlane=new Ql(r,i),this.add(this.lightPlane),r=new ls,r.setAttribute("position",new Zi([0,0,0,0,0,1],3)),this.targetLine=new Ql(r,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){ld.setFromMatrixPosition(this.light.matrixWorld),cd.setFromMatrixPosition(this.light.target.matrixWorld),ud.subVectors(cd,ld),this.lightPlane.lookAt(cd),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(cd),this.targetLine.scale.z=ud.length()}}const hd=new ar,dd=new Ds;class md extends tc{constructor(t){const e=new ls,n=new Wl({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],s={},o=new Ni(16755200),a=new Ni(16711680),l=new Ni(43775),c=new Ni(16777215),u=new Ni(3355443);function p(t,e,n){h(t,n),h(e,n)}function h(t,e){r.push(0,0,0),i.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(r.length/3-1)}p("n1","n2",o),p("n2","n4",o),p("n4","n3",o),p("n3","n1",o),p("f1","f2",o),p("f2","f4",o),p("f4","f3",o),p("f3","f1",o),p("n1","f1",o),p("n2","f2",o),p("n3","f3",o),p("n4","f4",o),p("p","n1",a),p("p","n2",a),p("p","n3",a),p("p","n4",a),p("u1","u2",l),p("u2","u3",l),p("u3","u1",l),p("c","t",c),p("p","c",u),p("cn1","cn2",u),p("cn3","cn4",u),p("cf1","cf2",u),p("cf3","cf4",u),e.setAttribute("position",new Zi(r,3)),e.setAttribute("color",new Zi(i,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){const t=this.geometry,e=this.pointMap;dd.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),fd("c",e,t,dd,0,0,-1),fd("t",e,t,dd,0,0,1),fd("n1",e,t,dd,-1,-1,-1),fd("n2",e,t,dd,1,-1,-1),fd("n3",e,t,dd,-1,1,-1),fd("n4",e,t,dd,1,1,-1),fd("f1",e,t,dd,-1,-1,1),fd("f2",e,t,dd,1,-1,1),fd("f3",e,t,dd,-1,1,1),fd("f4",e,t,dd,1,1,1),fd("u1",e,t,dd,.7,1.1,-1),fd("u2",e,t,dd,-.7,1.1,-1),fd("u3",e,t,dd,0,2,-1),fd("cf1",e,t,dd,-1,0,1),fd("cf2",e,t,dd,1,0,1),fd("cf3",e,t,dd,0,-1,1),fd("cf4",e,t,dd,0,1,1),fd("cn1",e,t,dd,-1,0,-1),fd("cn2",e,t,dd,1,0,-1),fd("cn3",e,t,dd,0,-1,-1),fd("cn4",e,t,dd,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function fd(t,e,n,r,i,s,o){hd.set(i,s,o).unproject(r);const a=e[t];if(void 0!==a){const t=n.getAttribute("position");for(let e=0,n=a.length;e<n;e++)t.setXYZ(a[e],hd.x,hd.y,hd.z)}}const gd=new ur;class _d extends tc{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new ls;i.setIndex(new Ui(n,1)),i.setAttribute("position",new Ui(r,3)),super(i,new Wl({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&gd.setFromObject(this.object),gd.isEmpty())return;const e=gd.min,n=gd.max,r=this.geometry.attributes.position,i=r.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=e.x,i[4]=n.y,i[5]=n.z,i[6]=e.x,i[7]=e.y,i[8]=n.z,i[9]=n.x,i[10]=e.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=e.z,i[15]=e.x,i[16]=n.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=n.x,i[22]=e.y,i[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return tc.prototype.copy.call(this,t),this.object=t.object,this}}class yd extends tc{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new ls;r.setIndex(new Ui(n,1)),r.setAttribute("position",new Zi([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Wl({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class vd extends Ql{constructor(t,e=1,n=16776960){const r=n,i=new ls;i.setAttribute("position",new Zi([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),super(i,new Wl({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new ls;s.setAttribute("position",new Zi([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),s.computeBoundingSphere(),this.add(new Es(s,new Fi({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?f:m,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const bd=new ar;let xd,wd;class Md extends di{constructor(t=new ar(0,0,1),e=new ar(0,0,0),n=1,r=16776960,i=.2*n,s=.2*i){super(),this.type="ArrowHelper",void 0===xd&&(xd=new ls,xd.setAttribute("position",new Zi([0,0,0,0,1,0],3)),wd=new mc(0,.5,1,5,1),wd.translate(0,-.5,0)),this.position.copy(e),this.line=new Ql(xd,new Wl({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Es(wd,new Fi({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,i,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{bd.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(bd,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class Sd extends tc{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new ls;n.setAttribute("position",new Zi(e,3)),n.setAttribute("color",new Zi([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new Wl({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Td=new Float32Array(1),Ed=new Int32Array(Td.buffer);class Ad{static toHalfFloat(t){Td[0]=t;const e=Ed[0];let n=e>>16&32768,r=e>>12&2047;const i=e>>23&255;return i<103?n:i>142?(n|=31744,n|=(255==i?0:1)&&8388607&e,n):i<113?(r|=2048,n|=(r>>114-i)+(r>>113-i&1),n):(n|=i-112<<10|r>>1,n+=1&r,n)}}const Cd=Math.pow(2,8),Ld=[.125,.215,.35,.446,.526,.582],zd=5+Ld.length,Rd={[Qe]:0,[Ke]:1,[tn]:2,[nn]:3,[rn]:4,[sn]:5,[$e]:6},Pd=new Fi({side:f,depthWrite:!1,depthTest:!1}),Dd=new Es(new Cs,Pd),Id=new Dp,{_lodPlanes:Od,_sizeLods:Bd,_sigmas:Nd}=qd(),Fd=new Ni;let Hd=null;const Gd=(1+Math.sqrt(5))/2,Ud=1/Gd,jd=[new ar(1,1,1),new ar(-1,1,1),new ar(1,1,-1),new ar(-1,1,-1),new ar(0,Gd,Ud),new ar(0,Gd,-Ud),new ar(Ud,0,Gd),new ar(-Ud,0,Gd),new ar(Gd,Ud,0),new ar(-Gd,Ud,0)];function Vd(t){const e=Math.max(t.r,t.g,t.b),n=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);return t.multiplyScalar(Math.pow(2,-n)),(n+128)/255}class kd{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(t),n=new ar(0,1,0);return new mu({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:Rd[Qe]},outputEncoding:{value:Rd[Qe]}},vertexShader:Qd(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${Kd()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:v,depthTest:!1,depthWrite:!1})}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100){Hd=this._renderer.getRenderTarget();const i=this._allocateTargets();return this._sceneToCubeUV(t,n,r,i),e>0&&this._blur(i,0,0,e),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Zd(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Jd(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Od.length;t++)Od[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Hd),t.scissorTest=!1,Xd(t,0,0,t.width,t.height)}_fromTexture(t){Hd=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:ft,minFilter:ft,generateMipmaps:!1,type:Tt,format:jt,encoding:Wd(t)?t.encoding:tn,depthBuffer:!1},n=Yd(e);return n.depthBuffer=!t,this._pingPongRenderTarget=Yd(e),n}_compileMaterial(t){const e=new Es(Od[0],t);this._renderer.compile(e,Id)}_sceneToCubeUV(t,e,n,r){const i=new Is(90,1,e,n),s=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],a=this._renderer,l=a.autoClear,c=a.outputEncoding,u=a.toneMapping;a.getClearColor(Fd),a.toneMapping=K,a.outputEncoding=Qe,a.autoClear=!1;let p=!1;const h=t.background;if(h){if(h.isColor){Pd.color.copy(h).convertSRGBToLinear(),t.background=null;const e=Vd(Pd.color);Pd.opacity=e,p=!0}}else{Pd.color.copy(Fd).convertSRGBToLinear();const t=Vd(Pd.color);Pd.opacity=t,p=!0}for(let e=0;e<6;e++){const n=e%3;0==n?(i.up.set(0,s[e],0),i.lookAt(o[e],0,0)):1==n?(i.up.set(0,0,s[e]),i.lookAt(0,o[e],0)):(i.up.set(0,s[e],0),i.lookAt(0,0,o[e])),Xd(r,n*Cd,e>2?Cd:0,Cd,Cd),a.setRenderTarget(r),p&&a.render(Dd,i),a.render(t,i)}a.toneMapping=u,a.outputEncoding=c,a.autoClear=l}_textureToCubeUV(t,e){const n=this._renderer;t.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Zd()):null==this._equirectShader&&(this._equirectShader=Jd());const r=t.isCubeTexture?this._cubemapShader:this._equirectShader,i=new Es(Od[0],r),s=r.uniforms;s.envMap.value=t,t.isCubeTexture||s.texelSize.value.set(1/t.image.width,1/t.image.height),s.inputEncoding.value=Rd[t.encoding],s.outputEncoding.value=Rd[e.texture.encoding],Xd(e,0,0,3*Cd,2*Cd),n.setRenderTarget(e),n.render(i,Id)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let e=1;e<zd;e++){const n=Math.sqrt(Nd[e]*Nd[e]-Nd[e-1]*Nd[e-1]),r=jd[(e-1)%jd.length];this._blur(t,e-1,e,n,r)}e.autoClear=n}_blur(t,e,n,r,i){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,r,"latitudinal",i),this._halfBlur(s,t,n,n,r,"longitudinal",i)}_halfBlur(t,e,n,r,i,s,o){const a=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Es(Od[r],l),u=l.uniforms,p=Bd[n]-1,h=isFinite(i)?Math.PI/(2*p):2*Math.PI/39,d=i/h,m=isFinite(i)?1+Math.floor(3*d):20;m>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<20;++t){const e=t/d,n=Math.exp(-e*e/2);f.push(n),0==t?g+=n:t<m&&(g+=2*n)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;u.envMap.value=t.texture,u.samples.value=m,u.weights.value=f,u.latitudinal.value="latitudinal"===s,o&&(u.poleAxis.value=o),u.dTheta.value=h,u.mipInt.value=8-n,u.inputEncoding.value=Rd[t.texture.encoding],u.outputEncoding.value=Rd[t.texture.encoding];const _=Bd[r];Xd(e,3*Math.max(0,Cd-2*_),(0===r?0:2*Cd)+2*_*(r>4?r-8+4:0),3*_,2*_),a.setRenderTarget(e),a.render(c,Id)}}function Wd(t){return void 0!==t&&t.type===Tt&&(t.encoding===Qe||t.encoding===Ke||t.encoding===$e)}function qd(){const t=[],e=[],n=[];let r=8;for(let i=0;i<zd;i++){const s=Math.pow(2,r);e.push(s);let o=1/s;i>4?o=Ld[i-8+4-1]:0==i&&(o=0),n.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],p=6,h=6,d=3,m=2,f=1,g=new Float32Array(d*h*p),_=new Float32Array(m*h*p),y=new Float32Array(f*h*p);for(let t=0;t<p;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(r,d*h*t),_.set(u,m*h*t);const i=[t,t,t,t,t,t];y.set(i,f*h*t)}const v=new ls;v.setAttribute("position",new Ui(g,d)),v.setAttribute("uv",new Ui(_,m)),v.setAttribute("faceIndex",new Ui(y,f)),t.push(v),r>4&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function Yd(t){const e=new ir(3*Cd,3*Cd,t);return e.texture.mapping=ut,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Xd(t,e,n,r,i){t.viewport.set(e,n,r,i),t.scissor.set(e,n,r,i)}function Jd(){const t=new Zn(1,1);return new mu({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:Rd[Qe]},outputEncoding:{value:Rd[Qe]}},vertexShader:Qd(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${Kd()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:v,depthTest:!1,depthWrite:!1})}function Zd(){return new mu({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Rd[Qe]},outputEncoding:{value:Rd[Qe]}},vertexShader:Qd(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${Kd()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:v,depthTest:!1,depthWrite:!1})}function Qd(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Kd(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}const $d=0,tm=1,em=0,nm=1,rm=2;function im(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function sm(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function om(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new ac(t,e)}function am(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Tl(t)}function lm(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new ac(t,e)}function cm(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new nc(t)}function um(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new nc(t)}function pm(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new nc(t)}function hm(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new ar(t,e,n)}function dm(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ui(t,e).setUsage(An)}function mm(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new ji(t,e)}function fm(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Vi(t,e)}function gm(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ki(t,e)}function _m(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Wi(t,e)}function ym(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new qi(t,e)}function vm(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Yi(t,e)}function bm(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Xi(t,e)}function xm(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Zi(t,e)}function wm(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Qi(t,e)}function Mm(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Sd(t)}function Sm(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new _d(t,e)}function Tm(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new tc(new wc(t.geometry),new Wl({color:void 0!==e?e:16777215}))}function Em(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new tc(new pu(t.geometry),new Wl({color:void 0!==e?e:16777215}))}function Am(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new ku(t)}function Cm(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Ju(t)}function Lm(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Ns(t,n)}function zm(){console.error("THREE.CanvasRenderer has been removed")}function Rm(){console.error("THREE.JSONLoader has been removed.")}Qu.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Qu.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},yp.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},od.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},td.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},ju.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Up.extractUrlBase(t)},ju.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},kh.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},kh.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},kh.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},kh.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},ur.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},ur.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ur.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},ur.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},ur.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},Lr.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Us.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Yh.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Qn.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Qn.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Qn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Qn.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Qn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Qn.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Fr.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Fr.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Fr.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new ar).setFromMatrixColumn(this,3)},Fr.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Fr.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Fr.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Fr.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Fr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Fr.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Fr.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Fr.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Fr.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Fr.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Fr.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Fr.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Fr.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Fr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Fr.prototype.makeFrustum=function(t,e,n,r,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,i,s)},Fr.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},_i.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},or.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},or.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Nr.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Nr.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Nr.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Ci.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Ci.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Ci.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Ci.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Ci.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Ci.barycoordFromPoint=function(t,e,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ci.getBarycoord(t,e,n,r,i)},Ci.normal=function(t,e,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ci.getNormal(t,e,n,r)},vp.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},vp.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Qc(this,t)},vp.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new iu(this,t)},Zn.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},Zn.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},Zn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},ar.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},ar.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},ar.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},ar.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},ar.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},ar.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},ar.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},ar.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},ar.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},rr.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},rr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},di.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},di.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},di.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},di.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},di.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(di.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Es.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Es.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Xe},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Ol.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Is.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(bp.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Ui.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===An},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(An)}}}),Ui.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?An:En),this},Ui.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Ui.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ls.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},ls.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ui(arguments[1],arguments[2])))},ls.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},ls.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},ls.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},ls.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},ls.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(ls.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),ll.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?An:En),this},ll.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Qc.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Qc.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Qc.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},al.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Oh.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(zi.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ni}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===_}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Ps.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),rl.prototype.clearTarget=function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},rl.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},rl.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},rl.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},rl.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},rl.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},rl.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},rl.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},rl.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},rl.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},rl.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},rl.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},rl.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},rl.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},rl.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},rl.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},rl.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},rl.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},rl.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},rl.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},rl.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},rl.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},rl.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},rl.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},rl.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(rl.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Ke:Qe}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Ya.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(ir.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),fh.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new nh).load(t,(function(t){e.setBuffer(t)})),this},xh.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Os.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Os.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},$n.crossOrigin=void 0,$n.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Zu;i.setCrossOrigin(this.crossOrigin);const s=i.load(t,n,void 0,r);return e&&(s.mapping=e),s},$n.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Xu;i.setCrossOrigin(this.crossOrigin);const s=i.load(t,n,void 0,r);return e&&(s.mapping=e),s},$n.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},$n.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Pm={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function Dm(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},function(t,e){t.exports={GRAVITY:-9.8,MAX_INTERVAL:4/60,ITERATIONS:10,SIMULATION_RATE:8.333,ACTIVATION_STATE:{ACTIVE_TAG:"active",ISLAND_SLEEPING:"islandSleeping",WANTS_DEACTIVATION:"wantsDeactivation",DISABLE_DEACTIVATION:"disableDeactivation",DISABLE_SIMULATION:"disableSimulation"},COLLISION_FLAG:{STATIC_OBJECT:1,KINEMATIC_OBJECT:2,NO_CONTACT_RESPONSE:4,CUSTOM_MATERIAL_CALLBACK:8,CHARACTER_OBJECT:16,DISABLE_VISUALIZE_OBJECT:32,DISABLE_SPU_COLLISION_PROCESSING:64},TYPE:{STATIC:"static",DYNAMIC:"dynamic",KINEMATIC:"kinematic"},SHAPE:{BOX:"box",CYLINDER:"cylinder",SPHERE:"sphere",CAPSULE:"capsule",CONE:"cone",HULL:"hull",HACD:"hacd",VHACD:"vhacd",MESH:"mesh",HEIGHTFIELD:"heightfield"},FIT:{ALL:"all",MANUAL:"manual"},CONSTRAINT:{LOCK:"lock",FIXED:"fixed",SPRING:"spring",SLIDER:"slider",HINGE:"hinge",CONE_TWIST:"coneTwist",POINT_TO_POINT:"pointToPoint"},MESSAGE_TYPES:{INIT:0,READY:1,ADD_BODY:2,BODY_READY:3,UPDATE_BODY:4,REMOVE_BODY:5,ADD_SHAPES:6,REMOVE_SHAPES:7,ADD_CONSTRAINT:8,REMOVE_CONSTRAINT:9,ENABLE_DEBUG:10,RESET_DYNAMIC_BODY:11,ACTIVATE_BODY:12,TRANSFER_DATA:13,APPLY_FORCE:14,APPLY_IMPULSE:15,SET_LINEAR_VELOCITY:16,SET_ANGULAR_VELOCITY:17},BUFFER_CONFIG:{HEADER_LENGTH:2,MAX_BODIES:1e4,MATRIX_OFFSET:0,LINEAR_VELOCITY_OFFSET:16,ANGULAR_VELOCITY_OFFSET:17,COLLISIONS_OFFSET:18,BODY_DATA_SIZE:26},BUFFER_STATE:{UNINITIALIZED:0,READY:1,CONSUMED:2}}},function(t,e,n){t.exports=function(){return n(5)('!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/examples/",n(n.s=7)}([function(t,e,n){"use strict";n.r(e),n.d(e,"ACESFilmicToneMapping",(function(){return nt})),n.d(e,"AddEquation",(function(){return T})),n.d(e,"AddOperation",(function(){return Q})),n.d(e,"AdditiveAnimationBlendMode",(function(){return Ye})),n.d(e,"AdditiveBlending",(function(){return x})),n.d(e,"AlphaFormat",(function(){return Bt})),n.d(e,"AlwaysDepth",(function(){return U})),n.d(e,"AlwaysStencilFunc",(function(){return Tn})),n.d(e,"AmbientLight",(function(){return ju})),n.d(e,"AmbientLightProbe",(function(){return ih})),n.d(e,"AnimationClip",(function(){return Bp})),n.d(e,"AnimationLoader",(function(){return Wp})),n.d(e,"AnimationMixer",(function(){return Ih})),n.d(e,"AnimationObjectGroup",(function(){return Rh})),n.d(e,"AnimationUtils",(function(){return Mp})),n.d(e,"ArcCurve",(function(){return $p})),n.d(e,"ArrayCamera",(function(){return Qa})),n.d(e,"ArrowHelper",(function(){return Sd})),n.d(e,"Audio",(function(){return mh})),n.d(e,"AudioAnalyser",(function(){return xh})),n.d(e,"AudioContext",(function(){return eh})),n.d(e,"AudioListener",(function(){return fh})),n.d(e,"AudioLoader",(function(){return nh})),n.d(e,"AxesHelper",(function(){return Md})),n.d(e,"AxisHelper",(function(){return Mf})),n.d(e,"BackSide",(function(){return m})),n.d(e,"BasicDepthPacking",(function(){return sn})),n.d(e,"BasicShadowMap",(function(){return p})),n.d(e,"BinaryTextureLoader",(function(){return Ef})),n.d(e,"Bone",(function(){return jc})),n.d(e,"BooleanKeyframeTrack",(function(){return Lp})),n.d(e,"BoundingBoxHelper",(function(){return Tf})),n.d(e,"Box2",(function(){return Vh})),n.d(e,"Box3",(function(){return pr})),n.d(e,"Box3Helper",(function(){return gd})),n.d(e,"BoxBufferGeometry",(function(){return Eo})),n.d(e,"BoxGeometry",(function(){return Eo})),n.d(e,"BoxHelper",(function(){return yd})),n.d(e,"BufferAttribute",(function(){return Gi})),n.d(e,"BufferGeometry",(function(){return co})),n.d(e,"BufferGeometryLoader",(function(){return Vu})),n.d(e,"ByteType",(function(){return Ct})),n.d(e,"Cache",(function(){return Np})),n.d(e,"Camera",(function(){return Io})),n.d(e,"CameraHelper",(function(){return fd})),n.d(e,"CanvasRenderer",(function(){return Pf})),n.d(e,"CanvasTexture",(function(){return ul})),n.d(e,"CatmullRomCurve3",(function(){return ou})),n.d(e,"CineonToneMapping",(function(){return et})),n.d(e,"CircleBufferGeometry",(function(){return dl})),n.d(e,"CircleGeometry",(function(){return dl})),n.d(e,"ClampToEdgeWrapping",(function(){return dt})),n.d(e,"Clock",(function(){return ch})),n.d(e,"Color",(function(){return Bi})),n.d(e,"ColorKeyframeTrack",(function(){return Pp})),n.d(e,"CompressedTexture",(function(){return pl})),n.d(e,"CompressedTextureLoader",(function(){return qp})),n.d(e,"ConeBufferGeometry",(function(){return ml})),n.d(e,"ConeGeometry",(function(){return ml})),n.d(e,"CubeCamera",(function(){return jo})),n.d(e,"CubeReflectionMapping",(function(){return st})),n.d(e,"CubeRefractionMapping",(function(){return at})),n.d(e,"CubeTexture",(function(){return Bo})),n.d(e,"CubeTextureLoader",(function(){return Xp})),n.d(e,"CubeUVReflectionMapping",(function(){return pt})),n.d(e,"CubeUVRefractionMapping",(function(){return ut})),n.d(e,"CubicBezierCurve",(function(){return lu})),n.d(e,"CubicBezierCurve3",(function(){return pu})),n.d(e,"CubicInterpolant",(function(){return Cp})),n.d(e,"CullFaceBack",(function(){return a})),n.d(e,"CullFaceFront",(function(){return c})),n.d(e,"CullFaceFrontBack",(function(){return l})),n.d(e,"CullFaceNone",(function(){return s})),n.d(e,"Curve",(function(){return Qp})),n.d(e,"CurvePath",(function(){return yu})),n.d(e,"CustomBlending",(function(){return M})),n.d(e,"CustomToneMapping",(function(){return rt})),n.d(e,"CylinderBufferGeometry",(function(){return fl})),n.d(e,"CylinderGeometry",(function(){return fl})),n.d(e,"Cylindrical",(function(){return Uh})),n.d(e,"DataTexture",(function(){return No})),n.d(e,"DataTexture2DArray",(function(){return ls})),n.d(e,"DataTexture3D",(function(){return ps})),n.d(e,"DataTextureLoader",(function(){return Zp})),n.d(e,"DataUtils",(function(){return zd})),n.d(e,"DecrementStencilOp",(function(){return fn})),n.d(e,"DecrementWrapStencilOp",(function(){return _n})),n.d(e,"DefaultLoadingManager",(function(){return Gp})),n.d(e,"DepthFormat",(function(){return kt})),n.d(e,"DepthStencilFormat",(function(){return Vt})),n.d(e,"DepthTexture",(function(){return hl})),n.d(e,"DirectionalLight",(function(){return Ou})),n.d(e,"DirectionalLightHelper",(function(){return ud})),n.d(e,"DiscreteInterpolant",(function(){return Ap})),n.d(e,"DodecahedronBufferGeometry",(function(){return yl})),n.d(e,"DodecahedronGeometry",(function(){return yl})),n.d(e,"DoubleSide",(function(){return _})),n.d(e,"DstAlphaFactor",(function(){return j})),n.d(e,"DstColorFactor",(function(){return F})),n.d(e,"DynamicBufferAttribute",(function(){return ff})),n.d(e,"DynamicCopyUsage",(function(){return Dn})),n.d(e,"DynamicDrawUsage",(function(){return zn})),n.d(e,"DynamicReadUsage",(function(){return Ln})),n.d(e,"EdgesGeometry",(function(){return wl})),n.d(e,"EdgesHelper",(function(){return Cf})),n.d(e,"EllipseCurve",(function(){return Kp})),n.d(e,"EqualDepth",(function(){return W})),n.d(e,"EqualStencilFunc",(function(){return vn})),n.d(e,"EquirectangularReflectionMapping",(function(){return ct})),n.d(e,"EquirectangularRefractionMapping",(function(){return lt})),n.d(e,"Euler",(function(){return Xr})),n.d(e,"EventDispatcher",(function(){return Bn})),n.d(e,"ExtrudeBufferGeometry",(function(){return Ql})),n.d(e,"ExtrudeGeometry",(function(){return Ql})),n.d(e,"FaceColors",(function(){return nf})),n.d(e,"FileLoader",(function(){return Vp})),n.d(e,"FlatShading",(function(){return y})),n.d(e,"Float16BufferAttribute",(function(){return Zi})),n.d(e,"Float32Attribute",(function(){return wf})),n.d(e,"Float32BufferAttribute",(function(){return Ji})),n.d(e,"Float64Attribute",(function(){return Sf})),n.d(e,"Float64BufferAttribute",(function(){return Qi})),n.d(e,"FloatType",(function(){return Pt})),n.d(e,"Fog",(function(){return sc})),n.d(e,"FogExp2",(function(){return oc})),n.d(e,"Font",(function(){return Qu})),n.d(e,"FontLoader",(function(){return $u})),n.d(e,"FrontSide",(function(){return f})),n.d(e,"Frustum",(function(){return Uo})),n.d(e,"GLBufferAttribute",(function(){return Bh})),n.d(e,"GLSL1",(function(){return On})),n.d(e,"GLSL3",(function(){return jn})),n.d(e,"GammaEncoding",(function(){return $e})),n.d(e,"GreaterDepth",(function(){return Y})),n.d(e,"GreaterEqualDepth",(function(){return q})),n.d(e,"GreaterEqualStencilFunc",(function(){return Mn})),n.d(e,"GreaterStencilFunc",(function(){return wn})),n.d(e,"GridHelper",(function(){return sd})),n.d(e,"Group",(function(){return Ka})),n.d(e,"HalfFloatType",(function(){return Rt})),n.d(e,"HemisphereLight",(function(){return xu})),n.d(e,"HemisphereLightHelper",(function(){return od})),n.d(e,"HemisphereLightProbe",(function(){return rh})),n.d(e,"IcosahedronBufferGeometry",(function(){return $l})),n.d(e,"IcosahedronGeometry",(function(){return $l})),n.d(e,"ImageBitmapLoader",(function(){return Zu})),n.d(e,"ImageLoader",(function(){return Yp})),n.d(e,"ImageUtils",(function(){return $n})),n.d(e,"ImmediateRenderObject",(function(){return Xh})),n.d(e,"IncrementStencilOp",(function(){return dn})),n.d(e,"IncrementWrapStencilOp",(function(){return mn})),n.d(e,"InstancedBufferAttribute",(function(){return ku})),n.d(e,"InstancedBufferGeometry",(function(){return Uu})),n.d(e,"InstancedInterleavedBuffer",(function(){return jh})),n.d(e,"InstancedMesh",(function(){return Vc})),n.d(e,"Int16Attribute",(function(){return gf})),n.d(e,"Int16BufferAttribute",(function(){return Wi})),n.d(e,"Int32Attribute",(function(){return vf})),n.d(e,"Int32BufferAttribute",(function(){return Yi})),n.d(e,"Int8Attribute",(function(){return mf})),n.d(e,"Int8BufferAttribute",(function(){return Ui})),n.d(e,"IntType",(function(){return Et})),n.d(e,"InterleavedBuffer",(function(){return cc})),n.d(e,"InterleavedBufferAttribute",(function(){return pc})),n.d(e,"Interpolant",(function(){return Tp})),n.d(e,"InterpolateDiscrete",(function(){return He})),n.d(e,"InterpolateLinear",(function(){return Ge})),n.d(e,"InterpolateSmooth",(function(){return Ue})),n.d(e,"InvertStencilOp",(function(){return yn})),n.d(e,"JSONLoader",(function(){return Rf})),n.d(e,"KeepStencilOp",(function(){return un})),n.d(e,"KeyframeTrack",(function(){return Ep})),n.d(e,"LOD",(function(){return Ec})),n.d(e,"LUTToneMapping",(function(){return it})),n.d(e,"LatheBufferGeometry",(function(){return tp})),n.d(e,"LatheGeometry",(function(){return tp})),n.d(e,"Layers",(function(){return Zr})),n.d(e,"LensFlare",(function(){return If})),n.d(e,"LessDepth",(function(){return k})),n.d(e,"LessEqualDepth",(function(){return V})),n.d(e,"LessEqualStencilFunc",(function(){return xn})),n.d(e,"LessStencilFunc",(function(){return bn})),n.d(e,"Light",(function(){return vu})),n.d(e,"LightProbe",(function(){return Nu})),n.d(e,"Line",(function(){return Qc})),n.d(e,"Line3",(function(){return Yh})),n.d(e,"LineBasicMaterial",(function(){return Wc})),n.d(e,"LineCurve",(function(){return uu})),n.d(e,"LineCurve3",(function(){return hu})),n.d(e,"LineDashedMaterial",(function(){return wp})),n.d(e,"LineLoop",(function(){return el})),n.d(e,"LinePieces",(function(){return tf})),n.d(e,"LineSegments",(function(){return tl})),n.d(e,"LineStrip",(function(){return $d})),n.d(e,"LinearEncoding",(function(){return Qe})),n.d(e,"LinearFilter",(function(){return vt})),n.d(e,"LinearInterpolant",(function(){return zp})),n.d(e,"LinearMipMapLinearFilter",(function(){return Mt})),n.d(e,"LinearMipMapNearestFilter",(function(){return wt})),n.d(e,"LinearMipmapLinearFilter",(function(){return St})),n.d(e,"LinearMipmapNearestFilter",(function(){return xt})),n.d(e,"LinearToneMapping",(function(){return $})),n.d(e,"Loader",(function(){return Up})),n.d(e,"LoaderUtils",(function(){return Gu})),n.d(e,"LoadingManager",(function(){return Hp})),n.d(e,"LogLuvEncoding",(function(){return en})),n.d(e,"LoopOnce",(function(){return Be})),n.d(e,"LoopPingPong",(function(){return Ne})),n.d(e,"LoopRepeat",(function(){return Fe})),n.d(e,"LuminanceAlphaFormat",(function(){return Gt})),n.d(e,"LuminanceFormat",(function(){return Ht})),n.d(e,"MOUSE",(function(){return i})),n.d(e,"Material",(function(){return Li})),n.d(e,"MaterialLoader",(function(){return Hu})),n.d(e,"Math",(function(){return Zn})),n.d(e,"MathUtils",(function(){return Zn})),n.d(e,"Matrix3",(function(){return Qn})),n.d(e,"Matrix4",(function(){return Fr})),n.d(e,"MaxEquation",(function(){return E})),n.d(e,"Mesh",(function(){return zo})),n.d(e,"MeshBasicMaterial",(function(){return Fi})),n.d(e,"MeshDepthMaterial",(function(){return Wa})),n.d(e,"MeshDistanceMaterial",(function(){return qa})),n.d(e,"MeshFaceMaterial",(function(){return of})),n.d(e,"MeshLambertMaterial",(function(){return vp})),n.d(e,"MeshMatcapMaterial",(function(){return xp})),n.d(e,"MeshNormalMaterial",(function(){return bp})),n.d(e,"MeshPhongMaterial",(function(){return yp})),n.d(e,"MeshPhysicalMaterial",(function(){return _p})),n.d(e,"MeshStandardMaterial",(function(){return mp})),n.d(e,"MeshToonMaterial",(function(){return gp})),n.d(e,"MinEquation",(function(){return A})),n.d(e,"MirroredRepeatWrapping",(function(){return ft})),n.d(e,"MixOperation",(function(){return J})),n.d(e,"MultiMaterial",(function(){return sf})),n.d(e,"MultiplyBlending",(function(){return S})),n.d(e,"MultiplyOperation",(function(){return Z})),n.d(e,"NearestFilter",(function(){return mt})),n.d(e,"NearestMipMapLinearFilter",(function(){return bt})),n.d(e,"NearestMipMapNearestFilter",(function(){return yt})),n.d(e,"NearestMipmapLinearFilter",(function(){return gt})),n.d(e,"NearestMipmapNearestFilter",(function(){return _t})),n.d(e,"NeverDepth",(function(){return G})),n.d(e,"NeverStencilFunc",(function(){return gn})),n.d(e,"NoBlending",(function(){return b})),n.d(e,"NoColors",(function(){return ef})),n.d(e,"NoToneMapping",(function(){return K})),n.d(e,"NormalAnimationBlendMode",(function(){return qe})),n.d(e,"NormalBlending",(function(){return v})),n.d(e,"NotEqualDepth",(function(){return X})),n.d(e,"NotEqualStencilFunc",(function(){return Sn})),n.d(e,"NumberKeyframeTrack",(function(){return Rp})),n.d(e,"Object3D",(function(){return di})),n.d(e,"ObjectLoader",(function(){return Wu})),n.d(e,"ObjectSpaceNormalMap",(function(){return ln})),n.d(e,"OctahedronBufferGeometry",(function(){return ep})),n.d(e,"OctahedronGeometry",(function(){return ep})),n.d(e,"OneFactor",(function(){return P})),n.d(e,"OneMinusDstAlphaFactor",(function(){return B})),n.d(e,"OneMinusDstColorFactor",(function(){return N})),n.d(e,"OneMinusSrcAlphaFactor",(function(){return O})),n.d(e,"OneMinusSrcColorFactor",(function(){return D})),n.d(e,"OrthographicCamera",(function(){return Du})),n.d(e,"PCFShadowMap",(function(){return u})),n.d(e,"PCFSoftShadowMap",(function(){return h})),n.d(e,"PMREMGenerator",(function(){return Vd})),n.d(e,"ParametricBufferGeometry",(function(){return np})),n.d(e,"ParametricGeometry",(function(){return np})),n.d(e,"Particle",(function(){return cf})),n.d(e,"ParticleBasicMaterial",(function(){return uf})),n.d(e,"ParticleSystem",(function(){return lf})),n.d(e,"ParticleSystemMaterial",(function(){return hf})),n.d(e,"Path",(function(){return gu})),n.d(e,"PerspectiveCamera",(function(){return Oo})),n.d(e,"Plane",(function(){return yi})),n.d(e,"PlaneBufferGeometry",(function(){return Wo})),n.d(e,"PlaneGeometry",(function(){return Wo})),n.d(e,"PlaneHelper",(function(){return bd})),n.d(e,"PointCloud",(function(){return af})),n.d(e,"PointCloudMaterial",(function(){return pf})),n.d(e,"PointLight",(function(){return Ru})),n.d(e,"PointLightHelper",(function(){return ed})),n.d(e,"Points",(function(){return al})),n.d(e,"PointsMaterial",(function(){return nl})),n.d(e,"PolarGridHelper",(function(){return ad})),n.d(e,"PolyhedronBufferGeometry",(function(){return _l})),n.d(e,"PolyhedronGeometry",(function(){return _l})),n.d(e,"PositionalAudio",(function(){return vh})),n.d(e,"PropertyBinding",(function(){return Ph})),n.d(e,"PropertyMixer",(function(){return wh})),n.d(e,"QuadraticBezierCurve",(function(){return du})),n.d(e,"QuadraticBezierCurve3",(function(){return fu})),n.d(e,"Quaternion",(function(){return sr})),n.d(e,"QuaternionKeyframeTrack",(function(){return Ip})),n.d(e,"QuaternionLinearInterpolant",(function(){return Dp})),n.d(e,"REVISION",(function(){return r})),n.d(e,"RGBADepthPacking",(function(){return an})),n.d(e,"RGBAFormat",(function(){return Nt})),n.d(e,"RGBAIntegerFormat",(function(){return Jt})),n.d(e,"RGBA_ASTC_10x10_Format",(function(){return be})),n.d(e,"RGBA_ASTC_10x5_Format",(function(){return _e})),n.d(e,"RGBA_ASTC_10x6_Format",(function(){return ye})),n.d(e,"RGBA_ASTC_10x8_Format",(function(){return ge})),n.d(e,"RGBA_ASTC_12x10_Format",(function(){return ve})),n.d(e,"RGBA_ASTC_12x12_Format",(function(){return xe})),n.d(e,"RGBA_ASTC_4x4_Format",(function(){return ce})),n.d(e,"RGBA_ASTC_5x4_Format",(function(){return le})),n.d(e,"RGBA_ASTC_5x5_Format",(function(){return pe})),n.d(e,"RGBA_ASTC_6x5_Format",(function(){return ue})),n.d(e,"RGBA_ASTC_6x6_Format",(function(){return he})),n.d(e,"RGBA_ASTC_8x5_Format",(function(){return de})),n.d(e,"RGBA_ASTC_8x6_Format",(function(){return fe})),n.d(e,"RGBA_ASTC_8x8_Format",(function(){return me})),n.d(e,"RGBA_BPTC_Format",(function(){return we})),n.d(e,"RGBA_ETC2_EAC_Format",(function(){return ae})),n.d(e,"RGBA_PVRTC_2BPPV1_Format",(function(){return ie})),n.d(e,"RGBA_PVRTC_4BPPV1_Format",(function(){return re})),n.d(e,"RGBA_S3TC_DXT1_Format",(function(){return Kt})),n.d(e,"RGBA_S3TC_DXT3_Format",(function(){return $t})),n.d(e,"RGBA_S3TC_DXT5_Format",(function(){return te})),n.d(e,"RGBDEncoding",(function(){return on})),n.d(e,"RGBEEncoding",(function(){return tn})),n.d(e,"RGBEFormat",(function(){return Ut})),n.d(e,"RGBFormat",(function(){return Ft})),n.d(e,"RGBIntegerFormat",(function(){return Zt})),n.d(e,"RGBM16Encoding",(function(){return rn})),n.d(e,"RGBM7Encoding",(function(){return nn})),n.d(e,"RGB_ETC1_Format",(function(){return oe})),n.d(e,"RGB_ETC2_Format",(function(){return se})),n.d(e,"RGB_PVRTC_2BPPV1_Format",(function(){return ne})),n.d(e,"RGB_PVRTC_4BPPV1_Format",(function(){return ee})),n.d(e,"RGB_S3TC_DXT1_Format",(function(){return Qt})),n.d(e,"RGFormat",(function(){return Yt})),n.d(e,"RGIntegerFormat",(function(){return Xt})),n.d(e,"RawShaderMaterial",(function(){return fp})),n.d(e,"Ray",(function(){return Br})),n.d(e,"Raycaster",(function(){return Fh})),n.d(e,"RectAreaLight",(function(){return Bu})),n.d(e,"RedFormat",(function(){return Wt})),n.d(e,"RedIntegerFormat",(function(){return qt})),n.d(e,"ReinhardToneMapping",(function(){return tt})),n.d(e,"RepeatWrapping",(function(){return ht})),n.d(e,"ReplaceStencilOp",(function(){return hn})),n.d(e,"ReverseSubtractEquation",(function(){return z})),n.d(e,"RingBufferGeometry",(function(){return rp})),n.d(e,"RingGeometry",(function(){return rp})),n.d(e,"SRGB8_ALPHA8_ASTC_10x10_Format",(function(){return Ie})),n.d(e,"SRGB8_ALPHA8_ASTC_10x5_Format",(function(){return Pe})),n.d(e,"SRGB8_ALPHA8_ASTC_10x6_Format",(function(){return Re})),n.d(e,"SRGB8_ALPHA8_ASTC_10x8_Format",(function(){return De})),n.d(e,"SRGB8_ALPHA8_ASTC_12x10_Format",(function(){return Oe})),n.d(e,"SRGB8_ALPHA8_ASTC_12x12_Format",(function(){return je})),n.d(e,"SRGB8_ALPHA8_ASTC_4x4_Format",(function(){return Se})),n.d(e,"SRGB8_ALPHA8_ASTC_5x4_Format",(function(){return Me})),n.d(e,"SRGB8_ALPHA8_ASTC_5x5_Format",(function(){return Te})),n.d(e,"SRGB8_ALPHA8_ASTC_6x5_Format",(function(){return Ce})),n.d(e,"SRGB8_ALPHA8_ASTC_6x6_Format",(function(){return ze})),n.d(e,"SRGB8_ALPHA8_ASTC_8x5_Format",(function(){return Ae})),n.d(e,"SRGB8_ALPHA8_ASTC_8x6_Format",(function(){return Ee})),n.d(e,"SRGB8_ALPHA8_ASTC_8x8_Format",(function(){return Le})),n.d(e,"Scene",(function(){return ac})),n.d(e,"SceneUtils",(function(){return Df})),n.d(e,"ShaderChunk",(function(){return qo})),n.d(e,"ShaderLib",(function(){return Xo})),n.d(e,"ShaderMaterial",(function(){return Do})),n.d(e,"ShadowMaterial",(function(){return dp})),n.d(e,"Shape",(function(){return bu})),n.d(e,"ShapeBufferGeometry",(function(){return ip})),n.d(e,"ShapeGeometry",(function(){return ip})),n.d(e,"ShapePath",(function(){return Ju})),n.d(e,"ShapeUtils",(function(){return Xl})),n.d(e,"ShortType",(function(){return zt})),n.d(e,"Skeleton",(function(){return Nc})),n.d(e,"SkeletonHelper",(function(){return td})),n.d(e,"SkinnedMesh",(function(){return Oc})),n.d(e,"SmoothShading",(function(){return g})),n.d(e,"Sphere",(function(){return Er})),n.d(e,"SphereBufferGeometry",(function(){return op})),n.d(e,"SphereGeometry",(function(){return op})),n.d(e,"Spherical",(function(){return Gh})),n.d(e,"SphericalHarmonics3",(function(){return Fu})),n.d(e,"SplineCurve",(function(){return mu})),n.d(e,"SpotLight",(function(){return zu})),n.d(e,"SpotLightHelper",(function(){return Jh})),n.d(e,"Sprite",(function(){return Tc})),n.d(e,"SpriteMaterial",(function(){return uc})),n.d(e,"SrcAlphaFactor",(function(){return I})),n.d(e,"SrcAlphaSaturateFactor",(function(){return H})),n.d(e,"SrcColorFactor",(function(){return R})),n.d(e,"StaticCopyUsage",(function(){return Rn})),n.d(e,"StaticDrawUsage",(function(){return Cn})),n.d(e,"StaticReadUsage",(function(){return En})),n.d(e,"StereoCamera",(function(){return ah})),n.d(e,"StreamCopyUsage",(function(){return In})),n.d(e,"StreamDrawUsage",(function(){return An})),n.d(e,"StreamReadUsage",(function(){return Pn})),n.d(e,"StringKeyframeTrack",(function(){return Op})),n.d(e,"SubtractEquation",(function(){return C})),n.d(e,"SubtractiveBlending",(function(){return w})),n.d(e,"TOUCH",(function(){return o})),n.d(e,"TangentSpaceNormalMap",(function(){return cn})),n.d(e,"TetrahedronBufferGeometry",(function(){return sp})),n.d(e,"TetrahedronGeometry",(function(){return sp})),n.d(e,"TextBufferGeometry",(function(){return ap})),n.d(e,"TextGeometry",(function(){return ap})),n.d(e,"Texture",(function(){return er})),n.d(e,"TextureLoader",(function(){return Jp})),n.d(e,"TorusBufferGeometry",(function(){return cp})),n.d(e,"TorusGeometry",(function(){return cp})),n.d(e,"TorusKnotBufferGeometry",(function(){return lp})),n.d(e,"TorusKnotGeometry",(function(){return lp})),n.d(e,"Triangle",(function(){return Ai})),n.d(e,"TriangleFanDrawMode",(function(){return Je})),n.d(e,"TriangleStripDrawMode",(function(){return Ze})),n.d(e,"TrianglesDrawMode",(function(){return Xe})),n.d(e,"TubeBufferGeometry",(function(){return pp})),n.d(e,"TubeGeometry",(function(){return pp})),n.d(e,"UVMapping",(function(){return ot})),n.d(e,"Uint16Attribute",(function(){return bf})),n.d(e,"Uint16BufferAttribute",(function(){return qi})),n.d(e,"Uint32Attribute",(function(){return xf})),n.d(e,"Uint32BufferAttribute",(function(){return Xi})),n.d(e,"Uint8Attribute",(function(){return _f})),n.d(e,"Uint8BufferAttribute",(function(){return ki})),n.d(e,"Uint8ClampedAttribute",(function(){return yf})),n.d(e,"Uint8ClampedBufferAttribute",(function(){return Vi})),n.d(e,"Uniform",(function(){return Oh})),n.d(e,"UniformsLib",(function(){return Yo})),n.d(e,"UniformsUtils",(function(){return Ro})),n.d(e,"UnsignedByteType",(function(){return Tt})),n.d(e,"UnsignedInt248Type",(function(){return jt})),n.d(e,"UnsignedIntType",(function(){return Lt})),n.d(e,"UnsignedShort4444Type",(function(){return Dt})),n.d(e,"UnsignedShort5551Type",(function(){return It})),n.d(e,"UnsignedShort565Type",(function(){return Ot})),n.d(e,"UnsignedShortType",(function(){return At})),n.d(e,"VSMShadowMap",(function(){return d})),n.d(e,"Vector2",(function(){return Jn})),n.d(e,"Vector3",(function(){return ar})),n.d(e,"Vector4",(function(){return rr})),n.d(e,"VectorKeyframeTrack",(function(){return jp})),n.d(e,"Vertex",(function(){return df})),n.d(e,"VertexColors",(function(){return rf})),n.d(e,"VideoTexture",(function(){return ll})),n.d(e,"WebGL1Renderer",(function(){return ic})),n.d(e,"WebGLCubeRenderTarget",(function(){return Fo})),n.d(e,"WebGLMultisampleRenderTarget",(function(){return or})),n.d(e,"WebGLRenderTarget",(function(){return ir})),n.d(e,"WebGLRenderTargetCube",(function(){return Lf})),n.d(e,"WebGLRenderer",(function(){return rc})),n.d(e,"WebGLUtils",(function(){return Ja})),n.d(e,"WireframeGeometry",(function(){return up})),n.d(e,"WireframeHelper",(function(){return zf})),n.d(e,"WrapAroundEnding",(function(){return We})),n.d(e,"XHRLoader",(function(){return Af})),n.d(e,"ZeroCurvatureEnding",(function(){return ke})),n.d(e,"ZeroFactor",(function(){return L})),n.d(e,"ZeroSlopeEnding",(function(){return Ve})),n.d(e,"ZeroStencilOp",(function(){return pn})),n.d(e,"sRGBEncoding",(function(){return Ke}));\n/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst r="128",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},o={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},s=0,a=1,c=2,l=3,p=0,u=1,h=2,d=3,f=0,m=1,_=2,y=1,g=2,b=0,v=1,x=2,w=3,S=4,M=5,T=100,C=101,z=102,A=103,E=104,L=200,P=201,R=202,D=203,I=204,O=205,j=206,B=207,F=208,N=209,H=210,G=0,U=1,k=2,V=3,W=4,q=5,Y=6,X=7,Z=0,J=1,Q=2,K=0,$=1,tt=2,et=3,nt=4,rt=5,it=6,ot=300,st=301,at=302,ct=303,lt=304,pt=306,ut=307,ht=1e3,dt=1001,ft=1002,mt=1003,_t=1004,yt=1004,gt=1005,bt=1005,vt=1006,xt=1007,wt=1007,St=1008,Mt=1008,Tt=1009,Ct=1010,zt=1011,At=1012,Et=1013,Lt=1014,Pt=1015,Rt=1016,Dt=1017,It=1018,Ot=1019,jt=1020,Bt=1021,Ft=1022,Nt=1023,Ht=1024,Gt=1025,Ut=Nt,kt=1026,Vt=1027,Wt=1028,qt=1029,Yt=1030,Xt=1031,Zt=1032,Jt=1033,Qt=33776,Kt=33777,$t=33778,te=33779,ee=35840,ne=35841,re=35842,ie=35843,oe=36196,se=37492,ae=37496,ce=37808,le=37809,pe=37810,ue=37811,he=37812,de=37813,fe=37814,me=37815,_e=37816,ye=37817,ge=37818,be=37819,ve=37820,xe=37821,we=36492,Se=37840,Me=37841,Te=37842,Ce=37843,ze=37844,Ae=37845,Ee=37846,Le=37847,Pe=37848,Re=37849,De=37850,Ie=37851,Oe=37852,je=37853,Be=2200,Fe=2201,Ne=2202,He=2300,Ge=2301,Ue=2302,ke=2400,Ve=2401,We=2402,qe=2500,Ye=2501,Xe=0,Ze=1,Je=2,Qe=3e3,Ke=3001,$e=3007,tn=3002,en=3003,nn=3004,rn=3005,on=3006,sn=3200,an=3201,cn=0,ln=1,pn=0,un=7680,hn=7681,dn=7682,fn=7683,mn=34055,_n=34056,yn=5386,gn=512,bn=513,vn=514,xn=515,wn=516,Sn=517,Mn=518,Tn=519,Cn=35044,zn=35048,An=35040,En=35045,Ln=35049,Pn=35041,Rn=35046,Dn=35050,In=35042,On="100",jn="300 es";class Bn{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,r=n.length;e<r;e++)n[e].call(this,t);t.target=null}}}const Fn=[];for(let t=0;t<256;t++)Fn[t]=(t<16?"0":"")+t.toString(16);let Nn=1234567;const Hn=Math.PI/180,Gn=180/Math.PI;function Un(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Fn[255&t]+Fn[t>>8&255]+Fn[t>>16&255]+Fn[t>>24&255]+"-"+Fn[255&e]+Fn[e>>8&255]+"-"+Fn[e>>16&15|64]+Fn[e>>24&255]+"-"+Fn[63&n|128]+Fn[n>>8&255]+"-"+Fn[n>>16&255]+Fn[n>>24&255]+Fn[255&r]+Fn[r>>8&255]+Fn[r>>16&255]+Fn[r>>24&255]).toUpperCase()}function kn(t,e,n){return Math.max(e,Math.min(n,t))}function Vn(t,e){return(t%e+e)%e}function Wn(t,e,n){return(1-n)*t+n*e}function qn(t){return 0==(t&t-1)&&0!==t}function Yn(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Xn(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var Zn=Object.freeze({__proto__:null,DEG2RAD:Hn,RAD2DEG:Gn,generateUUID:Un,clamp:kn,euclideanModulo:Vn,mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:Wn,damp:function(t,e,n,r){return Wn(t,e,1-Math.exp(-n*r))},pingpong:function(t,e=1){return e-Math.abs(Vn(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(Nn=t%2147483647),Nn=16807*Nn%2147483647,(Nn-1)/2147483646},degToRad:function(t){return t*Hn},radToDeg:function(t){return t*Gn},isPowerOfTwo:qn,ceilPowerOfTwo:Yn,floorPowerOfTwo:Xn,setQuaternionFromProperEuler:function(t,e,n,r,i){const o=Math.cos,s=Math.sin,a=o(n/2),c=s(n/2),l=o((e+r)/2),p=s((e+r)/2),u=o((e-r)/2),h=s((e-r)/2),d=o((r-e)/2),f=s((r-e)/2);switch(i){case"XYX":t.set(a*p,c*u,c*h,a*l);break;case"YZY":t.set(c*h,a*p,c*u,a*l);break;case"ZXZ":t.set(c*u,c*h,a*p,a*l);break;case"XZX":t.set(a*p,c*f,c*d,a*l);break;case"YXY":t.set(c*d,a*p,c*f,a*l);break;case"ZYZ":t.set(c*f,c*d,a*p,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}});class Jn{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,o=this.y-t.y;return this.x=i*n-o*r+t.x,this.y=i*r+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Jn.prototype.isVector2=!0;class Qn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,o,s,a,c){const l=this.elements;return l[0]=t,l[1]=r,l[2]=s,l[3]=e,l[4]=i,l[5]=a,l[6]=n,l[7]=o,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,o=n[0],s=n[3],a=n[6],c=n[1],l=n[4],p=n[7],u=n[2],h=n[5],d=n[8],f=r[0],m=r[3],_=r[6],y=r[1],g=r[4],b=r[7],v=r[2],x=r[5],w=r[8];return i[0]=o*f+s*y+a*v,i[3]=o*m+s*g+a*x,i[6]=o*_+s*b+a*w,i[1]=c*f+l*y+p*v,i[4]=c*m+l*g+p*x,i[7]=c*_+l*b+p*w,i[2]=u*f+h*y+d*v,i[5]=u*m+h*g+d*x,i[8]=u*_+h*b+d*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],o=t[4],s=t[5],a=t[6],c=t[7],l=t[8];return e*o*l-e*s*c-n*i*l+n*s*a+r*i*c-r*o*a}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],o=t[4],s=t[5],a=t[6],c=t[7],l=t[8],p=l*o-s*c,u=s*a-l*i,h=c*i-o*a,d=e*p+n*u+r*h;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const f=1/d;return t[0]=p*f,t[1]=(r*c-l*n)*f,t[2]=(s*n-r*o)*f,t[3]=u*f,t[4]=(l*e-r*a)*f,t[5]=(r*i-s*e)*f,t[6]=h*f,t[7]=(n*a-c*e)*f,t[8]=(o*e-n*i)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,i,o,s){const a=Math.cos(i),c=Math.sin(i);return this.set(n*a,n*c,-n*(a*o+c*s)+o+t,-r*c,r*a,-r*(-c*o+a*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],o=r[3],s=r[6],a=r[1],c=r[4],l=r[7];return r[0]=e*i+n*a,r[3]=e*o+n*c,r[6]=e*s+n*l,r[1]=-n*i+e*a,r[4]=-n*o+e*c,r[7]=-n*s+e*l,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let Kn;Qn.prototype.isMatrix3=!0;class $n{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Kn&&(Kn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Kn.width=t.width,Kn.height=t.height;const n=Kn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Kn}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let tr=0;class er extends Bn{constructor(t=er.DEFAULT_IMAGE,e=er.DEFAULT_MAPPING,n=dt,r=dt,i=vt,o=St,s=Nt,a=Tt,c=1,l=Qe){super(),Object.defineProperty(this,"id",{value:tr++}),this.uuid=Un(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=o,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=a,this.offset=new Jn(0,0),this.repeat=new Jn(1,1),this.center=new Jn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Qn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=Un()),!e&&void 0===t.images[r.uuid]){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(nr(r[t].image)):e.push(nr(r[t]))}else e=nr(r);t.images[r.uuid]={uuid:r.uuid,url:e}}n.image=r.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ot)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ht:t.x=t.x-Math.floor(t.x);break;case dt:t.x=t.x<0?0:1;break;case ft:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case ht:t.y=t.y-Math.floor(t.y);break;case dt:t.y=t.y<0?0:1;break;case ft:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function nr(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?$n.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}er.DEFAULT_IMAGE=void 0,er.DEFAULT_MAPPING=ot,er.prototype.isTexture=!0;class rr{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*r+o[12]*i,this.y=o[1]*e+o[5]*n+o[9]*r+o[13]*i,this.z=o[2]*e+o[6]*n+o[10]*r+o[14]*i,this.w=o[3]*e+o[7]*n+o[11]*r+o[15]*i,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,i;const o=t.elements,s=o[0],a=o[4],c=o[8],l=o[1],p=o[5],u=o[9],h=o[2],d=o[6],f=o[10];if(Math.abs(a-l)<.01&&Math.abs(c-h)<.01&&Math.abs(u-d)<.01){if(Math.abs(a+l)<.1&&Math.abs(c+h)<.1&&Math.abs(u+d)<.1&&Math.abs(s+p+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(s+1)/2,o=(p+1)/2,m=(f+1)/2,_=(a+l)/4,y=(c+h)/4,g=(u+d)/4;return t>o&&t>m?t<.01?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(t),r=_/n,i=y/n):o>m?o<.01?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(o),n=_/r,i=g/r):m<.01?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(m),n=y/i,r=g/i),this.set(n,r,i,e),this}let m=Math.sqrt((d-u)*(d-u)+(c-h)*(c-h)+(l-a)*(l-a));return Math.abs(m)<.001&&(m=1),this.x=(d-u)/m,this.y=(c-h)/m,this.z=(l-a)/m,this.w=Math.acos((s+p+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}rr.prototype.isVector4=!0;class ir extends Bn{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new rr(0,0,t,e),this.scissorTest=!1,this.viewport=new rr(0,0,t,e),n=n||{},this.texture=new er(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:vt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}ir.prototype.isWebGLRenderTarget=!0;class or extends ir{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}or.prototype.isWebGLMultisampleRenderTarget=!0;class sr{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,i,o,s){let a=n[r+0],c=n[r+1],l=n[r+2],p=n[r+3];const u=i[o+0],h=i[o+1],d=i[o+2],f=i[o+3];if(0===s)return t[e+0]=a,t[e+1]=c,t[e+2]=l,void(t[e+3]=p);if(1===s)return t[e+0]=u,t[e+1]=h,t[e+2]=d,void(t[e+3]=f);if(p!==f||a!==u||c!==h||l!==d){let t=1-s;const e=a*u+c*h+l*d+p*f,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const i=Math.sqrt(r),o=Math.atan2(i,e*n);t=Math.sin(t*o)/i,s=Math.sin(s*o)/i}const i=s*n;if(a=a*t+u*i,c=c*t+h*i,l=l*t+d*i,p=p*t+f*i,t===1-s){const t=1/Math.sqrt(a*a+c*c+l*l+p*p);a*=t,c*=t,l*=t,p*=t}}t[e]=a,t[e+1]=c,t[e+2]=l,t[e+3]=p}static multiplyQuaternionsFlat(t,e,n,r,i,o){const s=n[r],a=n[r+1],c=n[r+2],l=n[r+3],p=i[o],u=i[o+1],h=i[o+2],d=i[o+3];return t[e]=s*d+l*p+a*h-c*u,t[e+1]=a*d+l*u+c*p-s*h,t[e+2]=c*d+l*h+s*u-a*p,t[e+3]=l*d-s*p-a*u-c*h,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,i=t._z,o=t._order,s=Math.cos,a=Math.sin,c=s(n/2),l=s(r/2),p=s(i/2),u=a(n/2),h=a(r/2),d=a(i/2);switch(o){case"XYZ":this._x=u*l*p+c*h*d,this._y=c*h*p-u*l*d,this._z=c*l*d+u*h*p,this._w=c*l*p-u*h*d;break;case"YXZ":this._x=u*l*p+c*h*d,this._y=c*h*p-u*l*d,this._z=c*l*d-u*h*p,this._w=c*l*p+u*h*d;break;case"ZXY":this._x=u*l*p-c*h*d,this._y=c*h*p+u*l*d,this._z=c*l*d+u*h*p,this._w=c*l*p-u*h*d;break;case"ZYX":this._x=u*l*p-c*h*d,this._y=c*h*p+u*l*d,this._z=c*l*d-u*h*p,this._w=c*l*p+u*h*d;break;case"YZX":this._x=u*l*p+c*h*d,this._y=c*h*p+u*l*d,this._z=c*l*d-u*h*p,this._w=c*l*p-u*h*d;break;case"XZY":this._x=u*l*p-c*h*d,this._y=c*h*p-u*l*d,this._z=c*l*d+u*h*p,this._w=c*l*p+u*h*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],i=e[8],o=e[1],s=e[5],a=e[9],c=e[2],l=e[6],p=e[10],u=n+s+p;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-a)*t,this._y=(i-c)*t,this._z=(o-r)*t}else if(n>s&&n>p){const t=2*Math.sqrt(1+n-s-p);this._w=(l-a)/t,this._x=.25*t,this._y=(r+o)/t,this._z=(i+c)/t}else if(s>p){const t=2*Math.sqrt(1+s-n-p);this._w=(i-c)/t,this._x=(r+o)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+p-n-s);this._w=(o-r)/t,this._x=(i+c)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(kn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,i=t._z,o=t._w,s=e._x,a=e._y,c=e._z,l=e._w;return this._x=n*l+o*s+r*c-i*a,this._y=r*l+o*a+i*s-n*c,this._z=i*l+o*c+n*a-r*s,this._w=o*l-n*s-r*a-i*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,i=this._z,o=this._w;let s=o*t._w+n*t._x+r*t._y+i*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=o,this._x=n,this._y=r,this._z=i,this;const a=1-s*s;if(a<=Number.EPSILON){const t=1-e;return this._w=t*o+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),l=Math.atan2(c,s),p=Math.sin((1-e)*l)/c,u=Math.sin(e*l)/c;return this._w=o*p+this._w*u,this._x=n*p+this._x*u,this._y=r*p+this._y*u,this._z=i*p+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}sr.prototype.isQuaternion=!0;class ar{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(lr.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(lr.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=t.elements,o=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*o,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*o,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,i=t.x,o=t.y,s=t.z,a=t.w,c=a*e+o*r-s*n,l=a*n+s*e-i*r,p=a*r+i*n-o*e,u=-i*e-o*n-s*r;return this.x=c*a+u*-i+l*-s-p*-o,this.y=l*a+u*-o+p*-i-c*-s,this.z=p*a+u*-s+c*-o-l*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,i=t.z,o=e.x,s=e.y,a=e.z;return this.x=r*a-i*s,this.y=i*o-n*a,this.z=n*s-r*o,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return cr.copy(this).projectOnVector(t),this.sub(cr)}reflect(t){return this.sub(cr.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(kn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}ar.prototype.isVector3=!0;const cr=new ar,lr=new sr;class pr{constructor(t=new ar(1/0,1/0,1/0),e=new ar(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,i=-1/0,o=-1/0,s=-1/0;for(let a=0,c=t.length;a<c;a+=3){const c=t[a],l=t[a+1],p=t[a+2];c<e&&(e=c),l<n&&(n=l),p<r&&(r=p),c>i&&(i=c),l>o&&(o=l),p>s&&(s=p)}return this.min.set(e,n,r),this.max.set(i,o,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,i=-1/0,o=-1/0,s=-1/0;for(let a=0,c=t.count;a<c;a++){const c=t.getX(a),l=t.getY(a),p=t.getZ(a);c<e&&(e=c),l<n&&(n=l),p<r&&(r=p),c>i&&(i=c),l>o&&(o=l),p>s&&(s=p)}return this.min.set(e,n,r),this.max.set(i,o,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=hr.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new ar),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new ar),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),dr.copy(e.boundingBox),dr.applyMatrix4(t.matrixWorld),this.union(dr));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new ar),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,hr),hr.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(vr),xr.subVectors(this.max,vr),fr.subVectors(t.a,vr),mr.subVectors(t.b,vr),_r.subVectors(t.c,vr),yr.subVectors(mr,fr),gr.subVectors(_r,mr),br.subVectors(fr,_r);let e=[0,-yr.z,yr.y,0,-gr.z,gr.y,0,-br.z,br.y,yr.z,0,-yr.x,gr.z,0,-gr.x,br.z,0,-br.x,-yr.y,yr.x,0,-gr.y,gr.x,0,-br.y,br.x,0];return!!Mr(e,fr,mr,_r,xr)&&(e=[1,0,0,0,1,0,0,0,1],!!Mr(e,fr,mr,_r,xr)&&(wr.crossVectors(yr,gr),e=[wr.x,wr.y,wr.z],Mr(e,fr,mr,_r,xr)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new ar),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return hr.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(hr).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(ur[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ur[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ur[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ur[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ur[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ur[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ur[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ur[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ur),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}pr.prototype.isBox3=!0;const ur=[new ar,new ar,new ar,new ar,new ar,new ar,new ar,new ar],hr=new ar,dr=new pr,fr=new ar,mr=new ar,_r=new ar,yr=new ar,gr=new ar,br=new ar,vr=new ar,xr=new ar,wr=new ar,Sr=new ar;function Mr(t,e,n,r,i){for(let o=0,s=t.length-3;o<=s;o+=3){Sr.fromArray(t,o);const s=i.x*Math.abs(Sr.x)+i.y*Math.abs(Sr.y)+i.z*Math.abs(Sr.z),a=e.dot(Sr),c=n.dot(Sr),l=r.dot(Sr);if(Math.max(-Math.max(a,c,l),Math.min(a,c,l))>s)return!1}return!0}const Tr=new pr,Cr=new ar,zr=new ar,Ar=new ar;class Er{constructor(t=new ar,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Tr.setFromPoints(t).getCenter(n);let r=0;for(let e=0,i=t.length;e<i;e++)r=Math.max(r,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new ar),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new pr),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Ar.subVectors(t,this.center);const e=Ar.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(Ar.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return zr.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Cr.copy(t.center).add(zr)),this.expandByPoint(Cr.copy(t.center).sub(zr)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Lr=new ar,Pr=new ar,Rr=new ar,Dr=new ar,Ir=new ar,Or=new ar,jr=new ar;class Br{constructor(t=new ar,e=new ar(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new ar),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Lr)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new ar),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Lr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Lr.copy(this.direction).multiplyScalar(e).add(this.origin),Lr.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){Pr.copy(t).add(e).multiplyScalar(.5),Rr.copy(e).sub(t).normalize(),Dr.copy(this.origin).sub(Pr);const i=.5*t.distanceTo(e),o=-this.direction.dot(Rr),s=Dr.dot(this.direction),a=-Dr.dot(Rr),c=Dr.lengthSq(),l=Math.abs(1-o*o);let p,u,h,d;if(l>0)if(p=o*a-s,u=o*s-a,d=i*l,p>=0)if(u>=-d)if(u<=d){const t=1/l;p*=t,u*=t,h=p*(p+o*u+2*s)+u*(o*p+u+2*a)+c}else u=i,p=Math.max(0,-(o*u+s)),h=-p*p+u*(u+2*a)+c;else u=-i,p=Math.max(0,-(o*u+s)),h=-p*p+u*(u+2*a)+c;else u<=-d?(p=Math.max(0,-(-o*i+s)),u=p>0?-i:Math.min(Math.max(-i,-a),i),h=-p*p+u*(u+2*a)+c):u<=d?(p=0,u=Math.min(Math.max(-i,-a),i),h=u*(u+2*a)+c):(p=Math.max(0,-(o*i+s)),u=p>0?i:Math.min(Math.max(-i,-a),i),h=-p*p+u*(u+2*a)+c);else u=o>0?-i:i,p=Math.max(0,-(o*u+s)),h=-p*p+u*(u+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(p).add(this.origin),r&&r.copy(Rr).multiplyScalar(u).add(Pr),h}intersectSphere(t,e){Lr.subVectors(t.center,this.origin);const n=Lr.dot(this.direction),r=Lr.dot(Lr)-n*n,i=t.radius*t.radius;if(r>i)return null;const o=Math.sqrt(i-r),s=n-o,a=n+o;return s<0&&a<0?null:s<0?this.at(a,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,i,o,s,a;const c=1/this.direction.x,l=1/this.direction.y,p=1/this.direction.z,u=this.origin;return c>=0?(n=(t.min.x-u.x)*c,r=(t.max.x-u.x)*c):(n=(t.max.x-u.x)*c,r=(t.min.x-u.x)*c),l>=0?(i=(t.min.y-u.y)*l,o=(t.max.y-u.y)*l):(i=(t.max.y-u.y)*l,o=(t.min.y-u.y)*l),n>o||i>r?null:((i>n||n!=n)&&(n=i),(o<r||r!=r)&&(r=o),p>=0?(s=(t.min.z-u.z)*p,a=(t.max.z-u.z)*p):(s=(t.max.z-u.z)*p,a=(t.min.z-u.z)*p),n>a||s>r?null:((s>n||n!=n)&&(n=s),(a<r||r!=r)&&(r=a),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,Lr)}intersectTriangle(t,e,n,r,i){Ir.subVectors(e,t),Or.subVectors(n,t),jr.crossVectors(Ir,Or);let o,s=this.direction.dot(jr);if(s>0){if(r)return null;o=1}else{if(!(s<0))return null;o=-1,s=-s}Dr.subVectors(this.origin,t);const a=o*this.direction.dot(Or.crossVectors(Dr,Or));if(a<0)return null;const c=o*this.direction.dot(Ir.cross(Dr));if(c<0)return null;if(a+c>s)return null;const l=-o*Dr.dot(jr);return l<0?null:this.at(l/s,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Fr{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,o,s,a,c,l,p,u,h,d,f,m){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=r,_[1]=i,_[5]=o,_[9]=s,_[13]=a,_[2]=c,_[6]=l,_[10]=p,_[14]=u,_[3]=h,_[7]=d,_[11]=f,_[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Fr).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/Nr.setFromMatrixColumn(t,0).length(),i=1/Nr.setFromMatrixColumn(t,1).length(),o=1/Nr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,i=t.z,o=Math.cos(n),s=Math.sin(n),a=Math.cos(r),c=Math.sin(r),l=Math.cos(i),p=Math.sin(i);if("XYZ"===t.order){const t=o*l,n=o*p,r=s*l,i=s*p;e[0]=a*l,e[4]=-a*p,e[8]=c,e[1]=n+r*c,e[5]=t-i*c,e[9]=-s*a,e[2]=i-t*c,e[6]=r+n*c,e[10]=o*a}else if("YXZ"===t.order){const t=a*l,n=a*p,r=c*l,i=c*p;e[0]=t+i*s,e[4]=r*s-n,e[8]=o*c,e[1]=o*p,e[5]=o*l,e[9]=-s,e[2]=n*s-r,e[6]=i+t*s,e[10]=o*a}else if("ZXY"===t.order){const t=a*l,n=a*p,r=c*l,i=c*p;e[0]=t-i*s,e[4]=-o*p,e[8]=r+n*s,e[1]=n+r*s,e[5]=o*l,e[9]=i-t*s,e[2]=-o*c,e[6]=s,e[10]=o*a}else if("ZYX"===t.order){const t=o*l,n=o*p,r=s*l,i=s*p;e[0]=a*l,e[4]=r*c-n,e[8]=t*c+i,e[1]=a*p,e[5]=i*c+t,e[9]=n*c-r,e[2]=-c,e[6]=s*a,e[10]=o*a}else if("YZX"===t.order){const t=o*a,n=o*c,r=s*a,i=s*c;e[0]=a*l,e[4]=i-t*p,e[8]=r*p+n,e[1]=p,e[5]=o*l,e[9]=-s*l,e[2]=-c*l,e[6]=n*p+r,e[10]=t-i*p}else if("XZY"===t.order){const t=o*a,n=o*c,r=s*a,i=s*c;e[0]=a*l,e[4]=-p,e[8]=c*l,e[1]=t*p+i,e[5]=o*l,e[9]=n*p-r,e[2]=r*p-n,e[6]=s*l,e[10]=i*p+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Gr,t,Ur)}lookAt(t,e,n){const r=this.elements;return Wr.subVectors(t,e),0===Wr.lengthSq()&&(Wr.z=1),Wr.normalize(),kr.crossVectors(n,Wr),0===kr.lengthSq()&&(1===Math.abs(n.z)?Wr.x+=1e-4:Wr.z+=1e-4,Wr.normalize(),kr.crossVectors(n,Wr)),kr.normalize(),Vr.crossVectors(Wr,kr),r[0]=kr.x,r[4]=Vr.x,r[8]=Wr.x,r[1]=kr.y,r[5]=Vr.y,r[9]=Wr.y,r[2]=kr.z,r[6]=Vr.z,r[10]=Wr.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,o=n[0],s=n[4],a=n[8],c=n[12],l=n[1],p=n[5],u=n[9],h=n[13],d=n[2],f=n[6],m=n[10],_=n[14],y=n[3],g=n[7],b=n[11],v=n[15],x=r[0],w=r[4],S=r[8],M=r[12],T=r[1],C=r[5],z=r[9],A=r[13],E=r[2],L=r[6],P=r[10],R=r[14],D=r[3],I=r[7],O=r[11],j=r[15];return i[0]=o*x+s*T+a*E+c*D,i[4]=o*w+s*C+a*L+c*I,i[8]=o*S+s*z+a*P+c*O,i[12]=o*M+s*A+a*R+c*j,i[1]=l*x+p*T+u*E+h*D,i[5]=l*w+p*C+u*L+h*I,i[9]=l*S+p*z+u*P+h*O,i[13]=l*M+p*A+u*R+h*j,i[2]=d*x+f*T+m*E+_*D,i[6]=d*w+f*C+m*L+_*I,i[10]=d*S+f*z+m*P+_*O,i[14]=d*M+f*A+m*R+_*j,i[3]=y*x+g*T+b*E+v*D,i[7]=y*w+g*C+b*L+v*I,i[11]=y*S+g*z+b*P+v*O,i[15]=y*M+g*A+b*R+v*j,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],o=t[1],s=t[5],a=t[9],c=t[13],l=t[2],p=t[6],u=t[10],h=t[14];return t[3]*(+i*a*p-r*c*p-i*s*u+n*c*u+r*s*h-n*a*h)+t[7]*(+e*a*h-e*c*u+i*o*u-r*o*h+r*c*l-i*a*l)+t[11]*(+e*c*p-e*s*h-i*o*p+n*o*h+i*s*l-n*c*l)+t[15]*(-r*s*l-e*a*p+e*s*u+r*o*p-n*o*u+n*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],o=t[4],s=t[5],a=t[6],c=t[7],l=t[8],p=t[9],u=t[10],h=t[11],d=t[12],f=t[13],m=t[14],_=t[15],y=p*m*c-f*u*c+f*a*h-s*m*h-p*a*_+s*u*_,g=d*u*c-l*m*c-d*a*h+o*m*h+l*a*_-o*u*_,b=l*f*c-d*p*c+d*s*h-o*f*h-l*s*_+o*p*_,v=d*p*a-l*f*a-d*s*u+o*f*u+l*s*m-o*p*m,x=e*y+n*g+r*b+i*v;if(0===x)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/x;return t[0]=y*w,t[1]=(f*u*i-p*m*i-f*r*h+n*m*h+p*r*_-n*u*_)*w,t[2]=(s*m*i-f*a*i+f*r*c-n*m*c-s*r*_+n*a*_)*w,t[3]=(p*a*i-s*u*i-p*r*c+n*u*c+s*r*h-n*a*h)*w,t[4]=g*w,t[5]=(l*m*i-d*u*i+d*r*h-e*m*h-l*r*_+e*u*_)*w,t[6]=(d*a*i-o*m*i-d*r*c+e*m*c+o*r*_-e*a*_)*w,t[7]=(o*u*i-l*a*i+l*r*c-e*u*c-o*r*h+e*a*h)*w,t[8]=b*w,t[9]=(d*p*i-l*f*i-d*n*h+e*f*h+l*n*_-e*p*_)*w,t[10]=(o*f*i-d*s*i+d*n*c-e*f*c-o*n*_+e*s*_)*w,t[11]=(l*s*i-o*p*i-l*n*c+e*p*c+o*n*h-e*s*h)*w,t[12]=v*w,t[13]=(l*f*r-d*p*r+d*n*u-e*f*u-l*n*m+e*p*m)*w,t[14]=(d*s*r-o*f*r-d*n*a+e*f*a+o*n*m-e*s*m)*w,t[15]=(o*p*r-l*s*r+l*n*a-e*p*a-o*n*u+e*s*u)*w,this}scale(t){const e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),i=1-n,o=t.x,s=t.y,a=t.z,c=i*o,l=i*s;return this.set(c*o+n,c*s-r*a,c*a+r*s,0,c*s+r*a,l*s+n,l*a-r*o,0,c*a-r*s,l*a+r*o,i*a*a+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,i=e._x,o=e._y,s=e._z,a=e._w,c=i+i,l=o+o,p=s+s,u=i*c,h=i*l,d=i*p,f=o*l,m=o*p,_=s*p,y=a*c,g=a*l,b=a*p,v=n.x,x=n.y,w=n.z;return r[0]=(1-(f+_))*v,r[1]=(h+b)*v,r[2]=(d-g)*v,r[3]=0,r[4]=(h-b)*x,r[5]=(1-(u+_))*x,r[6]=(m+y)*x,r[7]=0,r[8]=(d+g)*w,r[9]=(m-y)*w,r[10]=(1-(u+f))*w,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let i=Nr.set(r[0],r[1],r[2]).length();const o=Nr.set(r[4],r[5],r[6]).length(),s=Nr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),t.x=r[12],t.y=r[13],t.z=r[14],Hr.copy(this);const a=1/i,c=1/o,l=1/s;return Hr.elements[0]*=a,Hr.elements[1]*=a,Hr.elements[2]*=a,Hr.elements[4]*=c,Hr.elements[5]*=c,Hr.elements[6]*=c,Hr.elements[8]*=l,Hr.elements[9]*=l,Hr.elements[10]*=l,e.setFromRotationMatrix(Hr),n.x=i,n.y=o,n.z=s,this}makePerspective(t,e,n,r,i,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,a=2*i/(e-t),c=2*i/(n-r),l=(e+t)/(e-t),p=(n+r)/(n-r),u=-(o+i)/(o-i),h=-2*o*i/(o-i);return s[0]=a,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=p,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=h,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,r,i,o){const s=this.elements,a=1/(e-t),c=1/(n-r),l=1/(o-i),p=(e+t)*a,u=(n+r)*c,h=(o+i)*l;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-p,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-h,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Fr.prototype.isMatrix4=!0;const Nr=new ar,Hr=new Fr,Gr=new ar(0,0,0),Ur=new ar(1,1,1),kr=new ar,Vr=new ar,Wr=new ar,qr=new Fr,Yr=new sr;class Xr{constructor(t=0,e=0,n=0,r=Xr.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const r=t.elements,i=r[0],o=r[4],s=r[8],a=r[1],c=r[5],l=r[9],p=r[2],u=r[6],h=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(kn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,h),this._z=Math.atan2(-o,i)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-kn(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(s,h),this._z=Math.atan2(a,c)):(this._y=Math.atan2(-p,i),this._z=0);break;case"ZXY":this._x=Math.asin(kn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-p,h),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(a,i));break;case"ZYX":this._y=Math.asin(-kn(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(u,h),this._z=Math.atan2(a,i)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(kn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-p,i)):(this._x=0,this._y=Math.atan2(s,h));break;case"XZY":this._z=Math.asin(-kn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(s,i)):(this._x=Math.atan2(-l,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return qr.makeRotationFromQuaternion(t),this.setFromRotationMatrix(qr,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return Yr.setFromEuler(this),this.setFromQuaternion(Yr,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new ar(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Xr.prototype.isEuler=!0,Xr.DefaultOrder="XYZ",Xr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Zr{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Jr=0;const Qr=new ar,Kr=new sr,$r=new Fr,ti=new ar,ei=new ar,ni=new ar,ri=new sr,ii=new ar(1,0,0),oi=new ar(0,1,0),si=new ar(0,0,1),ai={type:"added"},ci={type:"removed"},li=new ar(0,0,0),pi=new sr,ui=new ar(1,1,1),hi=new Fr;hi.identity();class di extends Bn{constructor(){super(),Object.defineProperty(this,"id",{value:Jr++}),this.uuid=Un(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=di.DefaultUp.clone();const t=new ar,e=new Xr,n=new sr,r=new ar(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Fr},normalMatrix:{value:new Qn}}),this.matrix=new Fr,this.matrixWorld=new Fr,this.matrixAutoUpdate=di.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Zr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale),this._handleMatrixModification(this)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Kr.setFromAxisAngle(t,e),this.quaternion.multiply(Kr),this}rotateOnWorldAxis(t,e){return Kr.setFromAxisAngle(t,e),this.quaternion.premultiply(Kr),this}rotateX(t){return this.rotateOnAxis(ii,t)}rotateY(t){return this.rotateOnAxis(oi,t)}rotateZ(t){return this.rotateOnAxis(si,t)}translateOnAxis(t,e){return Qr.copy(t).applyQuaternion(this.quaternion),this.position.add(Qr.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ii,t)}translateY(t){return this.translateOnAxis(oi,t)}translateZ(t){return this.translateOnAxis(si,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4($r.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ti.copy(t):ti.set(t,e,n);const r=this.parent;r&&r.updateMatrices(),this.updateMatrices(),ei.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$r.lookAt(ei,ti,this.up):$r.lookAt(ti,ei,this.up),this.quaternion.setFromRotationMatrix($r),r&&($r.extractRotation(r.matrixWorld),Kr.setFromRotationMatrix($r),this.quaternion.premultiply(Kr.invert())),this.matrixNeedsUpdate=!0}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can\'t be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ai)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ci)),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(ci)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),$r.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),$r.multiply(t.parent.matrixWorld)),t.applyMatrix4($r),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(t,e);if(void 0!==r)return r}}getWorldPosition(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new ar),this.updateMatrices(),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new sr),this.updateMatrices(),this.matrixWorld.decompose(ei,t,ni),t}getWorldScale(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new ar),this.updateMatrices(),this.matrixWorld.decompose(ei,ri,t),t}getWorldDirection(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new ar),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}_handleMatrixModification(){this.matrixIsModified||(this.matrixIsModified=!0,this.cachedMatrixWorld&&(this.cachedMatrixWorld.copy(this.matrixWorld),this.matrixWorld=this.cachedMatrixWorld))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0,this._handleMatrixModification(this)}updateMatrixWorld(t,e){if(!this.visible&&!e)return;this.updateMatrices(!1,t,!0);const n=this.children,r=this.childrenNeedMatrixWorldUpdate||t;for(let t=0,i=n.length;t<i;t++)n[t].updateMatrixWorld(r,e);this.childrenNeedMatrixWorldUpdate&&(this.childrenNeedMatrixWorldUpdate=!1)}updateWorldMatrix(t,e){if(this.updateMatrices(!1,!1,!t),e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateMatrixWorld(!1,!1);this.childrenNeedMatrixWorldUpdate&&(this.childrenNeedMatrixWorldUpdate=!1)}}updateMatrices(t,e,n){this.hasHadFirstMatrixUpdate?(this.matrixNeedsUpdate||this.matrixAutoUpdate||t)&&(this.updateMatrix(),this.matrixNeedsUpdate&&(this.matrixNeedsUpdate=!1)):(this.position.equals(li)&&this.quaternion.equals(pi)&&this.scale.equals(ui)&&this.matrix.equals(hi)||this.updateMatrix(),this.hasHadFirstMatrixUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.cachedMatrixWorld=this.matrixWorld),!n&&this.parent&&(this.parent.updateMatrices(!1,e,!1),this.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate||this.parent.childrenNeedMatrixWorldUpdate),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixIsModified?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld=this.parent.matrixWorld,this.childrenNeedMatrixWorldUpdate=!0,this.matrixWorldNeedsUpdate=!1)}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];i(t.shapes,r)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(i(t.materials,this.material[n]));r.material=e}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(i(t.animations,n))}}if(e){const e=o(t.geometries),r=o(t.materials),i=o(t.textures),s=o(t.images),a=o(t.shapes),c=o(t.skeletons),l=o(t.animations);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),s.length>0&&(n.images=s),a.length>0&&(n.shapes=a),c.length>0&&(n.skeletons=c),l.length>0&&(n.animations=l)}return n.object=r,n;function o(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}di.DefaultUp=new ar(0,1,0),di.DefaultMatrixAutoUpdate=!0,di.prototype.isObject3D=!0;const fi=new ar,mi=new ar,_i=new Qn;class yi{constructor(t=new ar(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=fi.subVectors(n,e).cross(mi.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new ar),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new ar);const n=t.delta(fi),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const i=-(t.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:e.copy(n).multiplyScalar(i).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new ar),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||_i.getNormalMatrix(t),r=this.coplanarPoint(fi).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}yi.prototype.isPlane=!0;const gi=new ar,bi=new ar,vi=new ar,xi=new ar,wi=new ar,Si=new ar,Mi=new ar,Ti=new ar,Ci=new ar,zi=new ar;class Ai{constructor(t=new ar,e=new ar,n=new ar){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new ar),r.subVectors(n,e),gi.subVectors(t,e),r.cross(gi);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,n,r,i){gi.subVectors(r,e),bi.subVectors(n,e),vi.subVectors(t,e);const o=gi.dot(gi),s=gi.dot(bi),a=gi.dot(vi),c=bi.dot(bi),l=bi.dot(vi),p=o*c-s*s;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new ar),0===p)return i.set(-2,-1,-1);const u=1/p,h=(c*a-s*l)*u,d=(o*l-s*a)*u;return i.set(1-h-d,d,h)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,xi),xi.x>=0&&xi.y>=0&&xi.x+xi.y<=1}static getUV(t,e,n,r,i,o,s,a){return this.getBarycoord(t,e,n,r,xi),a.set(0,0),a.addScaledVector(i,xi.x),a.addScaledVector(o,xi.y),a.addScaledVector(s,xi.z),a}static isFrontFacing(t,e,n,r){return gi.subVectors(n,e),bi.subVectors(t,e),gi.cross(bi).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return gi.subVectors(this.c,this.b),bi.subVectors(this.a,this.b),.5*gi.cross(bi).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new ar),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Ai.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new yi),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Ai.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,i){return Ai.getUV(t,this.a,this.b,this.c,e,n,r,i)}containsPoint(t){return Ai.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Ai.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new ar);const n=this.a,r=this.b,i=this.c;let o,s;wi.subVectors(r,n),Si.subVectors(i,n),Ti.subVectors(t,n);const a=wi.dot(Ti),c=Si.dot(Ti);if(a<=0&&c<=0)return e.copy(n);Ci.subVectors(t,r);const l=wi.dot(Ci),p=Si.dot(Ci);if(l>=0&&p<=l)return e.copy(r);const u=a*p-l*c;if(u<=0&&a>=0&&l<=0)return o=a/(a-l),e.copy(n).addScaledVector(wi,o);zi.subVectors(t,i);const h=wi.dot(zi),d=Si.dot(zi);if(d>=0&&h<=d)return e.copy(i);const f=h*c-a*d;if(f<=0&&c>=0&&d<=0)return s=c/(c-d),e.copy(n).addScaledVector(Si,s);const m=l*d-h*p;if(m<=0&&p-l>=0&&h-d>=0)return Mi.subVectors(i,r),s=(p-l)/(p-l+(h-d)),e.copy(r).addScaledVector(Mi,s);const _=1/(m+f+u);return o=f*_,s=u*_,e.copy(n).addScaledVector(wi,o).addScaledVector(Si,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Ei=0;function Li(){Object.defineProperty(this,"id",{value:Ei++}),this.uuid=Un(),this.name="",this.type="Material",this.fog=!0,this.blending=v,this.side=f,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=I,this.blendDst=O,this.blendEquation=T,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=V,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Tn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=un,this.stencilZFail=un,this.stencilZPass=un,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Li.prototype=Object.assign(Object.create(Bn.prototype),{constructor:Li,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: \'"+e+"\' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===y;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": \'"+e+"\' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==v&&(n.blending=this.blending),this.side!==f&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=r(t.textures),i=r(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Li.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const Pi={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ri={h:0,s:0,l:0},Di={h:0,s:0,l:0};function Ii(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function Oi(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function ji(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Bi{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=Vn(t,1),e=kn(e,0,1),n=kn(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,i=2*n-r;this.r=Ii(i,r,t+1/3),this.g=Ii(i,r,t),this.b=Ii(i,r,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(t)){let t;const r=n[1],i=n[2];switch(r){case"rgb":case"rgba":if(t=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(i)){const n=parseFloat(t[1])/360,r=parseInt(t[2],10)/100,i=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,r,i)}}}else if(n=/^\\#([A-Fa-f\\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Pi[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Oi(t.r),this.g=Oi(t.g),this.b=Oi(t.b),this}copyLinearToSRGB(t){return this.r=ji(t.r),this.g=ji(t.g),this.b=ji(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,r=this.b,i=Math.max(e,n,r),o=Math.min(e,n,r);let s,a;const c=(o+i)/2;if(o===i)s=0,a=0;else{const t=i-o;switch(a=c<=.5?t/(i+o):t/(2-i-o),i){case e:s=(n-r)/t+(n<r?6:0);break;case n:s=(r-e)/t+2;break;case r:s=(e-n)/t+4}s/=6}return t.h=s,t.s=a,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(Ri),Ri.h+=t,Ri.s+=e,Ri.l+=n,this.setHSL(Ri.h,Ri.s,Ri.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Ri),t.getHSL(Di);const n=Wn(Ri.h,Di.h,e),r=Wn(Ri.s,Di.s,e),i=Wn(Ri.l,Di.l,e);return this.setHSL(n,r,i),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Bi.NAMES=Pi,Bi.prototype.isColor=!0,Bi.prototype.r=1,Bi.prototype.g=1,Bi.prototype.b=1;class Fi extends Li{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Bi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}Fi.prototype.isMeshBasicMaterial=!0;const Ni=new ar,Hi=new Jn;class Gi{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=Cn,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new Bi),e[n++]=i.r,e[n++]=i.g,e[n++]=i.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new Jn),e[n++]=i.x,e[n++]=i.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new ar),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new rr),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z,e[n++]=i.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Hi.fromBufferAttribute(this,e),Hi.applyMatrix3(t),this.setXY(e,Hi.x,Hi.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ni.fromBufferAttribute(this,e),Ni.applyMatrix3(t),this.setXYZ(e,Ni.x,Ni.y,Ni.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Ni.x=this.getX(e),Ni.y=this.getY(e),Ni.z=this.getZ(e),Ni.applyMatrix4(t),this.setXYZ(e,Ni.x,Ni.y,Ni.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ni.x=this.getX(e),Ni.y=this.getY(e),Ni.z=this.getZ(e),Ni.applyNormalMatrix(t),this.setXYZ(e,Ni.x,Ni.y,Ni.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ni.x=this.getX(e),Ni.y=this.getY(e),Ni.z=this.getZ(e),Ni.transformDirection(t),this.setXYZ(e,Ni.x,Ni.y,Ni.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==Cn&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}Gi.prototype.isBufferAttribute=!0;class Ui extends Gi{constructor(t,e,n){super(new Int8Array(t),e,n)}}class ki extends Gi{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class Vi extends Gi{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class Wi extends Gi{constructor(t,e,n){super(new Int16Array(t),e,n)}}class qi extends Gi{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Yi extends Gi{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Xi extends Gi{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Zi extends Gi{constructor(t,e,n){super(new Uint16Array(t),e,n)}}Zi.prototype.isFloat16BufferAttribute=!0;class Ji extends Gi{constructor(t,e,n){super(new Float32Array(t),e,n)}}class Qi extends Gi{constructor(t,e,n){super(new Float64Array(t),e,n)}}function Ki(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e}const $i={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function to(t,e){return new $i[t](e)}let eo=0;const no=new Fr,ro=new di,io=new ar,oo=new pr,so=new pr,ao=new ar;class co extends Bn{constructor(){super(),Object.defineProperty(this,"id",{value:eo++}),this.uuid=Un(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ki(t)>65535?Xi:qi)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Qn).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(t){return no.makeRotationX(t),this.applyMatrix4(no),this}rotateY(t){return no.makeRotationY(t),this.applyMatrix4(no),this}rotateZ(t){return no.makeRotationZ(t),this.applyMatrix4(no),this}translate(t,e,n){return no.makeTranslation(t,e,n),this.applyMatrix4(no),this}scale(t,e,n){return no.makeScale(t,e,n),this.applyMatrix4(no),this}lookAt(t){return ro.lookAt(t),ro.updateMatrix(),this.applyMatrix4(ro.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(io).negate(),this.translate(io.x,io.y,io.z),this}setFromPoints(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Ji(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new pr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error(\'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".\',this),void this.boundingBox.set(new ar(-1/0,-1/0,-1/0),new ar(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];oo.setFromBufferAttribute(n),this.morphTargetsRelative?(ao.addVectors(this.boundingBox.min,oo.min),this.boundingBox.expandByPoint(ao),ao.addVectors(this.boundingBox.max,oo.max),this.boundingBox.expandByPoint(ao)):(this.boundingBox.expandByPoint(oo.min),this.boundingBox.expandByPoint(oo.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error(\'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.\',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Er);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error(\'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".\',this),void this.boundingSphere.set(new ar,1/0);if(t){const n=this.boundingSphere.center;if(oo.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];so.setFromBufferAttribute(n),this.morphTargetsRelative?(ao.addVectors(oo.min,so.min),oo.expandByPoint(ao),ao.addVectors(oo.max,so.max),oo.expandByPoint(ao)):(oo.expandByPoint(so.min),oo.expandByPoint(so.max))}oo.getCenter(n);let r=0;for(let e=0,i=t.count;e<i;e++)ao.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(ao));if(e)for(let i=0,o=e.length;i<o;i++){const o=e[i],s=this.morphTargetsRelative;for(let e=0,i=o.count;e<i;e++)ao.fromBufferAttribute(o,e),s&&(io.fromBufferAttribute(t,e),ao.add(io)),r=Math.max(r,n.distanceToSquared(ao))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error(\'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.\',this)}}computeFaceNormals(){}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,i=e.normal.array,o=e.uv.array,s=r.length/3;void 0===e.tangent&&this.setAttribute("tangent",new Gi(new Float32Array(4*s),4));const a=e.tangent.array,c=[],l=[];for(let t=0;t<s;t++)c[t]=new ar,l[t]=new ar;const p=new ar,u=new ar,h=new ar,d=new Jn,f=new Jn,m=new Jn,_=new ar,y=new ar;function g(t,e,n){p.fromArray(r,3*t),u.fromArray(r,3*e),h.fromArray(r,3*n),d.fromArray(o,2*t),f.fromArray(o,2*e),m.fromArray(o,2*n),u.sub(p),h.sub(p),f.sub(d),m.sub(d);const i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(_.copy(u).multiplyScalar(m.y).addScaledVector(h,-f.y).multiplyScalar(i),y.copy(h).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(i),c[t].add(_),c[e].add(_),c[n].add(_),l[t].add(y),l[e].add(y),l[n].add(y))}let b=this.groups;0===b.length&&(b=[{start:0,count:n.length}]);for(let t=0,e=b.length;t<e;++t){const e=b[t],r=e.start;for(let t=r,i=r+e.count;t<i;t+=3)g(n[t+0],n[t+1],n[t+2])}const v=new ar,x=new ar,w=new ar,S=new ar;function M(t){w.fromArray(i,3*t),S.copy(w);const e=c[t];v.copy(e),v.sub(w.multiplyScalar(w.dot(e))).normalize(),x.crossVectors(S,e);const n=x.dot(l[t])<0?-1:1;a[4*t]=v.x,a[4*t+1]=v.y,a[4*t+2]=v.z,a[4*t+3]=n}for(let t=0,e=b.length;t<e;++t){const e=b[t],r=e.start;for(let t=r,i=r+e.count;t<i;t+=3)M(n[t+0]),M(n[t+1]),M(n[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Gi(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new ar,i=new ar,o=new ar,s=new ar,a=new ar,c=new ar,l=new ar,p=new ar;if(t)for(let u=0,h=t.count;u<h;u+=3){const h=t.getX(u+0),d=t.getX(u+1),f=t.getX(u+2);r.fromBufferAttribute(e,h),i.fromBufferAttribute(e,d),o.fromBufferAttribute(e,f),l.subVectors(o,i),p.subVectors(r,i),l.cross(p),s.fromBufferAttribute(n,h),a.fromBufferAttribute(n,d),c.fromBufferAttribute(n,f),s.add(l),a.add(l),c.add(l),n.setXYZ(h,s.x,s.y,s.z),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let t=0,s=e.count;t<s;t+=3)r.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),o.fromBufferAttribute(e,t+2),l.subVectors(o,i),p.subVectors(r,i),l.cross(p),n.setXYZ(t+0,l.x,l.y,l.z),n.setXYZ(t+1,l.x,l.y,l.z),n.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const i=n[r].array,o=t.attributes[r],s=o.array,a=o.itemSize*e,c=Math.min(s.length,i.length-a);for(let t=0,e=a;t<c;t++,e++)i[e]=s[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ao.fromBufferAttribute(t,e),ao.normalize(),t.setXYZ(e,ao.x,ao.y,ao.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,i=t.normalized,o=new n.constructor(e.length*r);let s=0,a=0;for(let t=0,i=e.length;t<i;t++){s=e[t]*r;for(let t=0;t<r;t++)o[a++]=n[s++]}return new Gi(o,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new co,n=this.index.array,r=this.attributes;for(const i in r){const o=t(r[i],n);e.setAttribute(i,o)}const i=this.morphAttributes;for(const r in i){const o=[],s=i[r];for(let e=0,r=s.length;e<r;e++){const r=t(s[e],n);o.push(r)}e.morphAttributes[r]=o}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let t=0,n=o.length;t<n;t++){const n=o[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const r=n[e];t.data.attributes[e]=r.toJSON(t.data)}const r={};let i=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],o=[];for(let e=0,r=n.length;e<r;e++){const r=n[e];o.push(r.toJSON(t.data))}o.length>0&&(r[e]=o,i=!0)}i&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new co).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const r=t.attributes;for(const t in r){const n=r[t];this.setAttribute(t,n.clone(e))}const i=t.morphAttributes;for(const t in i){const n=[],r=i[t];for(let t=0,i=r.length;t<i;t++)n.push(r[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let t=0,e=o.length;t<e;t++){const e=o[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}co.prototype.isBufferGeometry=!0;const lo=new Fr,po=new Br,uo=new Er,ho=new ar,fo=new ar,mo=new ar,_o=new ar,yo=new ar,go=new ar,bo=new ar,vo=new ar,xo=new ar,wo=new Jn,So=new Jn,Mo=new Jn,To=new ar,Co=new ar;class zo extends di{constructor(t=new co,e=new Fi){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),uo.copy(n.boundingSphere),uo.applyMatrix4(i),!1===t.ray.intersectsSphere(uo))return;if(lo.copy(i).invert(),po.copy(t.ray).applyMatrix4(lo),null!==n.boundingBox&&!1===po.intersectsBox(n.boundingBox))return;let o;if(n.isBufferGeometry){const i=n.index,s=n.attributes.position,a=n.morphAttributes.position,c=n.morphTargetsRelative,l=n.attributes.uv,p=n.attributes.uv2,u=n.groups,h=n.drawRange;if(null!==i)if(Array.isArray(r))for(let n=0,d=u.length;n<d;n++){const d=u[n],f=r[d.materialIndex];for(let n=Math.max(d.start,h.start),r=Math.min(d.start+d.count,h.start+h.count);n<r;n+=3){const r=i.getX(n),u=i.getX(n+1),h=i.getX(n+2);o=Ao(this,f,t,po,s,a,c,l,p,r,u,h),o&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=d.materialIndex,e.push(o))}}else{for(let n=Math.max(0,h.start),u=Math.min(i.count,h.start+h.count);n<u;n+=3){const u=i.getX(n),h=i.getX(n+1),d=i.getX(n+2);o=Ao(this,r,t,po,s,a,c,l,p,u,h,d),o&&(o.faceIndex=Math.floor(n/3),e.push(o))}}else if(void 0!==s)if(Array.isArray(r))for(let n=0,i=u.length;n<i;n++){const i=u[n],d=r[i.materialIndex];for(let n=Math.max(i.start,h.start),r=Math.min(i.start+i.count,h.start+h.count);n<r;n+=3){o=Ao(this,d,t,po,s,a,c,l,p,n,n+1,n+2),o&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=i.materialIndex,e.push(o))}}else{for(let n=Math.max(0,h.start),i=Math.min(s.count,h.start+h.count);n<i;n+=3){o=Ao(this,r,t,po,s,a,c,l,p,n,n+1,n+2),o&&(o.faceIndex=Math.floor(n/3),e.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Ao(t,e,n,r,i,o,s,a,c,l,p,u){ho.fromBufferAttribute(i,l),fo.fromBufferAttribute(i,p),mo.fromBufferAttribute(i,u);const h=t.morphTargetInfluences;if(e.morphTargets&&o&&h){bo.set(0,0,0),vo.set(0,0,0),xo.set(0,0,0);for(let t=0,e=o.length;t<e;t++){const e=h[t],n=o[t];0!==e&&(_o.fromBufferAttribute(n,l),yo.fromBufferAttribute(n,p),go.fromBufferAttribute(n,u),s?(bo.addScaledVector(_o,e),vo.addScaledVector(yo,e),xo.addScaledVector(go,e)):(bo.addScaledVector(_o.sub(ho),e),vo.addScaledVector(yo.sub(fo),e),xo.addScaledVector(go.sub(mo),e)))}ho.add(bo),fo.add(vo),mo.add(xo)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(l,ho),t.boneTransform(p,fo),t.boneTransform(u,mo));const d=function(t,e,n,r,i,o,s,a){let c;if(c=e.side===m?r.intersectTriangle(s,o,i,!0,a):r.intersectTriangle(i,o,s,e.side!==_,a),null===c)return null;Co.copy(a),Co.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(Co);return l<n.near||l>n.far?null:{distance:l,point:Co.clone(),object:t}}(t,e,n,r,ho,fo,mo,To);if(d){a&&(wo.fromBufferAttribute(a,l),So.fromBufferAttribute(a,p),Mo.fromBufferAttribute(a,u),d.uv=Ai.getUV(To,ho,fo,mo,wo,So,Mo,new Jn)),c&&(wo.fromBufferAttribute(c,l),So.fromBufferAttribute(c,p),Mo.fromBufferAttribute(c,u),d.uv2=Ai.getUV(To,ho,fo,mo,wo,So,Mo,new Jn));const t={a:l,b:p,c:u,normal:new ar,materialIndex:0};Ai.getNormal(ho,fo,mo,t.normal),d.face=t}return d}zo.prototype.isMesh=!0;class Eo extends co{constructor(t=1,e=1,n=1,r=1,i=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:o};const s=this;r=Math.floor(r),i=Math.floor(i),o=Math.floor(o);const a=[],c=[],l=[],p=[];let u=0,h=0;function d(t,e,n,r,i,o,d,f,m,_,y){const g=o/m,b=d/_,v=o/2,x=d/2,w=f/2,S=m+1,M=_+1;let T=0,C=0;const z=new ar;for(let o=0;o<M;o++){const s=o*b-x;for(let a=0;a<S;a++){const u=a*g-v;z[t]=u*r,z[e]=s*i,z[n]=w,c.push(z.x,z.y,z.z),z[t]=0,z[e]=0,z[n]=f>0?1:-1,l.push(z.x,z.y,z.z),p.push(a/m),p.push(1-o/_),T+=1}}for(let t=0;t<_;t++)for(let e=0;e<m;e++){const n=u+e+S*t,r=u+e+S*(t+1),i=u+(e+1)+S*(t+1),o=u+(e+1)+S*t;a.push(n,r,o),a.push(r,i,o),C+=6}s.addGroup(h,C,y),h+=C,u+=T}d("z","y","x",-1,-1,n,e,t,o,i,0),d("z","y","x",1,-1,n,e,-t,o,i,1),d("x","z","y",1,1,t,n,e,r,o,2),d("x","z","y",1,-1,t,n,-e,r,o,3),d("x","y","z",1,-1,t,e,n,r,i,4),d("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(a),this.setAttribute("position",new Ji(c,3)),this.setAttribute("normal",new Ji(l,3)),this.setAttribute("uv",new Ji(p,2))}}function Lo(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}}return e}function Po(t){const e={};for(let n=0;n<t.length;n++){const r=Lo(t[n]);for(const t in r)e[t]=r[t]}return e}const Ro={clone:Lo,merge:Po};class Do extends Li{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}",this.fragmentShader="void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Lo(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?e.uniforms[n]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[n]={type:"m4",value:r.toArray()}:e.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}Do.prototype.isShaderMaterial=!0;class Io extends di{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Fr,this.projectionMatrix=new Fr,this.projectionMatrixInverse=new Fr}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new ar),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Io.prototype.isCamera=!0;class Oo extends Io{constructor(t=50,e=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Gn*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Hn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Gn*Math.atan(Math.tan(.5*Hn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,i,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Hn*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r;const o=this.view;if(null!==this.view&&this.view.enabled){const t=o.fullWidth,s=o.fullHeight;i+=o.offsetX*r/t,e-=o.offsetY*n/s,r*=o.width/t,n*=o.height/s}const s=this.filmOffset;0!==s&&(i+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}Oo.prototype.isPerspectiveCamera=!0;class jo extends di{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new Oo(90,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ar(1,0,0)),this.add(r);const i=new Oo(90,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new ar(-1,0,0)),this.add(i);const o=new Oo(90,1,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new ar(0,1,0)),this.add(o);const s=new Oo(90,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new ar(0,-1,0)),this.add(s);const a=new Oo(90,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new ar(0,0,1)),this.add(a);const c=new Oo(90,1,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new ar(0,0,-1)),this.add(c)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,i,o,s,a,c]=this.children,l=t.xr.enabled,p=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,i),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,a),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(p),t.xr.enabled=l}}class Bo extends er{constructor(t,e,n,r,i,o,s,a,c,l){super(t=void 0!==t?t:[],e=void 0!==e?e:st,n,r,i,o,s=void 0!==s?s:Ft,a,c,l),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Bo.prototype.isCubeTexture=!0;class Fo extends ir{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new Bo(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:vt,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Nt,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\t\\t\\t\\t\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\n\\t\\t\\t\\t\\t#include <begin_vertex>\\n\\t\\t\\t\\t\\t#include <project_vertex>\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t",fragmentShader:`\\n\\n\\t\\t\\t\\tuniform sampler2D tEquirect;\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\t#include <common>\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvec3 direction = normalize( vWorldDirection );\\n\\n\\t\\t\\t\\t\\tvec2 sampleUV = equirectUv( direction );\\n\\t\\t\\t\\t\\t${e.flipY?"":"sampleUV.y = 1.0 - sampleUV.y;"}\\n\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t`},r=new Eo(5,5,5),i=new Do({name:"CubemapFromEquirect",uniforms:Lo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:m,blending:b});i.uniforms.tEquirect.value=e;const o=new zo(r,i),s=e.minFilter;return e.minFilter===St&&(e.minFilter=vt),new jo(1,10,this).update(t,o),e.minFilter=s,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,r){const i=t.getRenderTarget();for(let i=0;i<6;i++)t.setRenderTarget(this,i),t.clear(e,n,r);t.setRenderTarget(i)}}Fo.prototype.isWebGLCubeRenderTarget=!0;class No extends er{constructor(t,e,n,r,i,o,s,a,c,l,p,u){super(null,o,s,a,c,l,r,i,p,u),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==c?c:mt,this.minFilter=void 0!==l?l:mt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}No.prototype.isDataTexture=!0;const Ho=new Er,Go=new ar;class Uo{constructor(t=new yi,e=new yi,n=new yi,r=new yi,i=new yi,o=new yi){this.planes=[t,e,n,r,i,o]}set(t,e,n,r,i,o){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],i=n[1],o=n[2],s=n[3],a=n[4],c=n[5],l=n[6],p=n[7],u=n[8],h=n[9],d=n[10],f=n[11],m=n[12],_=n[13],y=n[14],g=n[15];return e[0].setComponents(s-r,p-a,f-u,g-m).normalize(),e[1].setComponents(s+r,p+a,f+u,g+m).normalize(),e[2].setComponents(s+i,p+c,f+h,g+_).normalize(),e[3].setComponents(s-i,p-c,f-h,g-_).normalize(),e[4].setComponents(s-o,p-l,f-d,g-y).normalize(),e[5].setComponents(s+o,p+l,f+d,g+y).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Ho.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Ho)}intersectsSprite(t){return Ho.center.set(0,0,0),Ho.radius=.7071067811865476,Ho.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ho)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<r)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(Go.x=r.normal.x>0?t.max.x:t.min.x,Go.y=r.normal.y>0?t.max.y:t.min.y,Go.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Go)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function ko(){let t=null,e=!1,n=null,r=null;function i(e,o){n(e,o),r=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Vo(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=r.get(e);n&&(t.deleteBuffer(n.buffer),r.delete(e))},update:function(e,i){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const o=r.get(e);void 0===o?r.set(e,function(e,r){const i=e.array,o=e.usage,s=t.createBuffer();t.bindBuffer(r,s),t.bufferData(r,i,o),e.onUploadCallback();let a=5126;return i instanceof Float32Array?a=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?e.isFloat16BufferAttribute?n?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:i instanceof Int16Array?a=5122:i instanceof Uint32Array?a=5125:i instanceof Int32Array?a=5124:i instanceof Int8Array?a=5120:i instanceof Uint8Array&&(a=5121),{buffer:s,type:a,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(e,i)):o.version<e.version&&(!function(e,r,i){const o=r.array,s=r.updateRange;t.bindBuffer(i,e),-1===s.count?t.bufferSubData(i,0,o):(n?t.bufferSubData(i,s.offset*o.BYTES_PER_ELEMENT,o,s.offset,s.count):t.bufferSubData(i,s.offset*o.BYTES_PER_ELEMENT,o.subarray(s.offset,s.offset+s.count)),s.count=-1)}(o.buffer,e,i),o.version=e.version)}}}class Wo extends co{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const i=t/2,o=e/2,s=Math.floor(n),a=Math.floor(r),c=s+1,l=a+1,p=t/s,u=e/a,h=[],d=[],f=[],m=[];for(let t=0;t<l;t++){const e=t*u-o;for(let n=0;n<c;n++){const r=n*p-i;d.push(r,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<s;e++){const n=e+c*t,r=e+c*(t+1),i=e+1+c*(t+1),o=e+1+c*t;h.push(n,r,o),h.push(r,i,o)}this.setIndex(h),this.setAttribute("position",new Ji(d,3)),this.setAttribute("normal",new Ji(f,3)),this.setAttribute("uv",new Ji(m,2))}}const qo={alphamap_fragment:"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif",alphatest_fragment:"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif",aomap_fragment:"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif",common:"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}",envmap_fragment:"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif",fog_vertex:"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif",fog_pars_vertex:"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif",fog_fragment:"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif",fog_pars_fragment:"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif",lights_pars_begin:"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif",lights_toon_fragment:"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)",lights_physical_fragment:"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}",lights_fragment_begin:"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV ) && !defined(USE_LIGHTMAP)\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif",map_fragment:"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif",map_pars_fragment:"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif",dithering_pars_fragment:"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}",skinbase_vertex:"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif",skinning_vertex:"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif",specularmap_fragment:"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif",tonemapping_pars_fragment:"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\n#ifdef LUT_TONE_MAPPING\\n\\tprecision highp sampler3D;\\n\\tuniform sampler3D tonemappingLUT;\\n\\tvec3 LUTToneMapping( vec3 color ) {\\n\\t\\tcolor *= toneMappingExposure;\\n\\t\\tfloat lutSize = 32.0;\\n\\t\\tfloat pixelWidth = 1.0 / lutSize;\\n\\t\\tfloat halfPixelWidth = 0.5 / lutSize;\\n\\t\\tvec3 uvw = vec3( halfPixelWidth ) + color.rgb * ( 1.0 - pixelWidth );\\n\\t\\treturn texture( tonemappingLUT, uvw ).rgb;\\n\\t}\\n#endif\\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif",uv_pars_vertex:"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif",uv_vertex:"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif",background_frag:"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}",background_vert:"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}",cube_frag:"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}",cube_vert:"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}",depth_frag:"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}",depth_vert:"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}",distanceRGBA_frag:"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}",distanceRGBA_vert:"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}",equirect_frag:"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}",equirect_vert:"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}",linedashed_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}",linedashed_vert:"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}",meshbasic_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}",meshbasic_vert:"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}",meshlambert_frag:"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}",meshlambert_vert:"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}",meshmatcap_frag:"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}",meshmatcap_vert:"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}",meshtoon_frag:"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}",meshtoon_vert:"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}",meshphong_frag:"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}",meshphong_vert:"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}",meshphysical_frag:"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}",meshphysical_vert:"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}",normal_frag:"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}",normal_vert:"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}",points_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}",points_vert:"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}",shadow_frag:"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}",shadow_vert:"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}",sprite_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}",sprite_vert:"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}"},Yo={common:{diffuse:{value:new Bi(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Qn},uv2Transform:{value:new Qn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Jn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Bi(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Bi(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Qn}},sprite:{diffuse:{value:new Bi(15658734)},opacity:{value:1},center:{value:new Jn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Qn}}},Xo={basic:{uniforms:Po([Yo.common,Yo.specularmap,Yo.envmap,Yo.aomap,Yo.lightmap,Yo.fog]),vertexShader:qo.meshbasic_vert,fragmentShader:qo.meshbasic_frag},lambert:{uniforms:Po([Yo.common,Yo.specularmap,Yo.envmap,Yo.aomap,Yo.lightmap,Yo.emissivemap,Yo.fog,Yo.lights,{emissive:{value:new Bi(0)}}]),vertexShader:qo.meshlambert_vert,fragmentShader:qo.meshlambert_frag},phong:{uniforms:Po([Yo.common,Yo.specularmap,Yo.envmap,Yo.aomap,Yo.lightmap,Yo.emissivemap,Yo.bumpmap,Yo.normalmap,Yo.displacementmap,Yo.fog,Yo.lights,{emissive:{value:new Bi(0)},specular:{value:new Bi(1118481)},shininess:{value:30}}]),vertexShader:qo.meshphong_vert,fragmentShader:qo.meshphong_frag},standard:{uniforms:Po([Yo.common,Yo.envmap,Yo.aomap,Yo.lightmap,Yo.emissivemap,Yo.bumpmap,Yo.normalmap,Yo.displacementmap,Yo.roughnessmap,Yo.metalnessmap,Yo.fog,Yo.lights,{emissive:{value:new Bi(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:qo.meshphysical_vert,fragmentShader:qo.meshphysical_frag},toon:{uniforms:Po([Yo.common,Yo.aomap,Yo.lightmap,Yo.emissivemap,Yo.bumpmap,Yo.normalmap,Yo.displacementmap,Yo.gradientmap,Yo.fog,Yo.lights,{emissive:{value:new Bi(0)}}]),vertexShader:qo.meshtoon_vert,fragmentShader:qo.meshtoon_frag},matcap:{uniforms:Po([Yo.common,Yo.bumpmap,Yo.normalmap,Yo.displacementmap,Yo.fog,{matcap:{value:null}}]),vertexShader:qo.meshmatcap_vert,fragmentShader:qo.meshmatcap_frag},points:{uniforms:Po([Yo.points,Yo.fog]),vertexShader:qo.points_vert,fragmentShader:qo.points_frag},dashed:{uniforms:Po([Yo.common,Yo.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:qo.linedashed_vert,fragmentShader:qo.linedashed_frag},depth:{uniforms:Po([Yo.common,Yo.displacementmap]),vertexShader:qo.depth_vert,fragmentShader:qo.depth_frag},normal:{uniforms:Po([Yo.common,Yo.bumpmap,Yo.normalmap,Yo.displacementmap,{opacity:{value:1}}]),vertexShader:qo.normal_vert,fragmentShader:qo.normal_frag},sprite:{uniforms:Po([Yo.sprite,Yo.fog]),vertexShader:qo.sprite_vert,fragmentShader:qo.sprite_frag},background:{uniforms:{uvTransform:{value:new Qn},t2D:{value:null}},vertexShader:qo.background_vert,fragmentShader:qo.background_frag},cube:{uniforms:Po([Yo.envmap,{opacity:{value:1}}]),vertexShader:qo.cube_vert,fragmentShader:qo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:qo.equirect_vert,fragmentShader:qo.equirect_frag},distanceRGBA:{uniforms:Po([Yo.common,Yo.displacementmap,{referencePosition:{value:new ar},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:qo.distanceRGBA_vert,fragmentShader:qo.distanceRGBA_frag},shadow:{uniforms:Po([Yo.lights,Yo.fog,{color:{value:new Bi(0)},opacity:{value:1}}]),vertexShader:qo.shadow_vert,fragmentShader:qo.shadow_frag}};function Zo(t,e,n,r,i){const o=new Bi(0);let s,a,c=0,l=null,p=0,u=null;function h(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,i)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),c=e,h(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,h(o,c)},render:function(n,i,d,_){let y=!0===i.isScene?i.background:null;y&&y.isTexture&&(y=e.get(y));const g=t.xr,b=g.getSession&&g.getSession();b&&"additive"===b.environmentBlendMode&&(y=null),null===y?h(o,c):y&&y.isColor&&(h(y,1),_=!0),(t.autoClear||_)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),y&&(y.isCubeTexture||y.mapping===pt)?(void 0===a&&(a=new zo(new Eo(1,1,1),new Do({name:"BackgroundCubeMaterial",uniforms:Lo(Xo.cube.uniforms),vertexShader:Xo.cube.vertexShader,fragmentShader:Xo.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(a)),a.material.uniforms.envMap.value=y,a.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y._needsFlipEnvMap?-1:1,l===y&&p===y.version&&u===t.toneMapping||(a.material.needsUpdate=!0,l=y,p=y.version,u=t.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null)):y&&y.isTexture&&(void 0===s&&(s=new zo(new Wo(2,2),new Do({name:"BackgroundMaterial",uniforms:Lo(Xo.background.uniforms),vertexShader:Xo.background.vertexShader,fragmentShader:Xo.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(s)),s.material.uniforms.t2D.value=y,!0===y.matrixAutoUpdate&&y.updateMatrix(),s.material.uniforms.uvTransform.value.copy(y.matrix),l===y&&p===y.version&&u===t.toneMapping||(s.material.needsUpdate=!0,l=y,p=y.version,u=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function Jo(t,e,n,r){const i=t.getParameter(34921),o=r.isWebGL2?null:e.get("OES_vertex_array_object"),s=r.isWebGL2||null!==o,a={},c=h(null);let l=c;function p(e){return r.isWebGL2?t.bindVertexArray(e):o.bindVertexArrayOES(e)}function u(e){return r.isWebGL2?t.deleteVertexArray(e):o.deleteVertexArrayOES(e)}function h(t){const e=[],n=[],r=[];for(let t=0;t<i;t++)e[t]=0,n[t]=0,r[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function d(){const t=l.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,i){const o=l.newAttributes,s=l.enabledAttributes,a=l.attributeDivisors;if(o[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),a[n]!==i){(r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),a[n]=i}}function _(){const e=l.newAttributes,n=l.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function y(e,n,i,o,s,a){!0!==r.isWebGL2||5124!==i&&5125!==i?t.vertexAttribPointer(e,n,i,o,s,a):t.vertexAttribIPointer(e,n,i,s,a)}function g(){b(),l!==c&&(l=c,p(l.object))}function b(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(i,c,u,g,b){let v=!1;if(s){const e=function(e,n,i){const s=!0===i.wireframe;let c=a[e.id];void 0===c&&(c={},a[e.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let p=l[s];void 0===p&&(p=h(r.isWebGL2?t.createVertexArray():o.createVertexArrayOES()),l[s]=p);return p}(g,u,c);l!==e&&(l=e,p(l.object)),v=function(t,e){const n=l.attributes,r=t.attributes;let i=0;for(const t in r){const e=n[t],o=r[t];if(void 0===e)return!0;if(e.attribute!==o)return!0;if(e.data!==o.data)return!0;i++}return l.attributesNum!==i||l.index!==e}(g,b),v&&function(t,e){const n={},r=t.attributes;let i=0;for(const t in r){const e=r[t],o={};o.attribute=e,e.data&&(o.data=e.data),n[t]=o,i++}l.attributes=n,l.attributesNum=i,l.index=e}(g,b)}else{const t=!0===c.wireframe;l.geometry===g.id&&l.program===u.id&&l.wireframe===t||(l.geometry=g.id,l.program=u.id,l.wireframe=t,v=!0)}!0===i.isInstancedMesh&&(v=!0),null!==b&&n.update(b,34963),v&&(!function(i,o,s,a){if(!1===r.isWebGL2&&(i.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;d();const c=a.attributes,l=s.getAttributes(),p=o.defaultAttributeValues;for(const e in l){const r=l[e];if(r>=0){const o=c[e];if(void 0!==o){const e=o.normalized,i=o.itemSize,s=n.get(o);if(void 0===s)continue;const c=s.buffer,l=s.type,p=s.bytesPerElement;if(o.isInterleavedBufferAttribute){const n=o.data,s=n.stride,u=o.offset;n&&n.isInstancedInterleavedBuffer?(m(r,n.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=n.meshPerAttribute*n.count)):f(r),t.bindBuffer(34962,c),y(r,i,l,e,s*p,u*p)}else o.isInstancedBufferAttribute?(m(r,o.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=o.meshPerAttribute*o.count)):f(r),t.bindBuffer(34962,c),y(r,i,l,e,0,0)}else if("instanceMatrix"===e){const e=n.get(i.instanceMatrix);if(void 0===e)continue;const o=e.buffer,s=e.type;m(r+0,1),m(r+1,1),m(r+2,1),m(r+3,1),t.bindBuffer(34962,o),t.vertexAttribPointer(r+0,4,s,!1,64,0),t.vertexAttribPointer(r+1,4,s,!1,64,16),t.vertexAttribPointer(r+2,4,s,!1,64,32),t.vertexAttribPointer(r+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(i.instanceColor);if(void 0===e)continue;const o=e.buffer,s=e.type;m(r,1),t.bindBuffer(34962,o),t.vertexAttribPointer(r,3,s,!1,12,0)}else if(void 0!==p){const n=p[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r,n);break;case 3:t.vertexAttrib3fv(r,n);break;case 4:t.vertexAttrib4fv(r,n);break;default:t.vertexAttrib1fv(r,n)}}}}_()}(i,c,u,g),null!==b&&t.bindBuffer(34963,n.get(b).buffer))},reset:g,resetDefaultState:b,dispose:function(){g();for(const t in a){const e=a[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const n=a[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)u(r[t].object),delete r[t];delete n[t.id]}},initAttributes:d,enableAttribute:f,disableUnusedAttributes:_}}function Qo(t,e,n,r){const i=r.isWebGL2;let o;this.setMode=function(t){o=t},this.render=function(e,r){t.drawArrays(o,e,r),n.update(r,o,1)},this.renderInstances=function(r,s,a){if(0===a)return;let c,l;if(i)c=t,l="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](o,r,s,a),n.update(s,o,a)}}function Ko(t,e,n){let r;function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const a=i(s);a!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",a,"instead."),s=a);const c=!0===n.logarithmicDepthBuffer,l=t.getParameter(34930),p=t.getParameter(35660),u=t.getParameter(3379),h=t.getParameter(34076),d=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),_=t.getParameter(36349),y=p>0,g=o||e.has("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:p,maxTextureSize:u,maxCubemapSize:h,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:_,vertexTextures:y,floatFragmentTextures:g,floatVertexTextures:y&&g,maxSamples:o?t.getParameter(36183):0}}function $o(t){const e=this;let n=null,r=0,i=!1,o=!1;const s=new yi,a=new Qn,c={value:null,needsUpdate:!1};function l(){c.value!==n&&(c.value=n,c.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function p(t,n,r,i){const o=null!==t?t.length:0;let l=null;if(0!==o){if(l=c.value,!0!==i||null===l){const e=r+4*o,i=n.matrixWorldInverse;a.getNormalMatrix(i),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,n=r;e!==o;++e,n+=4)s.copy(t[e]).applyMatrix4(i,a),s.normal.toArray(l,n),l[n+3]=s.constant}c.value=l,c.needsUpdate=!0}return e.numPlanes=o,e.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,o){const s=0!==t.length||e||0!==r||i;return i=e,n=p(t,o,0),r=t.length,s},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1,l()},this.setState=function(e,s,a){const u=e.clippingPlanes,h=e.clipIntersection,d=e.clipShadows,f=t.get(e);if(!i||null===u||0===u.length||o&&!d)o?p(null):l();else{const t=o?0:r,e=4*t;let i=f.clippingState||null;c.value=i,i=p(u,s,e,a);for(let t=0;t!==e;++t)i[t]=n[t];f.clippingState=i,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=t}}}function ts(t){let e=new WeakMap;function n(t,e){return e===ct?t.mapping=st:e===lt&&(t.mapping=at),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const o=i.mapping;if(o===ct||o===lt){if(e.has(i)){return n(e.get(i).texture,i.mapping)}{const o=i.image;if(o&&o.height>0){const s=t.getRenderTarget(),a=new Fo(o.height/2);return a.fromEquirectangularTexture(t,i),e.set(i,a),t.setRenderTarget(s),i.addEventListener("dispose",r),n(a.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}function es(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function ns(t,e,n,r){const i={},o=new WeakMap;function s(t){const a=t.target;null!==a.index&&e.remove(a.index);for(const t in a.attributes)e.remove(a.attributes[t]);a.removeEventListener("dispose",s),delete i[a.id];const c=o.get(a);c&&(e.remove(c),o.delete(a)),r.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,n.memory.geometries--}function a(t){const n=[],r=t.index,i=t.attributes.position;let s=0;if(null!==r){const t=r.array;s=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],i=t[e+1],o=t[e+2];n.push(r,i,i,o,o,r)}}else{const t=i.array;s=i.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,i=e+2;n.push(t,r,r,i,i,t)}}const a=new(Ki(n)>65535?Xi:qi)(n,1);a.version=s;const c=o.get(t);c&&e.remove(c),o.set(t,a)}return{get:function(t,e){return!0===i[e.id]?e:(e.addEventListener("dispose",s),i[e.id]=!0,n.memory.geometries++,e)},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const r=t.morphAttributes;for(const t in r){const n=r[t];for(let t=0,r=n.length;t<r;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=o.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&a(t)}else a(t);return o.get(t)}}}function rs(t,e,n,r){const i=r.isWebGL2;let o,s,a;this.setMode=function(t){o=t},this.setIndex=function(t){s=t.type,a=t.bytesPerElement},this.render=function(e,r){t.drawElements(o,r,s,e*a),n.update(r,o,1)},this.renderInstances=function(r,c,l){if(0===l)return;let p,u;if(i)p=t,u="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===p)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");p[u](o,c,s,r*a,l),n.update(c,o,l)}}function is(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function os(t,e){return t[0]-e[0]}function ss(t,e){return Math.abs(e[1])-Math.abs(t[1])}function as(t){const e={},n=new Float32Array(8),r=[];for(let t=0;t<8;t++)r[t]=[t,0];return{update:function(i,o,s,a){const c=i.morphTargetInfluences,l=void 0===c?0:c.length;let p=e[o.id];if(void 0===p){p=[];for(let t=0;t<l;t++)p[t]=[t,0];e[o.id]=p}for(let t=0;t<l;t++){const e=p[t];e[0]=t,e[1]=c[t]}p.sort(ss);for(let t=0;t<8;t++)t<l&&p[t][1]?(r[t][0]=p[t][0],r[t][1]=p[t][1]):(r[t][0]=Number.MAX_SAFE_INTEGER,r[t][1]=0);r.sort(os);const u=s.morphTargets&&o.morphAttributes.position,h=s.morphNormals&&o.morphAttributes.normal;let d=0;for(let t=0;t<8;t++){const e=r[t],i=e[0],s=e[1];i!==Number.MAX_SAFE_INTEGER&&s?(u&&o.getAttribute("morphTarget"+t)!==u[i]&&o.setAttribute("morphTarget"+t,u[i]),h&&o.getAttribute("morphNormal"+t)!==h[i]&&o.setAttribute("morphNormal"+t,h[i]),n[t]=s,d+=s):(u&&!0===o.hasAttribute("morphTarget"+t)&&o.deleteAttribute("morphTarget"+t),h&&!0===o.hasAttribute("morphNormal"+t)&&o.deleteAttribute("morphNormal"+t),n[t]=0)}const f=o.morphTargetsRelative?1:1-d;a.getUniforms().setValue(t,"morphTargetBaseInfluence",f),a.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function cs(t,e,n,r){let i=new WeakMap;function o(t){const e=t.target;e.removeEventListener("dispose",o),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const s=r.render.frame,a=t.geometry,c=e.get(t,a);return i.get(c)!==s&&(e.update(c),i.set(c,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",o)&&t.addEventListener("dispose",o),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),c},dispose:function(){i=new WeakMap}}}Xo.physical={uniforms:Po([Xo.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Jn(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Bi(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:qo.meshphysical_vert,fragmentShader:qo.meshphysical_frag};class ls extends er{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=mt,this.minFilter=mt,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ls.prototype.isDataTexture2DArray=!0;class ps extends er{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=mt,this.minFilter=mt,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ps.prototype.isDataTexture3D=!0;const us=new er,hs=new ls,ds=new ps,fs=new Bo,ms=[],_s=[],ys=new Float32Array(16),gs=new Float32Array(9),bs=new Float32Array(4);function vs(t,e,n){const r=t[0];if(r<=0||r>0)return t;const i=e*n;let o=ms[i];if(void 0===o&&(o=new Float32Array(i),ms[i]=o),0!==e){r.toArray(o,0);for(let r=1,i=0;r!==e;++r)i+=n,t[r].toArray(o,i)}return o}function xs(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function ws(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function Ss(t,e){let n=_s[e];void 0===n&&(n=new Int32Array(e),_s[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function Ms(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Ts(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(xs(n,e))return;t.uniform2fv(this.addr,e),ws(n,e)}}function Cs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(xs(n,e))return;t.uniform3fv(this.addr,e),ws(n,e)}}function zs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(xs(n,e))return;t.uniform4fv(this.addr,e),ws(n,e)}}function As(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(xs(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),ws(n,e)}else{if(xs(n,r))return;bs.set(r),t.uniformMatrix2fv(this.addr,!1,bs),ws(n,r)}}function Es(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(xs(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),ws(n,e)}else{if(xs(n,r))return;gs.set(r),t.uniformMatrix3fv(this.addr,!1,gs),ws(n,r)}}function Ls(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(xs(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),ws(n,e)}else{if(xs(n,r))return;ys.set(r),t.uniformMatrix4fv(this.addr,!1,ys),ws(n,r)}}function Ps(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Rs(t,e){const n=this.cache;xs(n,e)||(t.uniform2iv(this.addr,e),ws(n,e))}function Ds(t,e){const n=this.cache;xs(n,e)||(t.uniform3iv(this.addr,e),ws(n,e))}function Is(t,e){const n=this.cache;xs(n,e)||(t.uniform4iv(this.addr,e),ws(n,e))}function Os(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function js(t,e){const n=this.cache;xs(n,e)||(t.uniform2uiv(this.addr,e),ws(n,e))}function Bs(t,e){const n=this.cache;xs(n,e)||(t.uniform3uiv(this.addr,e),ws(n,e))}function Fs(t,e){const n=this.cache;xs(n,e)||(t.uniform4uiv(this.addr,e),ws(n,e))}function Ns(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(e||us,i)}function Hs(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||ds,i)}function Gs(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(e||fs,i)}function Us(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||hs,i)}function ks(t,e){t.uniform1fv(this.addr,e)}function Vs(t,e){const n=vs(e,this.size,2);t.uniform2fv(this.addr,n)}function Ws(t,e){const n=vs(e,this.size,3);t.uniform3fv(this.addr,n)}function qs(t,e){const n=vs(e,this.size,4);t.uniform4fv(this.addr,n)}function Ys(t,e){const n=vs(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Xs(t,e){const n=vs(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Zs(t,e){const n=vs(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Js(t,e){t.uniform1iv(this.addr,e)}function Qs(t,e){t.uniform2iv(this.addr,e)}function Ks(t,e){t.uniform3iv(this.addr,e)}function $s(t,e){t.uniform4iv(this.addr,e)}function ta(t,e){t.uniform1uiv(this.addr,e)}function ea(t,e){t.uniform2uiv(this.addr,e)}function na(t,e){t.uniform3uiv(this.addr,e)}function ra(t,e){t.uniform4uiv(this.addr,e)}function ia(t,e,n){const r=e.length,i=Ss(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.safeSetTexture2D(e[t]||us,i[t])}function oa(t,e,n){const r=e.length,i=Ss(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.safeSetTextureCube(e[t]||fs,i[t])}function sa(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Ms;case 35664:return Ts;case 35665:return Cs;case 35666:return zs;case 35674:return As;case 35675:return Es;case 35676:return Ls;case 5124:case 35670:return Ps;case 35667:case 35671:return Rs;case 35668:case 35672:return Ds;case 35669:case 35673:return Is;case 5125:return Os;case 36294:return js;case 36295:return Bs;case 36296:return Fs;case 35678:case 36198:case 36298:case 36306:case 35682:return Ns;case 35679:case 36299:case 36307:return Hs;case 35680:case 36300:case 36308:case 36293:return Gs;case 36289:case 36303:case 36311:case 36292:return Us}}(e.type)}function aa(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return ks;case 35664:return Vs;case 35665:return Ws;case 35666:return qs;case 35674:return Ys;case 35675:return Xs;case 35676:return Zs;case 5124:case 35670:return Js;case 35667:case 35671:return Qs;case 35668:case 35672:return Ks;case 35669:case 35673:return $s;case 5125:return ta;case 36294:return ea;case 36295:return na;case 36296:return ra;case 35678:case 36198:case 36298:case 36306:case 35682:return ia;case 35680:case 36300:case 36308:case 36293:return oa}}(e.type)}function ca(t){this.id=t,this.seq=[],this.map={}}aa.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),ws(e,t)},ca.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,o=r.length;i!==o;++i){const o=r[i];o.setValue(t,e[o.id],n)}};const la=/(\\w+)(\\])?(\\[|\\.)?/g;function pa(t,e){t.seq.push(e),t.map[e.id]=e}function ua(t,e,n){const r=t.name,i=r.length;for(la.lastIndex=0;;){const o=la.exec(r),s=la.lastIndex;let a=o[1];const c="]"===o[2],l=o[3];if(c&&(a|=0),void 0===l||"["===l&&s+2===i){pa(n,void 0===l?new sa(a,t,e):new aa(a,t,e));break}{let t=n.map[a];void 0===t&&(t=new ca(a),pa(n,t)),n=t}}}function ha(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r);ua(n,t.getUniformLocation(e,n.name),this)}}function da(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}ha.prototype.setValue=function(t,e,n,r){const i=this.map[e];void 0!==i&&i.setValue(t,n,r)},ha.prototype.setOptional=function(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)},ha.upload=function(t,e,n,r){for(let i=0,o=e.length;i!==o;++i){const o=e[i],s=n[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,r)}},ha.seqWithValue=function(t,e){const n=[];for(let r=0,i=t.length;r!==i;++r){const i=t[r];i.id in e&&n.push(i)}return n};let fa=0;function ma(t){switch(t){case Qe:return["Linear","( value )"];case Ke:return["sRGB","( value )"];case tn:return["RGBE","( value )"];case nn:return["RGBM","( value, 7.0 )"];case rn:return["RGBM","( value, 16.0 )"];case on:return["RGBD","( value, 256.0 )"];case $e:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case en:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function _a(t,e,n){const r=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();return r&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\\n"+i+function(t){const e=t.split("\\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\\n")}(t.getShaderSource(e))}function ya(t,e){const n=ma(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function ga(t,e){const n=ma(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function ba(t,e){let n;switch(e){case $:n="Linear";break;case tt:n="Reinhard";break;case et:n="OptimizedCineon";break;case nt:n="ACESFilmic";break;case rt:n="Custom";break;case it:n="LUT";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function va(t){return""!==t}function xa(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function wa(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Sa=/^[ \\t]*#include +<([\\w\\d./]+)>/gm;function Ma(t){return t.replace(Sa,Ta)}function Ta(t,e){const n=qo[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Ma(n)}const Ca=/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,za=/#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;function Aa(t){return t.replace(za,La).replace(Ca,Ea)}function Ea(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),La(t,e,n,r)}function La(t,e,n,r){let i="";for(let t=parseInt(e);t<parseInt(n);t++)i+=r.replace(/\\[\\s*i\\s*\\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return i}function Pa(t){let e="precision "+t.precision+" float;\\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\\n#define LOW_PRECISION"),e}function Ra(t,e,n,r){const i=t.getContext(),o=n.defines;let s=n.vertexShader,a=n.fragmentShader;const c=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===u?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===h?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===d&&(e="SHADOWMAP_TYPE_VSM"),e}(n),l=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case st:case at:e="ENVMAP_TYPE_CUBE";break;case pt:case ut:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),p=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case at:case ut:e="ENVMAP_MODE_REFRACTION"}return e}(n),f=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Z:e="ENVMAP_BLENDING_MULTIPLY";break;case J:e="ENVMAP_BLENDING_MIX";break;case Q:e="ENVMAP_BLENDING_ADD"}return e}(n),m=t.gammaFactor>0?t.gammaFactor:1,_=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(va).join("\\n")}(n),y=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\\n")}(o),g=i.createProgram();let b,v,x=n.glslVersion?"#version "+n.glslVersion+"\\n":"";n.isRawShaderMaterial?(b=[y].filter(va).join("\\n"),b.length>0&&(b+="\\n"),v=[_,y].filter(va).join("\\n"),v.length>0&&(v+="\\n")):(b=[Pa(n),"#define SHADER_NAME "+n.shaderName,y,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+m,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+p:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\\tattribute vec4 color;","#elif defined( USE_COLOR )","\\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\\tattribute vec3 morphTarget0;","\\tattribute vec3 morphTarget1;","\\tattribute vec3 morphTarget2;","\\tattribute vec3 morphTarget3;","\\t#ifdef USE_MORPHNORMALS","\\t\\tattribute vec3 morphNormal0;","\\t\\tattribute vec3 morphNormal1;","\\t\\tattribute vec3 morphNormal2;","\\t\\tattribute vec3 morphNormal3;","\\t#else","\\t\\tattribute vec3 morphTarget4;","\\t\\tattribute vec3 morphTarget5;","\\t\\tattribute vec3 morphTarget6;","\\t\\tattribute vec3 morphTarget7;","\\t#endif","#endif","#ifdef USE_SKINNING","\\tattribute vec4 skinIndex;","\\tattribute vec4 skinWeight;","#endif","\\n"].filter(va).join("\\n"),v=[_,Pa(n),"#define SHADER_NAME "+n.shaderName,y,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+p:"",n.envMap?"#define "+f:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==K?"#define TONE_MAPPING":"",n.toneMapping===it?"#define LUT_TONE_MAPPING":"",n.toneMapping!==K?qo.tonemapping_pars_fragment:"",n.toneMapping!==K?ba("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",qo.encodings_pars_fragment,n.map?ya("mapTexelToLinear",n.mapEncoding):"",n.matcap?ya("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?ya("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?ya("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?ya("lightMapTexelToLinear",n.lightMapEncoding):"",ga("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\\n"].filter(va).join("\\n")),s=Ma(s),s=xa(s,n),s=wa(s,n),a=Ma(a),a=xa(a,n),a=wa(a,n),s=Aa(s),a=Aa(a),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(x="#version 300 es\\n",b=["#define attribute in","#define varying out","#define texture2D texture"].join("\\n")+"\\n"+b,v=["#define varying in",n.glslVersion===jn?"":"out highp vec4 pc_fragColor;",n.glslVersion===jn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\\n")+"\\n"+v);const w=x+v+a,S=da(i,35633,x+b+s),M=da(i,35632,w);if(i.attachShader(g,S),i.attachShader(g,M),void 0!==n.index0AttributeName?i.bindAttribLocation(g,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),t.debug.checkShaderErrors){const t=i.getProgramInfoLog(g).trim(),e=i.getShaderInfoLog(S).trim(),n=i.getShaderInfoLog(M).trim();let r=!0,o=!0;if(!1===i.getProgramParameter(g,35714)){r=!1;const e=_a(i,S,"vertex"),n=_a(i,M,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(g,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(o=!1);o&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:b},fragmentShader:{log:n,prefix:v}})}let T,C;return i.deleteShader(S),i.deleteShader(M),this.getUniforms=function(){return void 0===T&&(T=new ha(i,g)),T},this.getAttributes=function(){return void 0===C&&(C=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i).name;n[r]=t.getAttribLocation(e,r)}return n}(i,g)),C},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=n.shaderName,this.id=fa++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=S,this.fragmentShader=M,this}function Da(t,e,n,r,i,o){const s=[],a=r.isWebGL2,c=r.logarithmicDepthBuffer,l=r.floatVertexTextures,p=r.maxVertexUniforms,u=r.vertexTextures;let h=r.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function y(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don\'t use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Qe,e}return{getParameters:function(i,s,f,g,b){const v=g.fog,x=i.isMeshStandardMaterial?g.environment:null,w=e.get(i.envMap||x),S=d[i.type],M=b.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(l)return 1024;{const t=p,n=Math.floor((t-20)/4),r=Math.min(n,e.length);return r<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+r+"."),0):r}}(b):0;let T,C;if(null!==i.precision&&(h=r.getMaxPrecision(i.precision),h!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",h,"instead.")),S){const t=Xo[S];T=t.vertexShader,C=t.fragmentShader}else T=i.vertexShader,C=i.fragmentShader;const z=t.getRenderTarget();return{isWebGL2:a,shaderID:S,shaderName:i.type,vertexShader:T,fragmentShader:C,defines:i.defines,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:h,instancing:!0===b.isInstancedMesh,instancingColor:!0===b.isInstancedMesh&&null!==b.instanceColor,supportsVertexTextures:u,outputEncoding:null!==z?y(z.texture):t.outputEncoding,map:!!i.map,mapEncoding:y(i.map),matcap:!!i.matcap,matcapEncoding:y(i.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:y(w),envMapCubeUV:!!w&&(w.mapping===pt||w.mapping===ut),lightMap:!!i.lightMap,lightMapEncoding:y(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:y(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:i.normalMapType===ln,tangentSpaceNormalMap:i.normalMapType===cn,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,transmissionMap:!!i.transmissionMap,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexAlphas:!0===i.vertexColors&&b.geometry&&b.geometry.attributes.color&&4===b.geometry.attributes.color.itemSize,vertexUvs:!!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatMap||i.clearcoatRoughnessMap||i.clearcoatNormalMap||i.displacementMap||i.transmissionMap),uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||i.transmissionMap||!i.displacementMap),fog:!!v,useFog:i.fog,fogExp2:v&&v.isFogExp2,flatShading:!!i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:c,skinning:i.skinning&&M>0,maxBones:M,useVertexTexture:l,morphTargets:i.morphTargets,morphNormals:i.morphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:i.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:i.toneMapped?t.toneMapping:K,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:i.side===_,flipSided:i.side===m,depthPacking:void 0!==i.depthPacking&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=d[t.type];let n;if(e){const t=Xo[e];n=Ro.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new Ra(t,n,e,i),s.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function Ia(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}}function Oa(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function ja(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ba(t){const e=[];let n=0;const r=[],i=[],o={id:-1};function s(r,i,s,a,c,l){let p=e[n];const u=t.get(s);return void 0===p?(p={id:r.id,object:r,geometry:i,material:s,program:u.program||o,groupOrder:a,renderOrder:r.renderOrder,z:c,group:l},e[n]=p):(p.id=r.id,p.object=r,p.geometry=i,p.material=s,p.program=u.program||o,p.groupOrder=a,p.renderOrder=r.renderOrder,p.z=c,p.group=l),n++,p}return{opaque:r,transparent:i,init:function(){n=0,r.length=0,i.length=0},push:function(t,e,n,o,a,c){const l=s(t,e,n,o,a,c);(!0===n.transparent?i:r).push(l)},unshift:function(t,e,n,o,a,c){const l=s(t,e,n,o,a,c);(!0===n.transparent?i:r).unshift(l)},finish:function(){for(let t=n,r=e.length;t<r;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){r.length>1&&r.sort(t||Oa),i.length>1&&i.sort(e||ja)}}}function Fa(t){let e=new WeakMap;return{get:function(n,r){let i;return!1===e.has(n)?(i=new Ba(t),e.set(n,[i])):r>=e.get(n).length?(i=new Ba(t),e.get(n).push(i)):i=e.get(n)[r],i},dispose:function(){e=new WeakMap}}}function Na(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new ar,color:new Bi};break;case"SpotLight":n={position:new ar,direction:new ar,color:new Bi,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new ar,color:new Bi,distance:0,decay:0};break;case"HemisphereLight":n={direction:new ar,skyColor:new Bi,groundColor:new Bi};break;case"RectAreaLight":n={color:new Bi,position:new ar,halfWidth:new ar,halfHeight:new ar}}return t[e.id]=n,n}}}let Ha=0;function Ga(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Ua(t,e){const n=new Na,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Jn};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Jn,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)i.probe.push(new ar);const o=new ar,s=new Fr,a=new Fr;return{setup:function(o){let s=0,a=0,c=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let l=0,p=0,u=0,h=0,d=0,f=0,m=0,_=0;o.sort(Ga);for(let t=0,e=o.length;t<e;t++){const e=o[t],y=e.color,g=e.intensity,b=e.distance,v=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)s+=y.r*g,a+=y.g*g,c+=y.b*g;else if(e.isLightProbe)for(let t=0;t<9;t++)i.probe[t].addScaledVector(e.sh.coefficients[t],g);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.directionalShadow[l]=n,i.directionalShadowMap[l]=v,i.directionalShadowMatrix[l]=e.shadow.matrix,f++}i.directional[l]=t,l++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(y).multiplyScalar(g),t.distance=b,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.spotShadow[u]=n,i.spotShadowMap[u]=v,i.spotShadowMatrix[u]=e.shadow.matrix,_++}i.spot[u]=t,u++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(y).multiplyScalar(g),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),i.rectArea[h]=t,h++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,i.pointShadow[p]=n,i.pointShadowMap[p]=v,i.pointShadowMatrix[p]=e.shadow.matrix,m++}i.point[p]=t,p++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(g),t.groundColor.copy(e.groundColor).multiplyScalar(g),i.hemi[d]=t,d++}}h>0&&(e.isWebGL2?(i.rectAreaLTC1=Yo.LTC_FLOAT_1,i.rectAreaLTC2=Yo.LTC_FLOAT_2):!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=Yo.LTC_FLOAT_1,i.rectAreaLTC2=Yo.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=Yo.LTC_HALF_1,i.rectAreaLTC2=Yo.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=s,i.ambient[1]=a,i.ambient[2]=c;const y=i.hash;y.directionalLength===l&&y.pointLength===p&&y.spotLength===u&&y.rectAreaLength===h&&y.hemiLength===d&&y.numDirectionalShadows===f&&y.numPointShadows===m&&y.numSpotShadows===_||(i.directional.length=l,i.spot.length=u,i.rectArea.length=h,i.point.length=p,i.hemi.length=d,i.directionalShadow.length=f,i.directionalShadowMap.length=f,i.pointShadow.length=m,i.pointShadowMap.length=m,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=f,i.pointShadowMatrix.length=m,i.spotShadowMatrix.length=_,y.directionalLength=l,y.pointLength=p,y.spotLength=u,y.rectAreaLength=h,y.hemiLength=d,y.numDirectionalShadows=f,y.numPointShadows=m,y.numSpotShadows=_,i.version=Ha++)},setupView:function(t,e){let n=0,r=0,c=0,l=0,p=0;const u=e.matrixWorldInverse;for(let e=0,h=t.length;e<h;e++){const h=t[e];if(h.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(h.matrixWorld),o.setFromMatrixPosition(h.target.matrixWorld),t.direction.sub(o),t.direction.transformDirection(u),n++}else if(h.isSpotLight){const t=i.spot[c];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(h.matrixWorld),o.setFromMatrixPosition(h.target.matrixWorld),t.direction.sub(o),t.direction.transformDirection(u),c++}else if(h.isRectAreaLight){const t=i.rectArea[l];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(u),a.identity(),s.copy(h.matrixWorld),s.premultiply(u),a.extractRotation(s),t.halfWidth.set(.5*h.width,0,0),t.halfHeight.set(0,.5*h.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),l++}else if(h.isPointLight){const t=i.point[r];t.position.setFromMatrixPosition(h.matrixWorld),t.position.applyMatrix4(u),r++}else if(h.isHemisphereLight){const t=i.hemi[p];t.direction.setFromMatrixPosition(h.matrixWorld),t.direction.transformDirection(u),t.direction.normalize(),p++}}},state:i}}function ka(t,e){const n=new Ua(t,e),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(){n.setup(r)},setupLightsView:function(t){n.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){i.push(t)}}}function Va(t,e){let n=new WeakMap;return{get:function(r,i=0){let o;return!1===n.has(r)?(o=new ka(t,e),n.set(r,[o])):i>=n.get(r).length?(o=new ka(t,e),n.get(r).push(o)):o=n.get(r)[i],o},dispose:function(){n=new WeakMap}}}class Wa extends Li{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=sn,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}Wa.prototype.isMeshDepthMaterial=!0;class qa extends Li{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new ar,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}qa.prototype.isMeshDistanceMaterial=!0;function Ya(t,e,n){let r=new Uo;const i=new Jn,o=new Jn,s=new rr,a=[],c=[],l={},p=n.maxTextureSize,h={0:m,1:f,2:_},y=new Do({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Jn},radius:{value:4}},vertexShader:"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}",fragmentShader:"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}"}),g=y.clone();g.defines.HORIZONTAL_PASS=1;const v=new co;v.setAttribute("position",new Gi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new zo(v,y),w=this;function S(n,r){const i=e.update(x);y.uniforms.shadow_pass.value=n.map.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,i,y,x,null),g.uniforms.shadow_pass.value=n.mapPass.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,i,g,x,null)}function M(t,e,n){const r=t<<0|e<<1|n<<2;let i=a[r];return void 0===i&&(i=new Wa({depthPacking:an,morphTargets:t,skinning:e}),a[r]=i),i}function T(t,e,n){const r=t<<0|e<<1|n<<2;let i=c[r];return void 0===i&&(i=new qa({morphTargets:t,skinning:e}),c[r]=i),i}function C(e,n,r,i,o,s,a){let c=null,p=M,u=e.customDepthMaterial;if(!0===i.isPointLight&&(p=T,u=e.customDistanceMaterial),void 0===u){let t=!1;!0===r.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let i=!1;!0===e.isSkinnedMesh&&(!0===r.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),c=p(t,i,!0===e.isInstancedMesh)}else c=u;if(t.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){const t=c.uuid,e=r.uuid;let n=l[t];void 0===n&&(n={},l[t]=n);let i=n[e];void 0===i&&(i=c.clone(),n[e]=i),c=i}return c.visible=r.visible,c.wireframe=r.wireframe,c.side=a===d?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:h[r.side],c.clipShadows=r.clipShadows,c.clippingPlanes=r.clippingPlanes,c.clipIntersection=r.clipIntersection,c.wireframeLinewidth=r.wireframeLinewidth,c.linewidth=r.linewidth,!0===i.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(i.matrixWorld),c.nearDistance=o,c.farDistance=s),c}function z(n,i,o,s,a){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&a===d)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,n.matrixWorld);const r=e.update(n),i=n.material;if(Array.isArray(i)){const e=r.groups;for(let c=0,l=e.length;c<l;c++){const l=e[c],p=i[l.materialIndex];if(p&&p.visible){const e=C(n,r,p,s,o.near,o.far,a);t.renderBufferDirect(o,null,r,e,n,l)}}}else if(i.visible){const e=C(n,r,i,s,o.near,o.far,a);t.renderBufferDirect(o,null,r,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)z(c[t],i,o,s,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=u,this.render=function(e,n,a){if(!1===w.enabled)return;if(!1===w.autoUpdate&&!1===w.needsUpdate)return;if(0===e.length)return;const c=t.getRenderTarget(),l=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),h=t.state;h.setBlending(b),h.buffers.color.setClear(1,1,1,1),h.buffers.depth.setTest(!0),h.setScissorTest(!1);for(let c=0,l=e.length;c<l;c++){const l=e[c],u=l.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;i.copy(u.mapSize);const f=u.getFrameExtents();if(i.multiply(f),o.copy(u.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(o.x=Math.floor(p/f.x),i.x=o.x*f.x,u.mapSize.x=o.x),i.y>p&&(o.y=Math.floor(p/f.y),i.y=o.y*f.y,u.mapSize.y=o.y)),null===u.map&&!u.isPointLightShadow&&this.type===d){const t={minFilter:vt,magFilter:vt,format:Nt};u.map=new ir(i.x,i.y,t),u.map.texture.name=l.name+".shadowMap",u.mapPass=new ir(i.x,i.y,t),u.camera.updateProjectionMatrix()}if(null===u.map){const t={minFilter:mt,magFilter:mt,format:Nt};u.map=new ir(i.x,i.y,t),u.map.texture.name=l.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const m=u.getViewportCount();for(let t=0;t<m;t++){const e=u.getViewport(t);s.set(o.x*e.x,o.y*e.y,o.x*e.z,o.y*e.w),h.viewport(s),u.updateMatrices(l,t),r=u.getFrustum(),z(n,a,u.camera,l,this.type)}u.isPointLightShadow||this.type!==d||S(u,a),u.needsUpdate=!1}w.needsUpdate=!1,t.setRenderTarget(c,l,u)}}function Xa(t,e,n){const r=n.isWebGL2;const i=new function(){let e=!1;const n=new rr;let r=null;const i=new rr(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,o,s,a){!0===a&&(e*=s,r*=s,o*=s),n.set(e,r,o,s),!1===i.equals(n)&&(t.clearColor(e,r,o,s),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}},o=new function(){let e=!1,n=null,r=null,i=null;return{setTest:function(t){t?_t(2929):yt(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case G:t.depthFunc(512);break;case U:t.depthFunc(519);break;case k:t.depthFunc(513);break;case V:t.depthFunc(515);break;case W:t.depthFunc(514);break;case q:t.depthFunc(518);break;case Y:t.depthFunc(516);break;case X:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,r=null,i=null}}},l=new function(){let e=!1,n=null,r=null,i=null,o=null,s=null,a=null,c=null,l=null;return{setTest:function(t){e||(t?_t(2960):yt(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,s){r===e&&i===n&&o===s||(t.stencilFunc(e,n,s),r=e,i=n,o=s)},setOp:function(e,n,r){s===e&&a===n&&c===r||(t.stencilOp(e,n,r),s=e,a=n,c=r)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(t.clearStencil(e),l=e)},reset:function(){e=!1,n=null,r=null,i=null,o=null,s=null,a=null,c=null,l=null}}};let p={},u=null,h={},d=null,f=!1,y=null,g=null,Z=null,J=null,Q=null,K=null,$=null,tt=!1,et=null,nt=null,rt=null,it=null,ot=null;const st=t.getParameter(35661);let at=!1,ct=0;const lt=t.getParameter(7938);-1!==lt.indexOf("WebGL")?(ct=parseFloat(/^WebGL (\\d)/.exec(lt)[1]),at=ct>=1):-1!==lt.indexOf("OpenGL ES")&&(ct=parseFloat(/^OpenGL ES (\\d)/.exec(lt)[1]),at=ct>=2);let pt=null,ut={};const ht=new rr(0,0,t.canvas.width,t.canvas.height),dt=new rr(0,0,t.canvas.width,t.canvas.height);function ft(e,n,r){const i=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<r;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,i);return o}const mt={};function _t(e){!0!==p[e]&&(t.enable(e),p[e]=!0)}function yt(e){!1!==p[e]&&(t.disable(e),p[e]=!1)}mt[3553]=ft(3553,3553,1),mt[34067]=ft(34067,34069,6),i.setClear(0,0,0,1),o.setClear(1),l.setClear(0),_t(2929),o.setFunc(V),xt(!1),wt(a),_t(2884),vt(b);const gt={[T]:32774,[C]:32778,[z]:32779};if(r)gt[A]=32775,gt[E]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(gt[A]=t.MIN_EXT,gt[E]=t.MAX_EXT)}const bt={[L]:0,[P]:1,[R]:768,[I]:770,[H]:776,[F]:774,[j]:772,[D]:769,[O]:771,[N]:775,[B]:773};function vt(e,n,r,i,o,s,a,c){if(e!==b){if(!1===f&&(_t(3042),f=!0),e===M)o=o||n,s=s||r,a=a||i,n===g&&o===Q||(t.blendEquationSeparate(gt[n],gt[o]),g=n,Q=o),r===Z&&i===J&&s===K&&a===$||(t.blendFuncSeparate(bt[r],bt[i],bt[s],bt[a]),Z=r,J=i,K=s,$=a),y=e,tt=null;else if(e!==y||c!==tt){if(g===T&&Q===T||(t.blendEquation(32774),g=T,Q=T),c)switch(e){case v:t.blendFuncSeparate(1,771,1,771);break;case x:t.blendFunc(1,1);break;case w:t.blendFuncSeparate(0,0,769,771);break;case S:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case v:t.blendFuncSeparate(770,771,1,771);break;case x:t.blendFunc(770,1);break;case w:t.blendFunc(0,769);break;case S:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}Z=null,J=null,K=null,$=null,y=e,tt=c}}else!0===f&&(yt(3042),f=!1)}function xt(e){et!==e&&(e?t.frontFace(2304):t.frontFace(2305),et=e)}function wt(e){e!==s?(_t(2884),e!==nt&&(e===a?t.cullFace(1029):e===c?t.cullFace(1028):t.cullFace(1032))):yt(2884),nt=e}function St(e,n,r){e?(_t(32823),it===n&&ot===r||(t.polygonOffset(n,r),it=n,ot=r)):yt(32823)}function Mt(e){void 0===e&&(e=33984+st-1),pt!==e&&(t.activeTexture(e),pt=e)}return{buffers:{color:i,depth:o,stencil:l},enable:_t,disable:yt,bindFramebuffer:function(e,n){null===n&&null!==u&&(n=u),h[e]!==n&&(t.bindFramebuffer(e,n),h[e]=n,r&&(36009===e&&(h[36160]=n),36160===e&&(h[36009]=n)))},bindXRFramebuffer:function(e){e!==u&&(t.bindFramebuffer(36160,e),u=e)},useProgram:function(e){return d!==e&&(t.useProgram(e),d=e,!0)},setBlending:vt,setMaterial:function(t,e){t.side===_?yt(2884):_t(2884);let n=t.side===m;e&&(n=!n),xt(n),t.blending===v&&!1===t.transparent?vt(b):vt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),o.setFunc(t.depthFunc),o.setTest(t.depthTest),o.setMask(t.depthWrite),i.setMask(t.colorWrite);const r=t.stencilWrite;l.setTest(r),r&&(l.setMask(t.stencilWriteMask),l.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),l.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),St(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?_t(32926):yt(32926)},setFlipSided:xt,setCullFace:wt,setLineWidth:function(e){e!==rt&&(at&&t.lineWidth(e),rt=e)},setPolygonOffset:St,setScissorTest:function(t){t?_t(3089):yt(3089)},activeTexture:Mt,bindTexture:function(e,n){null===pt&&Mt();let r=ut[pt];void 0===r&&(r={type:void 0,texture:void 0},ut[pt]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||mt[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=ut[pt];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(e,n,r,i,o,s,a,c,l,p){try{void 0===c?t.compressedTexImage2D(e,n,r,i,o,s,a):void 0===l?t.compressedTexImage2D(e,n,r,i,o,s,a,c):void 0===p?t.compressedTexImage2D(e,n,r,i,o,s,a,c,l):t.compressedTexImage2D(e,n,r,i,o,s,a,c,l,p)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(e,n,r,i,o,s,a,c,l){try{void 0===a?t.texImage2D(e,n,r,i,o,s):t.texImage2D(e,n,r,i,o,s,a,c,l)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(e,n,r,i,o,s,a,c,l,p,u){try{void 0===u?t.texImage3D(e,n,r,i,o,s,a,c,l,p):t.texImage3D(e,n,r,i,o,s,a,c,l,p,u)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===ht.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),ht.copy(e))},viewport:function(e){!1===dt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),dt.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),p={},pt=null,ut={},u=null,h={},d=null,f=!1,y=null,g=null,Z=null,J=null,Q=null,K=null,$=null,tt=!1,et=null,nt=null,rt=null,it=null,ot=null,ht.set(0,0,t.canvas.width,t.canvas.height),dt.set(0,0,t.canvas.width,t.canvas.height),i.reset(),o.reset(),l.reset()}}}function Za(t,e,n,r,i,o,s){const a=i.isWebGL2,c=i.maxTextures,l=i.maxCubemapSize,p=i.maxTextureSize,u=i.maxSamples,h=new WeakMap;let d,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function m(t,e){return f?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function _(t,e,n,r){let i=1;if((t.width>r||t.height>r)&&(i=r/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const r=e?Xn:Math.floor,o=r(i*t.width),s=r(i*t.height);void 0===d&&(d=m(o,s));const a=n?m(o,s):d;return a.width=o,a.height=s,a.getContext("2d").drawImage(t,0,0,o,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+o+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function y(t){return qn(t.width)&&qn(t.height)}function g(t,e){return t.generateMipmaps&&e&&t.minFilter!==mt&&t.minFilter!==vt}function b(e,n,i,o){t.generateMipmap(e),r.get(n).__maxMipLevel=Math.log2(Math.max(i,o))}function v(n,r,i){if(!1===a)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \'"+n+"\'")}let o=r;return 6403===r&&(5126===i&&(o=33326),5131===i&&(o=33325),5121===i&&(o=33321)),6407===r&&(5126===i&&(o=34837),5131===i&&(o=34843),5121===i&&(o=32849)),6408===r&&(5126===i&&(o=34836),5131===i&&(o=34842),5121===i&&(o=32856)),33325!==o&&33326!==o&&34842!==o&&34836!==o||e.get("EXT_color_buffer_float"),o}function x(t){return t===mt||t===_t||t===gt?9728:9729}function w(e){const n=e.target;n.removeEventListener("dispose",w),function(e){const n=r.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),r.remove(e)}(n),n.isVideoTexture&&h.delete(n),s.memory.textures--}function S(e){const n=e.target;n.removeEventListener("dispose",S),function(e){const n=e.texture,i=r.get(e),o=r.get(n);if(!e)return;void 0!==o.__webglTexture&&t.deleteTexture(o.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);r.remove(n),r.remove(e)}(n),s.memory.textures--}let M=0;function T(t,e){const i=r.get(t);if(t.isVideoTexture&&function(t){const e=s.render.frame;h.get(t)!==e&&(h.set(t,e),t.update())}(t),t.version>0&&i.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void P(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,i.__webglTexture)}function C(e,i){const s=r.get(e);e.version>0&&s.__version!==e.version?function(e,r,i){if(6!==r.image.length)return;L(e,r),n.activeTexture(33984+i),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const s=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),c=r.image[0]&&r.image[0].isDataTexture,p=[];for(let t=0;t<6;t++)p[t]=s||c?c?r.image[t].image:r.image[t]:_(r.image[t],!1,!0,l);const u=p[0],h=y(u)||a,d=o.convert(r.format),f=o.convert(r.type),m=v(r.internalFormat,d,f);let x;if(E(34067,r,h),s){for(let t=0;t<6;t++){x=p[t].mipmaps;for(let e=0;e<x.length;e++){const i=x[e];r.format!==Nt&&r.format!==Ft?null!==d?n.compressedTexImage2D(34069+t,e,m,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,e,m,i.width,i.height,0,d,f,i.data)}}e.__maxMipLevel=x.length-1}else{x=r.mipmaps;for(let t=0;t<6;t++)if(c){n.texImage2D(34069+t,0,m,p[t].width,p[t].height,0,d,f,p[t].data);for(let e=0;e<x.length;e++){const r=x[e].image[t].image;n.texImage2D(34069+t,e+1,m,r.width,r.height,0,d,f,r.data)}}else{n.texImage2D(34069+t,0,m,d,f,p[t]);for(let e=0;e<x.length;e++){const r=x[e];n.texImage2D(34069+t,e+1,m,d,f,r.image[t])}}e.__maxMipLevel=x.length}g(r,h)&&b(34067,r,u.width,u.height);e.__version=r.version,r.onUpdate&&r.onUpdate(r)}(s,e,i):(n.activeTexture(33984+i),n.bindTexture(34067,s.__webglTexture))}const z={[ht]:10497,[dt]:33071,[ft]:33648},A={[mt]:9728,[_t]:9984,[gt]:9986,[vt]:9729,[xt]:9985,[St]:9987};function E(n,o,s){if(s?(t.texParameteri(n,10242,z[o.wrapS]),t.texParameteri(n,10243,z[o.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,z[o.wrapR]),t.texParameteri(n,10240,A[o.magFilter]),t.texParameteri(n,10241,A[o.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),o.wrapS===dt&&o.wrapT===dt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,x(o.magFilter)),t.texParameteri(n,10241,x(o.minFilter)),o.minFilter!==mt&&o.minFilter!==vt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const s=e.get("EXT_texture_filter_anisotropic");if(o.type===Pt&&!1===e.has("OES_texture_float_linear"))return;if(!1===a&&o.type===Rt&&!1===e.has("OES_texture_half_float_linear"))return;(o.anisotropy>1||r.get(o).__currentAnisotropy)&&(t.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),r.get(o).__currentAnisotropy=o.anisotropy)}}function L(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",w),e.__webglTexture=t.createTexture(),s.memory.textures++)}function P(e,r,i){let s=3553;r.isDataTexture2DArray&&(s=35866),r.isDataTexture3D&&(s=32879),L(e,r),n.activeTexture(33984+i),n.bindTexture(s,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const c=function(t){return!a&&(t.wrapS!==dt||t.wrapT!==dt||t.minFilter!==mt&&t.minFilter!==vt)}(r)&&!1===y(r.image),l=_(r.image,c,!1,p),u=y(l)||a,h=o.convert(r.format);let d,f=o.convert(r.type),m=v(r.internalFormat,h,f);E(s,r,u);const x=r.mipmaps;if(r.isDepthTexture)m=6402,a?m=r.type===Pt?36012:r.type===Lt?33190:r.type===jt?35056:33189:r.type===Pt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===kt&&6402===m&&r.type!==At&&r.type!==Lt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=At,f=o.convert(r.type)),r.format===Vt&&6402===m&&(m=34041,r.type!==jt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=jt,f=o.convert(r.type))),n.texImage2D(3553,0,m,l.width,l.height,0,h,f,null);else if(r.isDataTexture)if(x.length>0&&u){for(let t=0,e=x.length;t<e;t++)d=x[t],n.texImage2D(3553,t,m,d.width,d.height,0,h,f,d.data);r.generateMipmaps=!1,e.__maxMipLevel=x.length-1}else n.texImage2D(3553,0,m,l.width,l.height,0,h,f,l.data),e.__maxMipLevel=0;else if(r.isCompressedTexture){for(let t=0,e=x.length;t<e;t++)d=x[t],r.format!==Nt&&r.format!==Ft?null!==h?n.compressedTexImage2D(3553,t,m,d.width,d.height,0,d.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,m,d.width,d.height,0,h,f,d.data);e.__maxMipLevel=x.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,m,l.width,l.height,l.depth,0,h,f,l.data),e.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,m,l.width,l.height,l.depth,0,h,f,l.data),e.__maxMipLevel=0;else if(x.length>0&&u){for(let t=0,e=x.length;t<e;t++)d=x[t],n.texImage2D(3553,t,m,h,f,d);r.generateMipmaps=!1,e.__maxMipLevel=x.length-1}else n.texImage2D(3553,0,m,h,f,l),e.__maxMipLevel=0;g(r,u)&&b(s,r,l.width,l.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function R(e,i,s,a){const c=i.texture,l=o.convert(c.format),p=o.convert(c.type),u=v(c.internalFormat,l,p);32879===a||35866===a?n.texImage3D(a,0,u,i.width,i.height,i.depth,0,l,p,null):n.texImage2D(a,0,u,i.width,i.height,0,l,p,null),n.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,s,a,r.get(c).__webglTexture,0),n.bindFramebuffer(36160,null)}function D(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Pt?i=36012:e.type===Lt&&(i=33190));const r=O(n);t.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else t.renderbufferStorage(36161,i,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const e=O(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=n.texture,i=o.convert(e.format),s=o.convert(e.type),a=v(e.internalFormat,i,s);if(r){const e=O(n);t.renderbufferStorageMultisample(36161,e,a,n.width,n.height)}else t.renderbufferStorage(36161,a,n.width,n.height)}t.bindRenderbuffer(36161,null)}function I(e){const i=r.get(e),o=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(o)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),T(i.depthTexture,0);const o=r.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===kt)t.framebufferTexture2D(36160,36096,3553,o,0);else{if(i.depthTexture.format!==Vt)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,o,0)}}(i.__webglFramebuffer,e)}else if(o){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=t.createRenderbuffer(),D(i.__webglDepthbuffer[r],e,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),D(i.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function O(t){return a&&t.isWebGLMultisampleRenderTarget?Math.min(u,t.samples):0}let j=!1,B=!1;this.allocateTextureUnit=function(){const t=M;return t>=c&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+c),M+=1,t},this.resetTextureUnits=function(){M=0},this.setTexture2D=T,this.setTexture2DArray=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?P(i,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?P(i,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=C,this.setupRenderTarget=function(e){const i=e.texture,c=r.get(e),l=r.get(i);e.addEventListener("dispose",S),l.__webglTexture=t.createTexture(),l.__version=i.version,s.memory.textures++;const p=!0===e.isWebGLCubeRenderTarget,u=!0===e.isWebGLMultisampleRenderTarget,h=i.isDataTexture3D||i.isDataTexture2DArray,d=y(e)||a;if(!a||i.format!==Ft||i.type!==Pt&&i.type!==Rt||(i.format=Nt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),p){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else if(c.__webglFramebuffer=t.createFramebuffer(),u)if(a){c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,c.__webglColorRenderbuffer);const r=o.convert(i.format),s=o.convert(i.type),a=v(i.internalFormat,r,s),l=O(e);t.renderbufferStorageMultisample(36161,l,a,e.width,e.height),n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,c.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),D(c.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(p){n.bindTexture(34067,l.__webglTexture),E(34067,i,d);for(let t=0;t<6;t++)R(c.__webglFramebuffer[t],e,36064,34069+t);g(i,d)&&b(34067,i,e.width,e.height),n.bindTexture(34067,null)}else{let t=3553;if(h)if(a){t=i.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(t,l.__webglTexture),E(t,i,d),R(c.__webglFramebuffer,e,36064,t),g(i,d)&&b(3553,i,e.width,e.height),n.bindTexture(3553,null)}e.depthBuffer&&I(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(g(e,y(t)||a)){const i=t.isWebGLCubeRenderTarget?34067:3553,o=r.get(e).__webglTexture;n.bindTexture(i,o),b(i,e,t.width,t.height),n.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(a){const i=e.width,o=e.height;let s=16384;e.depthBuffer&&(s|=256),e.stencilBuffer&&(s|=1024);const a=r.get(e);n.bindFramebuffer(36008,a.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,a.__webglFramebuffer),t.blitFramebuffer(0,0,i,o,0,0,i,o,s,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,a.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===j&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don\'t use render targets as textures. Use their .texture property instead."),j=!0),t=t.texture),T(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don\'t use cube render targets as textures. Use their .texture property instead."),B=!0),t=t.texture),C(t,e)}}function Ja(t,e,n){const r=n.isWebGL2;return{convert:function(t){let n;if(t===Tt)return 5121;if(t===Dt)return 32819;if(t===It)return 32820;if(t===Ot)return 33635;if(t===Ct)return 5120;if(t===zt)return 5122;if(t===At)return 5123;if(t===Et)return 5124;if(t===Lt)return 5125;if(t===Pt)return 5126;if(t===Rt)return r?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(t===Bt)return 6406;if(t===Ft)return 6407;if(t===Nt)return 6408;if(t===Ht)return 6409;if(t===Gt)return 6410;if(t===kt)return 6402;if(t===Vt)return 34041;if(t===Wt)return 6403;if(t===qt)return 36244;if(t===Yt)return 33319;if(t===Xt)return 33320;if(t===Zt)return 36248;if(t===Jt)return 36249;if(t===Qt||t===Kt||t===$t||t===te){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(t===Qt)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Kt)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===$t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===te)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===ee||t===ne||t===re||t===ie){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(t===ee)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===ne)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===re)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===ie)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===oe)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===se||t===ae)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(t===se)return n.COMPRESSED_RGB8_ETC2;if(t===ae)return n.COMPRESSED_RGBA8_ETC2_EAC}return t===ce||t===le||t===pe||t===ue||t===he||t===de||t===fe||t===me||t===_e||t===ye||t===ge||t===be||t===ve||t===xe||t===Se||t===Me||t===Te||t===Ce||t===ze||t===Ae||t===Ee||t===Le||t===Pe||t===Re||t===De||t===Ie||t===Oe||t===je?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):t===we?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===jt?r?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class Qa extends Oo{constructor(t=[]){super(),this.cameras=t}}Qa.prototype.isArrayCamera=!0;class Ka extends di{constructor(){super(),this.type="Group"}}Ka.prototype.isGroup=!0;const $a={type:"move"};class tc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Ka,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Ka,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ar,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ar),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Ka,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ar,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ar),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,i=null,o=null;const s=this._targetRay,a=this._grip,c=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent($a))),c&&t.hand){o=!0;for(const r of t.hand.values()){const t=e.getJointPose(r,n);if(void 0===c.joints[r.jointName]){const t=new Ka;t.matrixAutoUpdate=!1,t.visible=!1,c.joints[r.jointName]=t,c.add(t)}const i=c.joints[r.jointName];null!==t&&(i.matrix.fromArray(t.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.jointRadius=t.radius),i.visible=null!==t}const r=c.joints["index-finger-tip"],i=c.joints["thumb-tip"],s=r.position.distanceTo(i.position),a=.02,l=.005;c.inputState.pinching&&s>a+l?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&s<=a-l&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==a&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==r),null!==a&&(a.visible=null!==i),null!==c&&(c.visible=null!==o),this}}class ec extends Bn{constructor(t,e){super();const n=this,r=t.state;let i=null,o=1,s=null,a="local-floor",c=null;const l=[],p=new Map,u=new Oo;u.layers.enable(1),u.viewport=new rr;const h=new Oo;h.layers.enable(2),h.viewport=new rr;const d=[u,h],f=new Qa;f.layers.enable(1),f.layers.enable(2);let m=null,_=null;function y(t){const e=p.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function g(){p.forEach((function(t,e){t.disconnect(e)})),p.clear(),m=null,_=null,r.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),M.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function b(t){const e=i.inputSources;for(let t=0;t<l.length;t++)p.set(e[t],l[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],r=p.get(n);r&&(r.dispatchEvent({type:"disconnected",data:n}),p.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],r=p.get(n);r&&r.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=l[t];return void 0===e&&(e=new tc,l[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=l[t];return void 0===e&&(e=new tc,l[t]=e),e.getGripSpace()},this.getHand=function(t){let e=l[t];return void 0===e&&(e=new tc,l[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=async function(t){if(i=t,null!==i){i.addEventListener("select",y),i.addEventListener("selectstart",y),i.addEventListener("selectend",y),i.addEventListener("squeeze",y),i.addEventListener("squeezestart",y),i.addEventListener("squeezeend",y),i.addEventListener("end",g),i.addEventListener("inputsourceschange",b);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const r={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:o},c=new XRWebGLLayer(i,e,r);i.updateRenderState({baseLayer:c}),s=await i.requestReferenceSpace(a),M.setContext(i),M.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const v=new ar,x=new ar;function w(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){f.near=h.near=u.near=t.near,f.far=h.far=u.far=t.far,m===f.near&&_===f.far||(i.updateRenderState({depthNear:f.near,depthFar:f.far}),m=f.near,_=f.far);const e=t.parent,n=f.cameras;w(f,e);for(let t=0;t<n.length;t++)w(n[t],e);t.matrixWorld.copy(f.matrixWorld),t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const r=t.children;for(let t=0,e=r.length;t<e;t++)r[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){v.setFromMatrixPosition(e.matrixWorld),x.setFromMatrixPosition(n.matrixWorld);const r=v.distanceTo(x),i=e.projectionMatrix.elements,o=n.projectionMatrix.elements,s=i[14]/(i[10]-1),a=i[14]/(i[10]+1),c=(i[9]+1)/i[5],l=(i[9]-1)/i[5],p=(i[8]-1)/i[0],u=(o[8]+1)/o[0],h=s*p,d=s*u,f=r/(-p+u),m=f*-p;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const _=s+f,y=a+f,g=h-m,b=d+(r-m),w=c*a/y*_,S=l*a/y*_;t.projectionMatrix.makePerspective(g,b,w,S,_,y)}(f,u,h):f.projectionMatrix.copy(u.projectionMatrix),f};let S=null;const M=new ko;M.setAnimationLoop((function(t,e){if(c=e.getViewerPose(s),null!==c){const t=c.views,e=i.renderState.baseLayer;r.bindXRFramebuffer(e.framebuffer);let n=!1;t.length!==f.cameras.length&&(f.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const i=t[r],o=e.getViewport(i),s=d[r];s.matrix.fromArray(i.transform.matrix),s.projectionMatrix.fromArray(i.projectionMatrix),s.viewport.set(o.x,o.y,o.width,o.height),0===r&&f.matrix.copy(s.matrix),!0===n&&f.cameras.push(s)}}const n=i.inputSources;for(let t=0;t<l.length;t++){const r=l[t],i=n[t];r.update(i,e,s)}S&&S(t,e)})),this.setAnimationLoop=function(t){S=t},this.dispose=function(){}}}function nc(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const r=t.get(n).envMap;if(r){e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const i=t.get(r).__maxMipLevel;void 0!==i&&(e.maxMipLevel.value=i)}let i,o;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(i=n.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix)),n.aoMap?o=n.aoMap:n.lightMap&&(o=n.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uv2Transform.value.copy(o.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===m&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===m&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,i,o){r.isMeshBasicMaterial?e(t,r):r.isMeshLambertMaterial?(e(t,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,r)):r.isMeshToonMaterial?(e(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshPhongMaterial?(e(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshStandardMaterial?(e(t,r),r.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===m&&t.clearcoatNormalScale.value.negate());t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,r):n(t,r)):r.isMeshMatcapMaterial?(e(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDepthMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDistanceMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?(e(t,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let i;e.map?i=e.map:e.alphaMap&&(i=e.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,r,i,o):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function rc(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,r=void 0!==t.alpha&&t.alpha,i=void 0===t.depth||t.depth,o=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",p=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u=null,h=null;const d=[],f=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Qe,this.physicallyCorrectLights=!1,this.toneMapping=K,this.toneMappingExposure=1;const m=this;let _=!1,y=0,g=0,b=null,v=-1,x=null;const w=new rr,S=new rr;let M=null,T=e.width,C=e.height,z=1,A=null,E=null;const L=new rr(0,0,T,C),P=new rr(0,0,T,C);let R=!1;const D=new Uo;let I=!1,O=!1;const j=new Fr,B=new ar,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function N(){return null===b?z:1}let H,G,U,k,V,W,q,Y,X,Z,J,Q,$,tt,et,nt,rt,it,ot,st,at,ct,lt=n;function pt(t,n){for(let r=0;r<t.length;r++){const i=t[r],o=e.getContext(i,n);if(null!==o)return o}return null}try{const t={alpha:r,depth:i,stencil:o,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:p};if(e.addEventListener("webglcontextlost",dt,!1),e.addEventListener("webglcontextrestored",ft,!1),null===lt){const e=["webgl2","webgl","experimental-webgl"];if(!0===m.isWebGL1Renderer&&e.shift(),lt=pt(e,t),null===lt)throw pt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===lt.getShaderPrecisionFormat&&(lt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function ut(){H=new es(lt),G=new Ko(lt,H,t),H.init(G),at=new Ja(lt,H,G),U=new Xa(lt,H,G),k=new is(lt),V=new Ia,W=new Za(lt,H,U,V,G,at,k),q=new ts(m),Y=new Vo(lt,G),ct=new Jo(lt,H,Y,G),X=new ns(lt,Y,k,ct),Z=new cs(lt,X,Y,k),it=new as(lt),et=new $o(V),J=new Da(m,q,H,G,ct,et),Q=new nc(V),$=new Fa(V),tt=new Va(H,G),rt=new Zo(m,q,U,Z,a),nt=new Ya(m,Z,G),ot=new Qo(lt,H,k,G),st=new rs(lt,H,k,G),k.programs=J.programs,m.capabilities=G,m.extensions=H,m.properties=V,m.renderLists=$,m.shadowMap=nt,m.state=U,m.info=k}ut();const ht=new ec(m,lt);function dt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function ft(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const t=k.autoReset,e=nt.enabled,n=nt.autoUpdate,r=nt.needsUpdate,i=nt.type;ut(),k.autoReset=t,nt.enabled=e,nt.autoUpdate=n,nt.needsUpdate=r,nt.type=i}function mt(t){const e=t.target;e.removeEventListener("dispose",mt),function(t){(function(t){const e=V.get(t).programs;void 0!==e&&e.forEach((function(t){J.releaseProgram(t)}))})(t),V.remove(t)}(e)}this.xr=ht,this.getContext=function(){return lt},this.getContextAttributes=function(){return lt.getContextAttributes()},this.forceContextLoss=function(){const t=H.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=H.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(t){void 0!==t&&(z=t,this.setSize(T,C,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new Jn),t.set(T,C)},this.setSize=function(t,n,r){ht.isPresenting?console.warn("THREE.WebGLRenderer: Can\'t change size while VR device is presenting."):(T=t,C=n,e.width=Math.floor(t*z),e.height=Math.floor(n*z),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new Jn),t.set(T*z,C*z).floor()},this.setDrawingBufferSize=function(t,n,r){T=t,C=n,z=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new rr),t.copy(w)},this.getViewport=function(t){return t.copy(L)},this.setViewport=function(t,e,n,r){t.isVector4?L.set(t.x,t.y,t.z,t.w):L.set(t,e,n,r),U.viewport(w.copy(L).multiplyScalar(z).floor())},this.getScissor=function(t){return t.copy(P)},this.setScissor=function(t,e,n,r){t.isVector4?P.set(t.x,t.y,t.z,t.w):P.set(t,e,n,r),U.scissor(S.copy(P).multiplyScalar(z).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(t){U.setScissorTest(R=t)},this.setOpaqueSort=function(t){A=t},this.setTransparentSort=function(t){E=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new Bi),t.copy(rt.getClearColor())},this.setClearColor=function(){rt.setClearColor.apply(rt,arguments)},this.getClearAlpha=function(){return rt.getClearAlpha()},this.setClearAlpha=function(){rt.setClearAlpha.apply(rt,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),lt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",dt,!1),e.removeEventListener("webglcontextrestored",ft,!1),$.dispose(),tt.dispose(),V.dispose(),q.dispose(),Z.dispose(),ct.dispose(),ht.dispose(),ht.removeEventListener("sessionstart",yt),ht.removeEventListener("sessionend",gt),bt.stop()},this.renderBufferImmediate=function(t,e){ct.initAttributes();const n=V.get(t);t.hasPositions&&!n.position&&(n.position=lt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=lt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=lt.createBuffer()),t.hasColors&&!n.color&&(n.color=lt.createBuffer());const r=e.getAttributes();t.hasPositions&&(lt.bindBuffer(34962,n.position),lt.bufferData(34962,t.positionArray,35048),ct.enableAttribute(r.position),lt.vertexAttribPointer(r.position,3,5126,!1,0,0)),t.hasNormals&&(lt.bindBuffer(34962,n.normal),lt.bufferData(34962,t.normalArray,35048),ct.enableAttribute(r.normal),lt.vertexAttribPointer(r.normal,3,5126,!1,0,0)),t.hasUvs&&(lt.bindBuffer(34962,n.uv),lt.bufferData(34962,t.uvArray,35048),ct.enableAttribute(r.uv),lt.vertexAttribPointer(r.uv,2,5126,!1,0,0)),t.hasColors&&(lt.bindBuffer(34962,n.color),lt.bufferData(34962,t.colorArray,35048),ct.enableAttribute(r.color),lt.vertexAttribPointer(r.color,3,5126,!1,0,0)),ct.disableUnusedAttributes(),lt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,r,i,o){null===e&&(e=F);const s=i.isMesh&&i.matrixWorld.determinant()<0,a=Ct(t,e,r,i);U.setMaterial(r,s);let c=n.index;const l=n.attributes.position;if(null===c){if(void 0===l||0===l.count)return}else if(0===c.count)return;let p,u=1;!0===r.wireframe&&(c=X.getWireframeAttribute(n),u=2),(r.morphTargets||r.morphNormals)&&it.update(i,n,r,a),ct.setup(i,r,a,n,c);let h=ot;null!==c&&(p=Y.get(c),h=st,h.setIndex(p));const d=null!==c?c.count:l.count,f=n.drawRange.start*u,m=n.drawRange.count*u,_=null!==o?o.start*u:0,y=null!==o?o.count*u:1/0,g=Math.max(f,_),b=Math.min(d,f+m,_+y)-1,v=Math.max(0,b-g+1);if(0!==v){if(i.isMesh)!0===r.wireframe?(U.setLineWidth(r.wireframeLinewidth*N()),h.setMode(1)):h.setMode(4);else if(i.isLine){let t=r.linewidth;void 0===t&&(t=1),U.setLineWidth(t*N()),i.isLineSegments?h.setMode(1):i.isLineLoop?h.setMode(2):h.setMode(3)}else i.isPoints?h.setMode(0):i.isSprite&&h.setMode(4);if(i.isInstancedMesh)h.renderInstances(g,v,i.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);h.renderInstances(g,v,t)}else h.render(g,v)}},this.compile=function(t,e){h=tt.get(t),h.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(h.pushLight(t),t.castShadow&&h.pushShadow(t))})),h.setupLights(),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++){St(n[r],t,e)}else St(n,t,e)}))};let _t=null;function yt(){bt.stop()}function gt(){bt.start()}const bt=new ko;function vt(t,e,n,r){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)h.pushLight(t),t.castShadow&&h.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||D.intersectsSprite(t)){r&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j);const e=Z.update(t),i=t.material;i.visible&&u.push(t,e,i,n,B.z,null)}}else if(t.isImmediateRenderObject)r&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j),u.push(t,null,t.material,n,B.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==k.render.frame&&(t.skeleton.update(),t.skeleton.frame=k.render.frame),!t.frustumCulled||D.intersectsObject(t))){r&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(j);const e=Z.update(t),i=t.material;if(Array.isArray(i)){const r=e.groups;for(let o=0,s=r.length;o<s;o++){const s=r[o],a=i[s.materialIndex];a&&a.visible&&u.push(t,e,a,n,B.z,s)}}else i.visible&&u.push(t,e,i,n,B.z,null)}const i=t.children;for(let t=0,o=i.length;t<o;t++)vt(i[t],e,n,r)}function xt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,o=t.length;i<o;i++){const o=t[i],s=o.object,a=o.geometry,c=null===r?o.material:r,l=o.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,r=t.length;n<r;n++){const r=t[n];s.layers.test(r.layers)&&(U.viewport(w.copy(r.viewport)),h.setupLightsView(r),wt(s,e,r,a,c,l))}}else wt(s,e,n,a,c,l)}}function wt(t,e,n,r,i,o){if(t.onBeforeRender(m,e,n,r,i,o),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const r=Ct(n,e,i,t);U.setMaterial(i),ct.reset(),function(t,e){t.render((function(t){m.renderBufferImmediate(t,e)}))}(t,r)}else m.renderBufferDirect(n,e,r,i,t,o);t.onAfterRender(m,e,n,r,i,o)}function St(t,e,n){!0!==e.isScene&&(e=F);const r=V.get(t),i=h.state.lights,o=h.state.shadowsArray,s=i.state.version,a=J.getParameters(t,i.state,o,e,n),c=J.getProgramCacheKey(a);let l=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=q.get(t.envMap||r.environment),void 0===l&&(t.addEventListener("dispose",mt),l=new Map,r.programs=l);let p=l.get(c);if(void 0!==p){if(r.currentProgram===p&&r.lightsStateVersion===s)return Mt(t,a),p}else a.uniforms=J.getUniforms(t),t.onBuild(a,m),t.onBeforeCompile(a,m),p=J.acquireProgram(a,c),l.set(c,p),r.uniforms=a.uniforms;const u=r.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=et.uniform),Mt(t,a),r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=s,r.needsLights&&(u.ambientLightColor.value=i.state.ambient,u.lightProbe.value=i.state.probe,u.directionalLights.value=i.state.directional,u.directionalLightShadows.value=i.state.directionalShadow,u.spotLights.value=i.state.spot,u.spotLightShadows.value=i.state.spotShadow,u.rectAreaLights.value=i.state.rectArea,u.ltc_1.value=i.state.rectAreaLTC1,u.ltc_2.value=i.state.rectAreaLTC2,u.pointLights.value=i.state.point,u.pointLightShadows.value=i.state.pointShadow,u.hemisphereLights.value=i.state.hemi,u.directionalShadowMap.value=i.state.directionalShadowMap,u.directionalShadowMatrix.value=i.state.directionalShadowMatrix,u.spotShadowMap.value=i.state.spotShadowMap,u.spotShadowMatrix.value=i.state.spotShadowMatrix,u.pointShadowMap.value=i.state.pointShadowMap,u.pointShadowMatrix.value=i.state.pointShadowMatrix);const d=p.getUniforms(),f=ha.seqWithValue(d.seq,u);return r.currentProgram=p,r.uniformsList=f,p}function Mt(t,e){const n=V.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function Ct(t,e,n,r){!0!==e.isScene&&(e=F),W.resetTextureUnits();const i=e.fog,o=n.isMeshStandardMaterial?e.environment:null,s=null===b?m.outputEncoding:b.texture.encoding,a=q.get(n.envMap||o),c=!0===n.vertexColors&&r.geometry&&r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize,l=V.get(n),p=h.state.lights;if(!0===I&&(!0===O||t!==x)){const e=t===x&&n.id===v;et.setState(n,t,e)}let u=!1;n.version===l.__version?l.needsLights&&l.lightsStateVersion!==p.state.version?u=!0:l.outputEncoding!==s?u=!0:r.isInstancedMesh&&!1===l.instancing?u=!0:r.isInstancedMesh||!0!==l.instancing?l.envMap!==a?u=!0:n.fog&&l.fog!==i?u=!0:void 0===l.numClippingPlanes||l.numClippingPlanes===et.numPlanes&&l.numIntersection===et.numIntersection?l.vertexAlphas!==c&&(u=!0):u=!0:u=!0:(u=!0,l.__version=n.version);let d=l.currentProgram;!0===u&&(d=St(n,e,r));let f=!1,_=!1,y=!1;const g=d.getUniforms(),w=l.uniforms;if(U.useProgram(d.program)&&(f=!0,_=!0,y=!0),n.id!==v&&(v=n.id,_=!0),f||x!==t){if(g.setValue(lt,"projectionMatrix",t.projectionMatrix),G.logarithmicDepthBuffer&&g.setValue(lt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),x!==t&&(x=t,_=!0,y=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=g.map.cameraPosition;void 0!==e&&e.setValue(lt,B.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(lt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(lt,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){g.setOptional(lt,r,"bindMatrix"),g.setOptional(lt,r,"bindMatrixInverse");const t=r.skeleton;if(t){const e=t.bones;if(G.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=Yn(n),n=Math.max(n,4);const r=new Float32Array(n*n*4);r.set(t.boneMatrices);const i=new No(r,n,n,Nt,Pt);t.boneMatrices=r,t.boneTexture=i,t.boneTextureSize=n}g.setValue(lt,"boneTexture",t.boneTexture,W),g.setValue(lt,"boneTextureSize",t.boneTextureSize)}else g.setOptional(lt,t,"boneMatrices")}}var S,M;return(_||l.receiveShadow!==r.receiveShadow)&&(l.receiveShadow=r.receiveShadow,g.setValue(lt,"receiveShadow",r.receiveShadow)),_&&(g.setValue(lt,"toneMappingExposure",m.toneMappingExposure),g.setValue(lt,"tonemappingLUT",m.tonemappingLUT,W),l.needsLights&&(M=y,(S=w).ambientLightColor.needsUpdate=M,S.lightProbe.needsUpdate=M,S.directionalLights.needsUpdate=M,S.directionalLightShadows.needsUpdate=M,S.pointLights.needsUpdate=M,S.pointLightShadows.needsUpdate=M,S.spotLights.needsUpdate=M,S.spotLightShadows.needsUpdate=M,S.rectAreaLights.needsUpdate=M,S.hemisphereLights.needsUpdate=M),i&&n.fog&&Q.refreshFogUniforms(w,i),Q.refreshMaterialUniforms(w,n,z,C),ha.upload(lt,l.uniformsList,w,W)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ha.upload(lt,l.uniformsList,w,W),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(lt,"center",r.center),g.setValue(lt,"modelViewMatrix",r.modelViewMatrix),g.setValue(lt,"normalMatrix",r.normalMatrix),g.setValue(lt,"modelMatrix",r.matrixWorld),d}bt.setAnimationLoop((function(t){_t&&_t(t)})),"undefined"!=typeof window&&bt.setContext(window),this.setAnimationLoop=function(t){_t=t,ht.setAnimationLoop(t),null===t?bt.stop():bt.start()},ht.addEventListener("sessionstart",yt),ht.addEventListener("sessionend",gt),this.render=function(t,e){let n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===_)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ht.enabled&&!0===ht.isPresenting&&(e=ht.getCamera(e)),!0===t.isScene&&t.onBeforeRender(m,t,e,n||b),h=tt.get(t,f.length),h.init(),f.push(h),j.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),D.setFromProjectionMatrix(j),O=this.localClippingEnabled,I=et.init(this.clippingPlanes,O,e),u=$.get(t,d.length),u.init(),d.push(u),vt(t,e,0,m.sortObjects),u.finish(),!0===m.sortObjects&&u.sort(A,E),!0===I&&et.beginShadows();const i=h.state.shadowsArray;nt.render(i,t,e),h.setupLights(),h.setupLightsView(e),!0===I&&et.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),rt.render(u,t,e,r);const o=u.opaque,s=u.transparent;o.length>0&&xt(o,t,e),s.length>0&&xt(s,t,e),null!==b&&(W.updateRenderTargetMipmap(b),W.updateMultisampleRenderTarget(b)),!0===t.isScene&&t.onAfterRender(m,t,e),U.buffers.depth.setTest(!0),U.buffers.depth.setMask(!0),U.buffers.color.setMask(!0),U.setPolygonOffset(!1),ct.resetDefaultState(),v=-1,x=null,f.pop(),h=f.length>0?f[f.length-1]:null,d.pop(),u=d.length>0?d[d.length-1]:null},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return b},this.setRenderTarget=function(t,e=0,n=0){b=t,y=e,g=n,t&&void 0===V.get(t).__webglFramebuffer&&W.setupRenderTarget(t);let r=null,i=!1,o=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(o=!0);const s=V.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=s[e],i=!0):r=t.isWebGLMultisampleRenderTarget?V.get(t).__webglMultisampledFramebuffer:s,w.copy(t.viewport),S.copy(t.scissor),M=t.scissorTest}else w.copy(L).multiplyScalar(z).floor(),S.copy(P).multiplyScalar(z).floor(),M=R;if(U.bindFramebuffer(36160,r),U.viewport(w),U.scissor(S),U.setScissorTest(M),i){const r=V.get(t.texture);lt.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(o){const r=V.get(t.texture),i=e||0;lt.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,i)}},this.readRenderTargetPixels=function(t,e,n,r,i,o,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=V.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(a=a[s]),a){U.bindFramebuffer(36160,a);try{const s=t.texture,a=s.format,c=s.type;if(a!==Nt&&at.convert(a)!==lt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=c===Rt&&(H.has("EXT_color_buffer_half_float")||G.isWebGL2&&H.has("EXT_color_buffer_float"));if(!(c===Tt||at.convert(c)===lt.getParameter(35738)||c===Pt&&(G.isWebGL2||H.has("OES_texture_float")||H.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===lt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&lt.readPixels(e,n,r,i,at.convert(a),at.convert(c),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==b?V.get(b).__webglFramebuffer:null;U.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const r=Math.pow(2,-n),i=Math.floor(e.image.width*r),o=Math.floor(e.image.height*r),s=at.convert(e.format);W.setTexture2D(e,0),lt.copyTexImage2D(3553,n,s,t.x,t.y,i,o,0),U.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const i=e.image.width,o=e.image.height,s=at.convert(n.format),a=at.convert(n.type);W.setTexture2D(n,0),lt.pixelStorei(37440,n.flipY),lt.pixelStorei(37441,n.premultiplyAlpha),lt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?lt.texSubImage2D(3553,r,t.x,t.y,i,o,s,a,e.image.data):e.isCompressedTexture?lt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):lt.texSubImage2D(3553,r,t.x,t.y,s,a,e.image),0===r&&n.generateMipmaps&&lt.generateMipmap(3553),U.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,i=0){if(m.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:o,height:s,data:a}=n.image,c=at.convert(r.format),l=at.convert(r.type);let p;if(r.isDataTexture3D)W.setTexture3D(r,0),p=32879;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");W.setTexture2DArray(r,0),p=35866}lt.pixelStorei(37440,r.flipY),lt.pixelStorei(37441,r.premultiplyAlpha),lt.pixelStorei(3317,r.unpackAlignment);const u=lt.getParameter(3314),h=lt.getParameter(32878),d=lt.getParameter(3316),f=lt.getParameter(3315),_=lt.getParameter(32877);lt.pixelStorei(3314,o),lt.pixelStorei(32878,s),lt.pixelStorei(3316,t.min.x),lt.pixelStorei(3315,t.min.y),lt.pixelStorei(32877,t.min.z),lt.texSubImage3D(p,i,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,c,l,a),lt.pixelStorei(3314,u),lt.pixelStorei(32878,h),lt.pixelStorei(3316,d),lt.pixelStorei(3315,f),lt.pixelStorei(32877,_),0===i&&r.generateMipmaps&&lt.generateMipmap(p),U.unbindTexture()},this.initTexture=function(t){W.setTexture2D(t,0),U.unbindTexture()},this.resetState=function(){y=0,g=0,b=null,U.reset(),ct.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class ic extends rc{}ic.prototype.isWebGL1Renderer=!0;class oc{constructor(t,e=25e-5){this.name="",this.color=new Bi(t),this.density=e}clone(){return new oc(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}oc.prototype.isFogExp2=!0;class sc{constructor(t,e=1,n=1e3){this.name="",this.color=new Bi(t),this.near=e,this.far=n}clone(){return new sc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}sc.prototype.isFog=!0;class ac extends di{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}ac.prototype.isScene=!0;class cc{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Cn,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Un(),this.onUploadCallback=function(){}}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Un()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new cc(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Un()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}cc.prototype.isInterleavedBuffer=!0;const lc=new ar;class pc{constructor(t,e,n,r){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)lc.x=this.getX(e),lc.y=this.getY(e),lc.z=this.getZ(e),lc.applyMatrix4(t),this.setXYZ(e,lc.x,lc.y,lc.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)lc.x=this.getX(e),lc.y=this.getY(e),lc.z=this.getZ(e),lc.applyNormalMatrix(t),this.setXYZ(e,lc.x,lc.y,lc.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)lc.x=this.getX(e),lc.y=this.getY(e),lc.z=this.getZ(e),lc.transformDirection(t),this.setXYZ(e,lc.x,lc.y,lc.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Gi(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new pc(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}pc.prototype.isInterleavedBufferAttribute=!0;class uc extends Li{constructor(t){super(),this.type="SpriteMaterial",this.color=new Bi(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let hc;uc.prototype.isSpriteMaterial=!0;const dc=new ar,fc=new ar,mc=new ar,_c=new Jn,yc=new Jn,gc=new Fr,bc=new ar,vc=new ar,xc=new ar,wc=new Jn,Sc=new Jn,Mc=new Jn;class Tc extends di{constructor(t){if(super(),this.type="Sprite",void 0===hc){hc=new co;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new cc(t,5);hc.setIndex([0,1,2,0,2,3]),hc.setAttribute("position",new pc(e,3,0,!1)),hc.setAttribute("uv",new pc(e,2,3,!1))}this.geometry=hc,this.material=void 0!==t?t:new uc,this.center=new Jn(.5,.5)}raycast(t,e){null===t.camera&&console.error(\'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.\'),fc.setFromMatrixScale(this.matrixWorld),gc.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),mc.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&fc.multiplyScalar(-mc.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const o=this.center;Cc(bc.set(-.5,-.5,0),mc,o,fc,r,i),Cc(vc.set(.5,-.5,0),mc,o,fc,r,i),Cc(xc.set(.5,.5,0),mc,o,fc,r,i),wc.set(0,0),Sc.set(1,0),Mc.set(1,1);let s=t.ray.intersectTriangle(bc,vc,xc,!1,dc);if(null===s&&(Cc(vc.set(-.5,.5,0),mc,o,fc,r,i),Sc.set(0,1),s=t.ray.intersectTriangle(bc,xc,vc,!1,dc),null===s))return;const a=t.ray.origin.distanceTo(dc);a<t.near||a>t.far||e.push({distance:a,point:dc.clone(),uv:Ai.getUV(dc,bc,vc,xc,wc,Sc,Mc,new Jn),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Cc(t,e,n,r,i,o){_c.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(yc.x=o*_c.x-i*_c.y,yc.y=i*_c.x+o*_c.y):yc.copy(_c),t.copy(e),t.x+=yc.x,t.y+=yc.y,t.applyMatrix4(gc)}Tc.prototype.isSprite=!0;const zc=new ar,Ac=new ar;class Ec extends di{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const n=this.levels;let r;for(r=0;r<n.length&&!(e<n[r].distance);r++);return n.splice(r,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,r;for(n=1,r=e.length;n<r&&!(t<e[n].distance);n++);return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){zc.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(zc);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){zc.setFromMatrixPosition(t.matrixWorld),Ac.setFromMatrixPosition(this.matrixWorld);const n=zc.distanceTo(Ac)/t.zoom;let r,i;for(e[0].object.visible=!0,r=1,i=e.length;r<i&&n>=e[r].distance;r++)e[r-1].object.visible=!1,e[r].object.visible=!0;for(this._currentLevel=r-1;r<i;r++)e[r].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,r=n.length;t<r;t++){const r=n[t];e.object.levels.push({object:r.object.uuid,distance:r.distance})}return e}}const Lc=new ar,Pc=new rr,Rc=new rr,Dc=new ar,Ic=new Fr;class Oc extends zo{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Fr,this.bindMatrixInverse=new Fr}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new rr,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;Pc.fromBufferAttribute(r.attributes.skinIndex,t),Rc.fromBufferAttribute(r.attributes.skinWeight,t),Lc.fromBufferAttribute(r.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const r=Rc.getComponent(t);if(0!==r){const i=Pc.getComponent(t);Ic.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),e.addScaledVector(Dc.copy(Lc).applyMatrix4(Ic),r)}}return e.applyMatrix4(this.bindMatrixInverse)}}Oc.prototype.isSkinnedMesh=!0;class jc extends di{constructor(){super(),this.type="Bone"}}jc.prototype.isBone=!0;const Bc=new Fr,Fc=new Fr;class Nc{constructor(t=[],e=[]){this.uuid=Un(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Fr)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Fr;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let r=0,i=t.length;r<i;r++){const i=t[r]?t[r].matrixWorld:Fc;Bc.multiplyMatrices(i,e[r]),Bc.toArray(n,16*r)}null!==r&&(r.needsUpdate=!0)}clone(){return new Nc(this.bones,this.boneInverses)}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,r=t.bones.length;n<r;n++){const r=t.bones[n];let i=e[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new jc),this.bones.push(i),this.boneInverses.push((new Fr).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let r=0,i=e.length;r<i;r++){const i=e[r];t.bones.push(i.uuid);const o=n[r];t.boneInverses.push(o.toArray())}return t}}const Hc=new Fr,Gc=new Fr,Uc=[],kc=new zo;class Vc extends zo{constructor(t,e,n){super(t,e),this.instanceMatrix=new Gi(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(kc.geometry=this.geometry,kc.material=this.material,void 0!==kc.material)for(let i=0;i<r;i++){this.getMatrixAt(i,Hc),Gc.multiplyMatrices(n,Hc),kc.matrixWorld=Gc,kc.raycast(t,Uc);for(let t=0,n=Uc.length;t<n;t++){const n=Uc[t];n.instanceId=i,n.object=this,e.push(n)}Uc.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Gi(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Vc.prototype.isInstancedMesh=!0;class Wc extends Li{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Bi(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}Wc.prototype.isLineBasicMaterial=!0;const qc=new ar,Yc=new ar,Xc=new Fr,Zc=new Br,Jc=new Er;class Qc extends di{constructor(t=new co,e=new Wc){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)qc.fromBufferAttribute(e,t-1),Yc.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=qc.distanceTo(Yc);t.setAttribute("lineDistance",new Ji(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Line.threshold,o=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Jc.copy(n.boundingSphere),Jc.applyMatrix4(r),Jc.radius+=i,!1===t.ray.intersectsSphere(Jc))return;Xc.copy(r).invert(),Zc.copy(t.ray).applyMatrix4(Xc);const s=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=s*s,c=new ar,l=new ar,p=new ar,u=new ar,h=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,i=n.attributes.position;if(null!==r){for(let n=Math.max(0,o.start),s=Math.min(r.count,o.start+o.count)-1;n<s;n+=h){const o=r.getX(n),s=r.getX(n+1);if(c.fromBufferAttribute(i,o),l.fromBufferAttribute(i,s),Zc.distanceSqToSegment(c,l,u,p)>a)continue;u.applyMatrix4(this.matrixWorld);const h=t.ray.origin.distanceTo(u);h<t.near||h>t.far||e.push({distance:h,point:p.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else{for(let n=Math.max(0,o.start),r=Math.min(i.count,o.start+o.count)-1;n<r;n+=h){if(c.fromBufferAttribute(i,n),l.fromBufferAttribute(i,n+1),Zc.distanceSqToSegment(c,l,u,p)>a)continue;u.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(u);r<t.near||r>t.far||e.push({distance:r,point:p.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Qc.prototype.isLine=!0;const Kc=new ar,$c=new ar;class tl extends Qc{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)Kc.fromBufferAttribute(e,t),$c.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Kc.distanceTo($c);t.setAttribute("lineDistance",new Ji(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}tl.prototype.isLineSegments=!0;class el extends Qc{constructor(t,e){super(t,e),this.type="LineLoop"}}el.prototype.isLineLoop=!0;class nl extends Li{constructor(t){super(),this.type="PointsMaterial",this.color=new Bi(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}nl.prototype.isPointsMaterial=!0;const rl=new Fr,il=new Br,ol=new Er,sl=new ar;class al extends di{constructor(t=new co,e=new nl){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold,o=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ol.copy(n.boundingSphere),ol.applyMatrix4(r),ol.radius+=i,!1===t.ray.intersectsSphere(ol))return;rl.copy(r).invert(),il.copy(t.ray).applyMatrix4(rl);const s=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=s*s;if(n.isBufferGeometry){const i=n.index,s=n.attributes.position;if(null!==i){for(let n=Math.max(0,o.start),c=Math.min(i.count,o.start+o.count);n<c;n++){const o=i.getX(n);sl.fromBufferAttribute(s,o),cl(sl,o,a,r,t,e,this)}}else{for(let n=Math.max(0,o.start),i=Math.min(s.count,o.start+o.count);n<i;n++)sl.fromBufferAttribute(s,n),cl(sl,n,a,r,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function cl(t,e,n,r,i,o,s){const a=il.distanceSqToPoint(t);if(a<n){const n=new ar;il.closestPointToPoint(t,n),n.applyMatrix4(r);const c=i.ray.origin.distanceTo(n);if(c<i.near||c>i.far)return;o.push({distance:c,distanceToRay:Math.sqrt(a),point:n,index:e,face:null,object:s})}}al.prototype.isPoints=!0;class ll extends er{constructor(t,e,n,r,i,o,s,a,c){super(t,e,n,r,i,o,s,a,c),this.format=void 0!==s?s:Ft,this.minFilter=void 0!==o?o:vt,this.magFilter=void 0!==i?i:vt,this.generateMipmaps=!1;const l=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){l.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}ll.prototype.isVideoTexture=!0;class pl extends er{constructor(t,e,n,r,i,o,s,a,c,l,p,u){super(null,o,s,a,c,l,r,i,p,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}pl.prototype.isCompressedTexture=!0;class ul extends er{constructor(t,e,n,r,i,o,s,a,c){super(t,e,n,r,i,o,s,a,c),this.needsUpdate=!0}}ul.prototype.isCanvasTexture=!0;class hl extends er{constructor(t,e,n,r,i,o,s,a,c,l){if((l=void 0!==l?l:kt)!==kt&&l!==Vt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===kt&&(n=At),void 0===n&&l===Vt&&(n=jt),super(null,r,i,o,s,a,l,n,c),this.image={width:t,height:e},this.magFilter=void 0!==s?s:mt,this.minFilter=void 0!==a?a:mt,this.flipY=!1,this.generateMipmaps=!1}}hl.prototype.isDepthTexture=!0;class dl extends co{constructor(t=1,e=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},e=Math.max(3,e);const i=[],o=[],s=[],a=[],c=new ar,l=new Jn;o.push(0,0,0),s.push(0,0,1),a.push(.5,.5);for(let i=0,p=3;i<=e;i++,p+=3){const u=n+i/e*r;c.x=t*Math.cos(u),c.y=t*Math.sin(u),o.push(c.x,c.y,c.z),s.push(0,0,1),l.x=(o[p]/t+1)/2,l.y=(o[p+1]/t+1)/2,a.push(l.x,l.y)}for(let t=1;t<=e;t++)i.push(t,t+1,0);this.setIndex(i),this.setAttribute("position",new Ji(o,3)),this.setAttribute("normal",new Ji(s,3)),this.setAttribute("uv",new Ji(a,2))}}class fl extends co{constructor(t=1,e=1,n=1,r=8,i=1,o=!1,s=0,a=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:i,openEnded:o,thetaStart:s,thetaLength:a};const c=this;r=Math.floor(r),i=Math.floor(i);const l=[],p=[],u=[],h=[];let d=0;const f=[],m=n/2;let _=0;function y(n){const i=d,o=new Jn,f=new ar;let y=0;const g=!0===n?t:e,b=!0===n?1:-1;for(let t=1;t<=r;t++)p.push(0,m*b,0),u.push(0,b,0),h.push(.5,.5),d++;const v=d;for(let t=0;t<=r;t++){const e=t/r*a+s,n=Math.cos(e),i=Math.sin(e);f.x=g*i,f.y=m*b,f.z=g*n,p.push(f.x,f.y,f.z),u.push(0,b,0),o.x=.5*n+.5,o.y=.5*i*b+.5,h.push(o.x,o.y),d++}for(let t=0;t<r;t++){const e=i+t,r=v+t;!0===n?l.push(r,r+1,e):l.push(r+1,r,e),y+=3}c.addGroup(_,y,!0===n?1:2),_+=y}!function(){const o=new ar,y=new ar;let g=0;const b=(e-t)/n;for(let c=0;c<=i;c++){const l=[],_=c/i,g=_*(e-t)+t;for(let t=0;t<=r;t++){const e=t/r,i=e*a+s,c=Math.sin(i),f=Math.cos(i);y.x=g*c,y.y=-_*n+m,y.z=g*f,p.push(y.x,y.y,y.z),o.set(c,b,f).normalize(),u.push(o.x,o.y,o.z),h.push(e,1-_),l.push(d++)}f.push(l)}for(let t=0;t<r;t++)for(let e=0;e<i;e++){const n=f[e][t],r=f[e+1][t],i=f[e+1][t+1],o=f[e][t+1];l.push(n,r,o),l.push(r,i,o),g+=6}c.addGroup(_,g,0),_+=g}(),!1===o&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(l),this.setAttribute("position",new Ji(p,3)),this.setAttribute("normal",new Ji(u,3)),this.setAttribute("uv",new Ji(h,2))}}class ml extends fl{constructor(t=1,e=1,n=8,r=1,i=!1,o=0,s=2*Math.PI){super(0,t,e,n,r,i,o,s),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:o,thetaLength:s}}}class _l extends co{constructor(t,e,n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const i=[],o=[];function s(t,e,n,r){const i=r+1,o=[];for(let r=0;r<=i;r++){o[r]=[];const s=t.clone().lerp(n,r/i),a=e.clone().lerp(n,r/i),c=i-r;for(let t=0;t<=c;t++)o[r][t]=0===t&&r===i?s:s.clone().lerp(a,t/c)}for(let t=0;t<i;t++)for(let e=0;e<2*(i-t)-1;e++){const n=Math.floor(e/2);e%2==0?(a(o[t][n+1]),a(o[t+1][n]),a(o[t][n])):(a(o[t][n+1]),a(o[t+1][n+1]),a(o[t+1][n]))}}function a(t){i.push(t.x,t.y,t.z)}function c(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function l(t,e,n,r){r<0&&1===t.x&&(o[e]=t.x-1),0===n.x&&0===n.z&&(o[e]=r/2/Math.PI+.5)}function p(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new ar,r=new ar,i=new ar;for(let o=0;o<e.length;o+=3)c(e[o+0],n),c(e[o+1],r),c(e[o+2],i),s(n,r,i,t)}(r),function(t){const e=new ar;for(let n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}(n),function(){const t=new ar;for(let n=0;n<i.length;n+=3){t.x=i[n+0],t.y=i[n+1],t.z=i[n+2];const r=p(t)/2/Math.PI+.5,s=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);o.push(r,1-s)}var e;(function(){const t=new ar,e=new ar,n=new ar,r=new ar,s=new Jn,a=new Jn,c=new Jn;for(let u=0,h=0;u<i.length;u+=9,h+=6){t.set(i[u+0],i[u+1],i[u+2]),e.set(i[u+3],i[u+4],i[u+5]),n.set(i[u+6],i[u+7],i[u+8]),s.set(o[h+0],o[h+1]),a.set(o[h+2],o[h+3]),c.set(o[h+4],o[h+5]),r.copy(t).add(e).add(n).divideScalar(3);const d=p(r);l(s,h+0,t,d),l(a,h+2,e,d),l(c,h+4,n,d)}})(),function(){for(let t=0;t<o.length;t+=6){const e=o[t+0],n=o[t+2],r=o[t+4],i=Math.max(e,n,r),s=Math.min(e,n,r);i>.9&&s<.1&&(e<.2&&(o[t+0]+=1),n<.2&&(o[t+2]+=1),r<.2&&(o[t+4]+=1))}}()}(),this.setAttribute("position",new Ji(i,3)),this.setAttribute("normal",new Ji(i.slice(),3)),this.setAttribute("uv",new Ji(o,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}}class yl extends _l{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}}const gl=new ar,bl=new ar,vl=new ar,xl=new Ai;class wl extends co{constructor(t,e){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1,!0===t.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const n=Math.pow(10,4),r=Math.cos(Hn*e),i=t.getIndex(),o=t.getAttribute("position"),s=i?i.count:o.count,a=[0,0,0],c=["a","b","c"],l=new Array(3),p={},u=[];for(let t=0;t<s;t+=3){i?(a[0]=i.getX(t),a[1]=i.getX(t+1),a[2]=i.getX(t+2)):(a[0]=t,a[1]=t+1,a[2]=t+2);const{a:e,b:s,c:h}=xl;if(e.fromBufferAttribute(o,a[0]),s.fromBufferAttribute(o,a[1]),h.fromBufferAttribute(o,a[2]),xl.getNormal(vl),l[0]=`${Math.round(e.x*n)},${Math.round(e.y*n)},${Math.round(e.z*n)}`,l[1]=`${Math.round(s.x*n)},${Math.round(s.y*n)},${Math.round(s.z*n)}`,l[2]=`${Math.round(h.x*n)},${Math.round(h.y*n)},${Math.round(h.z*n)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=l[t],i=l[e],o=xl[c[t]],s=xl[c[e]],h=`${n}_${i}`,d=`${i}_${n}`;d in p&&p[d]?(vl.dot(p[d].normal)<=r&&(u.push(o.x,o.y,o.z),u.push(s.x,s.y,s.z)),p[d]=null):h in p||(p[h]={index0:a[t],index1:a[e],normal:vl.clone()})}}for(const t in p)if(p[t]){const{index0:e,index1:n}=p[t];gl.fromBufferAttribute(o,e),bl.fromBufferAttribute(o,n),u.push(gl.x,gl.y,gl.z),u.push(bl.x,bl.y,bl.z)}this.setAttribute("position",new Ji(u,3))}}const Sl=function(t,e,n){n=n||2;const r=e&&e.length,i=r?e[0]*n:t.length;let o=Ml(t,0,i,n,!0);const s=[];if(!o||o.next===o.prev)return s;let a,c,l,p,u,h,d;if(r&&(o=function(t,e,n,r){const i=[];let o,s,a,c,l;for(o=0,s=e.length;o<s;o++)a=e[o]*r,c=o<s-1?e[o+1]*r:t.length,l=Ml(t,a,c,r,!1),l===l.next&&(l.steiner=!0),i.push(Ol(l));for(i.sort(Pl),o=0;o<i.length;o++)Rl(i[o],n),n=Tl(n,n.next);return n}(t,e,o,n)),t.length>80*n){a=l=t[0],c=p=t[1];for(let e=n;e<i;e+=n)u=t[e],h=t[e+1],u<a&&(a=u),h<c&&(c=h),u>l&&(l=u),h>p&&(p=h);d=Math.max(l-a,p-c),d=0!==d?1/d:0}return Cl(o,s,n,a,c,d),s};function Ml(t,e,n,r,i){let o,s;if(i===function(t,e,n,r){let i=0;for(let o=e,s=n-r;o<n;o+=r)i+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return i}(t,e,n,r)>0)for(o=e;o<n;o+=r)s=Wl(o,t[o],t[o+1],s);else for(o=n-r;o>=e;o-=r)s=Wl(o,t[o],t[o+1],s);return s&&Nl(s,s.next)&&(ql(s),s=s.next),s}function Tl(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!Nl(r,r.next)&&0!==Fl(r.prev,r,r.next))r=r.next;else{if(ql(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function Cl(t,e,n,r,i,o,s){if(!t)return;!s&&o&&function(t,e,n,r){let i=t;do{null===i.z&&(i.z=Il(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){let e,n,r,i,o,s,a,c,l=1;do{for(n=t,t=null,o=null,s=0;n;){for(s++,r=n,a=0,e=0;e<l&&(a++,r=r.nextZ,r);e++);for(c=l;a>0||c>0&&r;)0!==a&&(0===c||!r||n.z<=r.z)?(i=n,n=n.nextZ,a--):(i=r,r=r.nextZ,c--),o?o.nextZ=i:t=i,i.prevZ=o,o=i;n=r}o.nextZ=null,l*=2}while(s>1)}(i)}(t,r,i,o);let a,c,l=t;for(;t.prev!==t.next;)if(a=t.prev,c=t.next,o?Al(t,r,i,o):zl(t))e.push(a.i/n),e.push(t.i/n),e.push(c.i/n),ql(t),t=c.next,l=c.next;else if((t=c)===l){s?1===s?Cl(t=El(Tl(t),e,n),e,n,r,i,o,2):2===s&&Ll(t,e,n,r,i,o):Cl(Tl(t),e,n,r,i,o,1);break}}function zl(t){const e=t.prev,n=t,r=t.next;if(Fl(e,n,r)>=0)return!1;let i=t.next.next;for(;i!==t.prev;){if(jl(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&Fl(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Al(t,e,n,r){const i=t.prev,o=t,s=t.next;if(Fl(i,o,s)>=0)return!1;const a=i.x<o.x?i.x<s.x?i.x:s.x:o.x<s.x?o.x:s.x,c=i.y<o.y?i.y<s.y?i.y:s.y:o.y<s.y?o.y:s.y,l=i.x>o.x?i.x>s.x?i.x:s.x:o.x>s.x?o.x:s.x,p=i.y>o.y?i.y>s.y?i.y:s.y:o.y>s.y?o.y:s.y,u=Il(a,c,e,n,r),h=Il(l,p,e,n,r);let d=t.prevZ,f=t.nextZ;for(;d&&d.z>=u&&f&&f.z<=h;){if(d!==t.prev&&d!==t.next&&jl(i.x,i.y,o.x,o.y,s.x,s.y,d.x,d.y)&&Fl(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,f!==t.prev&&f!==t.next&&jl(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Fl(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&jl(i.x,i.y,o.x,o.y,s.x,s.y,d.x,d.y)&&Fl(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;f&&f.z<=h;){if(f!==t.prev&&f!==t.next&&jl(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Fl(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function El(t,e,n){let r=t;do{const i=r.prev,o=r.next.next;!Nl(i,o)&&Hl(i,r,r.next,o)&&kl(i,o)&&kl(o,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(o.i/n),ql(r),ql(r.next),r=t=o),r=r.next}while(r!==t);return Tl(r)}function Ll(t,e,n,r,i,o){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&Bl(s,t)){let a=Vl(s,t);return s=Tl(s,s.next),a=Tl(a,a.next),Cl(s,e,n,r,i,o),void Cl(a,e,n,r,i,o)}t=t.next}s=s.next}while(s!==t)}function Pl(t,e){return t.x-e.x}function Rl(t,e){if(e=function(t,e){let n=e;const r=t.x,i=t.y;let o,s=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const t=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>s){if(s=t,t===r){if(i===n.y)return n;if(i===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!o)return null;if(r===s)return o;const a=o,c=o.x,l=o.y;let p,u=1/0;n=o;do{r>=n.x&&n.x>=c&&r!==n.x&&jl(i<l?r:s,i,c,l,i<l?s:r,i,n.x,n.y)&&(p=Math.abs(i-n.y)/(r-n.x),kl(n,t)&&(p<u||p===u&&(n.x>o.x||n.x===o.x&&Dl(o,n)))&&(o=n,u=p)),n=n.next}while(n!==a);return o}(t,e)){const n=Vl(e,t);Tl(e,e.next),Tl(n,n.next)}}function Dl(t,e){return Fl(t.prev,t,e.prev)<0&&Fl(e.next,t,t.next)<0}function Il(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Ol(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function jl(t,e,n,r,i,o,s,a){return(i-s)*(e-a)-(t-s)*(o-a)>=0&&(t-s)*(r-a)-(n-s)*(e-a)>=0&&(n-s)*(o-a)-(i-s)*(r-a)>=0}function Bl(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Hl(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(kl(t,e)&&kl(e,t)&&function(t,e){let n=t,r=!1;const i=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(Fl(t.prev,t,e.prev)||Fl(t,e.prev,e))||Nl(t,e)&&Fl(t.prev,t,t.next)>0&&Fl(e.prev,e,e.next)>0)}function Fl(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Nl(t,e){return t.x===e.x&&t.y===e.y}function Hl(t,e,n,r){const i=Ul(Fl(t,e,n)),o=Ul(Fl(t,e,r)),s=Ul(Fl(n,r,t)),a=Ul(Fl(n,r,e));return i!==o&&s!==a||(!(0!==i||!Gl(t,n,e))||(!(0!==o||!Gl(t,r,e))||(!(0!==s||!Gl(n,t,r))||!(0!==a||!Gl(n,e,r)))))}function Gl(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Ul(t){return t>0?1:t<0?-1:0}function kl(t,e){return Fl(t.prev,t,t.next)<0?Fl(t,e,t.next)>=0&&Fl(t,t.prev,e)>=0:Fl(t,e,t.prev)<0||Fl(t,t.next,e)<0}function Vl(t,e){const n=new Yl(t.i,t.x,t.y),r=new Yl(e.i,e.x,e.y),i=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function Wl(t,e,n,r){const i=new Yl(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function ql(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Yl(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Xl{static area(t){const e=t.length;let n=0;for(let r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n}static isClockWise(t){return Xl.area(t)<0}static triangulateShape(t,e){const n=[],r=[],i=[];Zl(t),Jl(n,t);let o=t.length;e.forEach(Zl);for(let t=0;t<e.length;t++)r.push(o),o+=e[t].length,Jl(n,e[t]);const s=Sl(n,r);for(let t=0;t<s.length;t+=3)i.push(s.slice(t,t+3));return i}}function Zl(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Jl(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Ql extends co{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],i=[];for(let e=0,n=t.length;e<n;e++){o(t[e])}function o(t){const o=[],s=void 0!==e.curveSegments?e.curveSegments:12,a=void 0!==e.steps?e.steps:1;let c=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,p=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:p-2,h=void 0!==e.bevelOffset?e.bevelOffset:0,d=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:Kl;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),c=e.amount);let _,y,g,b,v,x=!1;f&&(_=f.getSpacedPoints(a),x=!0,l=!1,y=f.computeFrenetFrames(a,!1),g=new ar,b=new ar,v=new ar),l||(d=0,p=0,u=0,h=0);const w=t.extractPoints(s);let S=w.shape;const M=w.holes;if(!Xl.isClockWise(S)){S=S.reverse();for(let t=0,e=M.length;t<e;t++){const e=M[t];Xl.isClockWise(e)&&(M[t]=e.reverse())}}const T=Xl.triangulateShape(S,M),C=S;for(let t=0,e=M.length;t<e;t++){const e=M[t];S=S.concat(e)}function z(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const A=S.length,E=T.length;function L(t,e,n){let r,i,o;const s=t.x-e.x,a=t.y-e.y,c=n.x-t.x,l=n.y-t.y,p=s*s+a*a,u=s*l-a*c;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(p),h=Math.sqrt(c*c+l*l),d=e.x-a/u,f=e.y+s/u,m=((n.x-l/h-d)*l-(n.y+c/h-f)*c)/(s*l-a*c);r=d+s*m-t.x,i=f+a*m-t.y;const _=r*r+i*i;if(_<=2)return new Jn(r,i);o=Math.sqrt(_/2)}else{let t=!1;s>Number.EPSILON?c>Number.EPSILON&&(t=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(l)&&(t=!0),t?(r=-a,i=s,o=Math.sqrt(p)):(r=s,i=a,o=Math.sqrt(p/2))}return new Jn(r/o,i/o)}const P=[];for(let t=0,e=C.length,n=e-1,r=t+1;t<e;t++,n++,r++)n===e&&(n=0),r===e&&(r=0),P[t]=L(C[t],C[n],C[r]);const R=[];let D,I=P.concat();for(let t=0,e=M.length;t<e;t++){const e=M[t];D=[];for(let t=0,n=e.length,r=n-1,i=t+1;t<n;t++,r++,i++)r===n&&(r=0),i===n&&(i=0),D[t]=L(e[t],e[r],e[i]);R.push(D),I=I.concat(D)}for(let t=0;t<d;t++){const e=t/d,n=p*Math.cos(e*Math.PI/2),r=u*Math.sin(e*Math.PI/2)+h;for(let t=0,e=C.length;t<e;t++){const e=z(C[t],P[t],r);B(e.x,e.y,-n)}for(let t=0,e=M.length;t<e;t++){const e=M[t];D=R[t];for(let t=0,i=e.length;t<i;t++){const i=z(e[t],D[t],r);B(i.x,i.y,-n)}}}const O=u+h;for(let t=0;t<A;t++){const e=l?z(S[t],I[t],O):S[t];x?(b.copy(y.normals[0]).multiplyScalar(e.x),g.copy(y.binormals[0]).multiplyScalar(e.y),v.copy(_[0]).add(b).add(g),B(v.x,v.y,v.z)):B(e.x,e.y,0)}for(let t=1;t<=a;t++)for(let e=0;e<A;e++){const n=l?z(S[e],I[e],O):S[e];x?(b.copy(y.normals[t]).multiplyScalar(n.x),g.copy(y.binormals[t]).multiplyScalar(n.y),v.copy(_[t]).add(b).add(g),B(v.x,v.y,v.z)):B(n.x,n.y,c/a*t)}for(let t=d-1;t>=0;t--){const e=t/d,n=p*Math.cos(e*Math.PI/2),r=u*Math.sin(e*Math.PI/2)+h;for(let t=0,e=C.length;t<e;t++){const e=z(C[t],P[t],r);B(e.x,e.y,c+n)}for(let t=0,e=M.length;t<e;t++){const e=M[t];D=R[t];for(let t=0,i=e.length;t<i;t++){const i=z(e[t],D[t],r);x?B(i.x,i.y+_[a-1].y,_[a-1].x+n):B(i.x,i.y,c+n)}}}function j(t,e){let n=t.length;for(;--n>=0;){const r=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=a+2*d;t<n;t++){const n=A*t,o=A*(t+1);N(e+r+n,e+i+n,e+i+o,e+r+o)}}}function B(t,e,n){o.push(t),o.push(e),o.push(n)}function F(t,e,i){H(t),H(e),H(i);const o=r.length/3,s=m.generateTopUV(n,r,o-3,o-2,o-1);G(s[0]),G(s[1]),G(s[2])}function N(t,e,i,o){H(t),H(e),H(o),H(e),H(i),H(o);const s=r.length/3,a=m.generateSideWallUV(n,r,s-6,s-3,s-2,s-1);G(a[0]),G(a[1]),G(a[3]),G(a[1]),G(a[2]),G(a[3])}function H(t){r.push(o[3*t+0]),r.push(o[3*t+1]),r.push(o[3*t+2])}function G(t){i.push(t.x),i.push(t.y)}!function(){const t=r.length/3;if(l){let t=0,e=A*t;for(let t=0;t<E;t++){const n=T[t];F(n[2]+e,n[1]+e,n[0]+e)}t=a+2*d,e=A*t;for(let t=0;t<E;t++){const n=T[t];F(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<E;t++){const e=T[t];F(e[2],e[1],e[0])}for(let t=0;t<E;t++){const e=T[t];F(e[0]+A*a,e[1]+A*a,e[2]+A*a)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;j(C,e),e+=C.length;for(let t=0,n=M.length;t<n;t++){const n=M[t];j(n,e),e+=n.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new Ji(r,3)),this.setAttribute("uv",new Ji(i,2)),this.computeVertexNormals()}toJSON(){const t=co.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,r=t.length;e<r;e++){const r=t[e];n.shapes.push(r.uuid)}else n.shapes.push(t.uuid);void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}}const Kl={generateTopUV:function(t,e,n,r,i){const o=e[3*n],s=e[3*n+1],a=e[3*r],c=e[3*r+1],l=e[3*i],p=e[3*i+1];return[new Jn(o,s),new Jn(a,c),new Jn(l,p)]},generateSideWallUV:function(t,e,n,r,i,o){const s=e[3*n],a=e[3*n+1],c=e[3*n+2],l=e[3*r],p=e[3*r+1],u=e[3*r+2],h=e[3*i],d=e[3*i+1],f=e[3*i+2],m=e[3*o],_=e[3*o+1],y=e[3*o+2];return Math.abs(a-p)<.01?[new Jn(s,1-c),new Jn(l,1-u),new Jn(h,1-f),new Jn(m,1-y)]:[new Jn(a,1-c),new Jn(p,1-u),new Jn(d,1-f),new Jn(_,1-y)]}};class $l extends _l{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}}class tp extends co{constructor(t,e=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e),r=kn(r,0,2*Math.PI);const i=[],o=[],s=[],a=1/e,c=new ar,l=new Jn;for(let i=0;i<=e;i++){const p=n+i*a*r,u=Math.sin(p),h=Math.cos(p);for(let n=0;n<=t.length-1;n++)c.x=t[n].x*u,c.y=t[n].y,c.z=t[n].x*h,o.push(c.x,c.y,c.z),l.x=i/e,l.y=n/(t.length-1),s.push(l.x,l.y)}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const r=e+n*t.length,o=r,s=r+t.length,a=r+t.length+1,c=r+1;i.push(o,s,c),i.push(s,a,c)}if(this.setIndex(i),this.setAttribute("position",new Ji(o,3)),this.setAttribute("uv",new Ji(s,2)),this.computeVertexNormals(),r===2*Math.PI){const n=this.attributes.normal.array,r=new ar,i=new ar,o=new ar,s=e*t.length*3;for(let e=0,a=0;e<t.length;e++,a+=3)r.x=n[a+0],r.y=n[a+1],r.z=n[a+2],i.x=n[s+a+0],i.y=n[s+a+1],i.z=n[s+a+2],o.addVectors(r,i).normalize(),n[a+0]=n[s+a+0]=o.x,n[a+1]=n[s+a+1]=o.y,n[a+2]=n[s+a+2]=o.z}}}class ep extends _l{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}}class np extends co{constructor(t,e,n){super(),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const r=[],i=[],o=[],s=[],a=new ar,c=new ar,l=new ar,p=new ar,u=new ar;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const h=e+1;for(let r=0;r<=n;r++){const h=r/n;for(let n=0;n<=e;n++){const r=n/e;t(r,h,c),i.push(c.x,c.y,c.z),r-1e-5>=0?(t(r-1e-5,h,l),p.subVectors(c,l)):(t(r+1e-5,h,l),p.subVectors(l,c)),h-1e-5>=0?(t(r,h-1e-5,l),u.subVectors(c,l)):(t(r,h+1e-5,l),u.subVectors(l,c)),a.crossVectors(p,u).normalize(),o.push(a.x,a.y,a.z),s.push(r,h)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*h+n,i=t*h+n+1,o=(t+1)*h+n+1,s=(t+1)*h+n;r.push(e,i,s),r.push(i,o,s)}this.setIndex(r),this.setAttribute("position",new Ji(i,3)),this.setAttribute("normal",new Ji(o,3)),this.setAttribute("uv",new Ji(s,2))}}class rp extends co{constructor(t=.5,e=1,n=8,r=1,i=0,o=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:o},n=Math.max(3,n);const s=[],a=[],c=[],l=[];let p=t;const u=(e-t)/(r=Math.max(1,r)),h=new ar,d=new Jn;for(let t=0;t<=r;t++){for(let t=0;t<=n;t++){const r=i+t/n*o;h.x=p*Math.cos(r),h.y=p*Math.sin(r),a.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(h.x/e+1)/2,d.y=(h.y/e+1)/2,l.push(d.x,d.y)}p+=u}for(let t=0;t<r;t++){const e=t*(n+1);for(let t=0;t<n;t++){const r=t+e,i=r,o=r+n+1,a=r+n+2,c=r+1;s.push(i,o,c),s.push(o,a,c)}}this.setIndex(s),this.setAttribute("position",new Ji(a,3)),this.setAttribute("normal",new Ji(c,3)),this.setAttribute("uv",new Ji(l,2))}}class ip extends co{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],i=[],o=[];let s=0,a=0;if(!1===Array.isArray(t))c(t);else for(let e=0;e<t.length;e++)c(t[e]),this.addGroup(s,a,e),s+=a,a=0;function c(t){const s=r.length/3,c=t.extractPoints(e);let l=c.shape;const p=c.holes;!1===Xl.isClockWise(l)&&(l=l.reverse());for(let t=0,e=p.length;t<e;t++){const e=p[t];!0===Xl.isClockWise(e)&&(p[t]=e.reverse())}const u=Xl.triangulateShape(l,p);for(let t=0,e=p.length;t<e;t++){const e=p[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){const e=l[t];r.push(e.x,e.y,0),i.push(0,0,1),o.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],r=e[0]+s,i=e[1]+s,o=e[2]+s;n.push(r,i,o),a+=3}}this.setIndex(n),this.setAttribute("position",new Ji(r,3)),this.setAttribute("normal",new Ji(i,3)),this.setAttribute("uv",new Ji(o,2))}toJSON(){const t=co.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class op extends co{constructor(t=1,e=8,n=6,r=0,i=2*Math.PI,o=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:i,thetaStart:o,thetaLength:s},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const a=Math.min(o+s,Math.PI);let c=0;const l=[],p=new ar,u=new ar,h=[],d=[],f=[],m=[];for(let h=0;h<=n;h++){const _=[],y=h/n;let g=0;0==h&&0==o?g=.5/e:h==n&&a==Math.PI&&(g=-.5/e);for(let n=0;n<=e;n++){const a=n/e;p.x=-t*Math.cos(r+a*i)*Math.sin(o+y*s),p.y=t*Math.cos(o+y*s),p.z=t*Math.sin(r+a*i)*Math.sin(o+y*s),d.push(p.x,p.y,p.z),u.copy(p).normalize(),f.push(u.x,u.y,u.z),m.push(a+g,1-y),_.push(c++)}l.push(_)}for(let t=0;t<n;t++)for(let r=0;r<e;r++){const e=l[t][r+1],i=l[t][r],s=l[t+1][r],c=l[t+1][r+1];(0!==t||o>0)&&h.push(e,i,c),(t!==n-1||a<Math.PI)&&h.push(i,s,c)}this.setIndex(h),this.setAttribute("position",new Ji(d,3)),this.setAttribute("normal",new Ji(f,3)),this.setAttribute("uv",new Ji(m,2))}}class sp extends _l{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}}class ap extends Ql{constructor(t,e={}){const n=e.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new co;const r=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(r,e),this.type="TextGeometry"}}class cp extends co{constructor(t=1,e=.4,n=8,r=6,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:i},n=Math.floor(n),r=Math.floor(r);const o=[],s=[],a=[],c=[],l=new ar,p=new ar,u=new ar;for(let o=0;o<=n;o++)for(let h=0;h<=r;h++){const d=h/r*i,f=o/n*Math.PI*2;p.x=(t+e*Math.cos(f))*Math.cos(d),p.y=(t+e*Math.cos(f))*Math.sin(d),p.z=e*Math.sin(f),s.push(p.x,p.y,p.z),l.x=t*Math.cos(d),l.y=t*Math.sin(d),u.subVectors(p,l).normalize(),a.push(u.x,u.y,u.z),c.push(h/r),c.push(o/n)}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){const n=(r+1)*t+e-1,i=(r+1)*(t-1)+e-1,s=(r+1)*(t-1)+e,a=(r+1)*t+e;o.push(n,i,a),o.push(i,s,a)}this.setIndex(o),this.setAttribute("position",new Ji(s,3)),this.setAttribute("normal",new Ji(a,3)),this.setAttribute("uv",new Ji(c,2))}}class lp extends co{constructor(t=1,e=.4,n=64,r=8,i=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:i,q:o},n=Math.floor(n),r=Math.floor(r);const s=[],a=[],c=[],l=[],p=new ar,u=new ar,h=new ar,d=new ar,f=new ar,m=new ar,_=new ar;for(let s=0;s<=n;++s){const g=s/n*i*Math.PI*2;y(g,i,o,t,h),y(g+.01,i,o,t,d),m.subVectors(d,h),_.addVectors(d,h),f.crossVectors(m,_),_.crossVectors(f,m),f.normalize(),_.normalize();for(let t=0;t<=r;++t){const i=t/r*Math.PI*2,o=-e*Math.cos(i),d=e*Math.sin(i);p.x=h.x+(o*_.x+d*f.x),p.y=h.y+(o*_.y+d*f.y),p.z=h.z+(o*_.z+d*f.z),a.push(p.x,p.y,p.z),u.subVectors(p,h).normalize(),c.push(u.x,u.y,u.z),l.push(s/n),l.push(t/r)}}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),o=(r+1)*t+e,a=(r+1)*(t-1)+e;s.push(n,i,a),s.push(i,o,a)}function y(t,e,n,r,i){const o=Math.cos(t),s=Math.sin(t),a=n/e*t,c=Math.cos(a);i.x=r*(2+c)*.5*o,i.y=r*(2+c)*s*.5,i.z=r*Math.sin(a)*.5}this.setIndex(s),this.setAttribute("position",new Ji(a,3)),this.setAttribute("normal",new Ji(c,3)),this.setAttribute("uv",new Ji(l,2))}}class pp extends co{constructor(t,e=64,n=1,r=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i};const o=t.computeFrenetFrames(e,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const s=new ar,a=new ar,c=new Jn;let l=new ar;const p=[],u=[],h=[],d=[];function f(i){l=t.getPointAt(i/e,l);const c=o.normals[i],h=o.binormals[i];for(let t=0;t<=r;t++){const e=t/r*Math.PI*2,i=Math.sin(e),o=-Math.cos(e);a.x=o*c.x+i*h.x,a.y=o*c.y+i*h.y,a.z=o*c.z+i*h.z,a.normalize(),u.push(a.x,a.y,a.z),s.x=l.x+n*a.x,s.y=l.y+n*a.y,s.z=l.z+n*a.z,p.push(s.x,s.y,s.z)}}!function(){for(let t=0;t<e;t++)f(t);f(!1===i?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=r;n++)c.x=t/e,c.y=n/r,h.push(c.x,c.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),o=(r+1)*t+e,s=(r+1)*(t-1)+e;d.push(n,i,s),d.push(i,o,s)}}()}(),this.setIndex(d),this.setAttribute("position",new Ji(p,3)),this.setAttribute("normal",new Ji(u,3)),this.setAttribute("uv",new Ji(h,2))}toJSON(){const t=co.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}class up extends co{constructor(t){if(super(),this.type="WireframeGeometry",!0===t.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const e=[],n=[0,0],r={},i=new ar;if(null!==t.index){const o=t.attributes.position,s=t.index;let a=t.groups;0===a.length&&(a=[{start:0,count:s.count,materialIndex:0}]);for(let t=0,e=a.length;t<e;++t){const e=a[t],i=e.start;for(let t=i,o=i+e.count;t<o;t+=3)for(let e=0;e<3;e++){const i=s.getX(t+e),o=s.getX(t+(e+1)%3);n[0]=Math.min(i,o),n[1]=Math.max(i,o);const a=n[0]+","+n[1];void 0===r[a]&&(r[a]={index1:n[0],index2:n[1]})}}for(const t in r){const n=r[t];i.fromBufferAttribute(o,n.index1),e.push(i.x,i.y,i.z),i.fromBufferAttribute(o,n.index2),e.push(i.x,i.y,i.z)}}else{const n=t.attributes.position;for(let t=0,r=n.count/3;t<r;t++)for(let r=0;r<3;r++){const o=3*t+r;i.fromBufferAttribute(n,o),e.push(i.x,i.y,i.z);const s=3*t+(r+1)%3;i.fromBufferAttribute(n,s),e.push(i.x,i.y,i.z)}}this.setAttribute("position",new Ji(e,3))}}var hp=Object.freeze({__proto__:null,BoxGeometry:Eo,BoxBufferGeometry:Eo,CircleGeometry:dl,CircleBufferGeometry:dl,ConeGeometry:ml,ConeBufferGeometry:ml,CylinderGeometry:fl,CylinderBufferGeometry:fl,DodecahedronGeometry:yl,DodecahedronBufferGeometry:yl,EdgesGeometry:wl,ExtrudeGeometry:Ql,ExtrudeBufferGeometry:Ql,IcosahedronGeometry:$l,IcosahedronBufferGeometry:$l,LatheGeometry:tp,LatheBufferGeometry:tp,OctahedronGeometry:ep,OctahedronBufferGeometry:ep,ParametricGeometry:np,ParametricBufferGeometry:np,PlaneGeometry:Wo,PlaneBufferGeometry:Wo,PolyhedronGeometry:_l,PolyhedronBufferGeometry:_l,RingGeometry:rp,RingBufferGeometry:rp,ShapeGeometry:ip,ShapeBufferGeometry:ip,SphereGeometry:op,SphereBufferGeometry:op,TetrahedronGeometry:sp,TetrahedronBufferGeometry:sp,TextGeometry:ap,TextBufferGeometry:ap,TorusGeometry:cp,TorusBufferGeometry:cp,TorusKnotGeometry:lp,TorusKnotBufferGeometry:lp,TubeGeometry:pp,TubeBufferGeometry:pp,WireframeGeometry:up});class dp extends Li{constructor(t){super(),this.type="ShadowMaterial",this.color=new Bi(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}dp.prototype.isShadowMaterial=!0;class fp extends Do{constructor(t){super(t),this.type="RawShaderMaterial"}}fp.prototype.isRawShaderMaterial=!0;class mp extends Li{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Bi(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=cn,this.normalScale=new Jn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this}}mp.prototype.isMeshStandardMaterial=!0;class _p extends mp{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Jn(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=kn(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Bi).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this}}_p.prototype.isMeshPhysicalMaterial=!0;class yp extends Li{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Bi(16777215),this.specular=new Bi(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=cn,this.normalScale=new Jn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}yp.prototype.isMeshPhongMaterial=!0;class gp extends Li{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Bi(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=cn,this.normalScale=new Jn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}gp.prototype.isMeshToonMaterial=!0;class bp extends Li{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=cn,this.normalScale=new Jn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}bp.prototype.isMeshNormalMaterial=!0;class vp extends Li{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Bi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}vp.prototype.isMeshLambertMaterial=!0;class xp extends Li{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Bi(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=cn,this.normalScale=new Jn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}xp.prototype.isMeshMatcapMaterial=!0;class wp extends Wc{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}wp.prototype.isLineDashedMaterial=!0;var Sp=Object.freeze({__proto__:null,ShadowMaterial:dp,SpriteMaterial:uc,RawShaderMaterial:fp,ShaderMaterial:Do,PointsMaterial:nl,MeshPhysicalMaterial:_p,MeshStandardMaterial:mp,MeshPhongMaterial:yp,MeshToonMaterial:gp,MeshNormalMaterial:bp,MeshLambertMaterial:vp,MeshDepthMaterial:Wa,MeshDistanceMaterial:qa,MeshBasicMaterial:Fi,MeshMatcapMaterial:xp,LineDashedMaterial:wp,LineBasicMaterial:Wc,Material:Li});const Mp={arraySlice:function(t,e,n){return Mp.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const r=t.length,i=new t.constructor(r);for(let o=0,s=0;s!==r;++o){const r=n[o]*e;for(let n=0;n!==e;++n)i[s++]=t[r+n]}return i},flattenJSON:function(t,e,n,r){let i=1,o=t[0];for(;void 0!==o&&void 0===o[r];)o=t[i++];if(void 0===o)return;let s=o[r];if(void 0!==s)if(Array.isArray(s))do{s=o[r],void 0!==s&&(e.push(o.time),n.push.apply(n,s)),o=t[i++]}while(void 0!==o);else if(void 0!==s.toArray)do{s=o[r],void 0!==s&&(e.push(o.time),s.toArray(n,n.length)),o=t[i++]}while(void 0!==o);else do{s=o[r],void 0!==s&&(e.push(o.time),n.push(s)),o=t[i++]}while(void 0!==o)},subclip:function(t,e,n,r,i=30){const o=t.clone();o.name=e;const s=[];for(let t=0;t<o.tracks.length;++t){const e=o.tracks[t],a=e.getValueSize(),c=[],l=[];for(let t=0;t<e.times.length;++t){const o=e.times[t]*i;if(!(o<n||o>=r)){c.push(e.times[t]);for(let n=0;n<a;++n)l.push(e.values[t*a+n])}}0!==c.length&&(e.times=Mp.convertArray(c,e.times.constructor),e.values=Mp.convertArray(l,e.values.constructor),s.push(e))}o.tracks=s;let a=1/0;for(let t=0;t<o.tracks.length;++t)a>o.tracks[t].times[0]&&(a=o.tracks[t].times[0]);for(let t=0;t<o.tracks.length;++t)o.tracks[t].shift(-1*a);return o.resetDuration(),o},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const i=n.tracks.length,o=e/r;for(let e=0;e<i;++e){const r=n.tracks[e],i=r.ValueTypeName;if("bool"===i||"string"===i)continue;const s=t.tracks.find((function(t){return t.name===r.name&&t.ValueTypeName===i}));if(void 0===s)continue;let a=0;const c=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=c/3);let l=0;const p=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=p/3);const u=r.times.length-1;let h;if(o<=r.times[0]){const t=a,e=c-a;h=Mp.arraySlice(r.values,t,e)}else if(o>=r.times[u]){const t=u*c+a,e=t+c-a;h=Mp.arraySlice(r.values,t,e)}else{const t=r.createInterpolant(),e=a,n=c-a;t.evaluate(o),h=Mp.arraySlice(t.resultBuffer,e,n)}if("quaternion"===i){(new sr).fromArray(h).normalize().conjugate().toArray(h)}const d=s.times.length;for(let t=0;t<d;++t){const e=t*p+l;if("quaternion"===i)sr.multiplyQuaternionsFlat(s.values,e,h,0,s.values,e);else{const t=p-2*l;for(let n=0;n<t;++n)s.values[e+n]-=h[n]}}}return t.blendMode=Ye,t}};class Tp{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{let o;n:{r:if(!(t<r)){for(let o=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===o)break;if(i=r,r=e[++n],t<r)break e}o=e.length;break n}if(t>=i)break t;{const s=e[1];t<s&&(n=2,i=s);for(let o=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===o)break;if(r=i,i=e[--n-1],t>=i)break e}o=n,n=0}}for(;n<o;){const r=n+o>>>1;t<e[r]?o=r:n=r+1}if(r=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r;for(let t=0;t!==r;++t)e[t]=n[i+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Tp.prototype.beforeStart_=Tp.prototype.copySampleValue_,Tp.prototype.afterEnd_=Tp.prototype.copySampleValue_;class Cp extends Tp{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ke,endingEnd:ke}}intervalChanged_(t,e,n){const r=this.parameterPositions;let i=t-2,o=t+1,s=r[i],a=r[o];if(void 0===s)switch(this.getSettings_().endingStart){case Ve:i=t,s=2*e-n;break;case We:i=r.length-2,s=e+r[i]-r[i+1];break;default:i=t,s=n}if(void 0===a)switch(this.getSettings_().endingEnd){case Ve:o=t,a=2*n-e;break;case We:o=1,a=n+r[1]-r[0];break;default:o=t-1,a=e}const c=.5*(n-e),l=this.valueSize;this._weightPrev=c/(e-s),this._weightNext=c/(a-n),this._offsetPrev=i*l,this._offsetNext=o*l}interpolate_(t,e,n,r){const i=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=t*s,c=a-s,l=this._offsetPrev,p=this._offsetNext,u=this._weightPrev,h=this._weightNext,d=(n-e)/(r-e),f=d*d,m=f*d,_=-u*m+2*u*f-u*d,y=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*d+1,g=(-1-h)*m+(1.5+h)*f+.5*d,b=h*m-h*f;for(let t=0;t!==s;++t)i[t]=_*o[l+t]+y*o[c+t]+g*o[a+t]+b*o[p+t];return i}}class zp extends Tp{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=t*s,c=a-s,l=(n-e)/(r-e),p=1-l;for(let t=0;t!==s;++t)i[t]=o[c+t]*p+o[a+t]*l;return i}}class Ap extends Tp{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class Ep{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Mp.convertArray(e,this.TimeBufferType),this.values=Mp.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Mp.convertArray(t.times,Array),values:Mp.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Ap(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new zp(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Cp(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case He:e=this.InterpolantFactoryMethodDiscrete;break;case Ge:e=this.InterpolantFactoryMethodLinear;break;case Ue:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return He;case this.InterpolantFactoryMethodLinear:return Ge;case this.InterpolantFactoryMethodSmooth:return Ue}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let i=0,o=r-1;for(;i!==r&&n[i]<t;)++i;for(;-1!==o&&n[o]>e;)--o;if(++o,0!==i||o!==r){i>=o&&(o=Math.max(o,1),i=o-1);const t=this.getValueSize();this.times=Mp.arraySlice(n,i,o),this.values=Mp.arraySlice(this.values,i*t,o*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let e=0;e!==i;e++){const r=n[e];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,r),t=!1;break}if(null!==o&&o>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,r,o),t=!1;break}o=r}if(void 0!==r&&Mp.isTypedArray(r))for(let e=0,n=r.length;e!==n;++e){const n=r[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=Mp.arraySlice(this.times),e=Mp.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===Ue,i=t.length-1;let o=1;for(let s=1;s<i;++s){let i=!1;const a=t[s];if(a!==t[s+1]&&(1!==s||a!==t[0]))if(r)i=!0;else{const t=s*n,r=t-n,o=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[r+s]||n!==e[o+s]){i=!0;break}}}if(i){if(s!==o){t[o]=t[s];const r=s*n,i=o*n;for(let t=0;t!==n;++t)e[i+t]=e[r+t]}++o}}if(i>0){t[o]=t[i];for(let t=i*n,r=o*n,s=0;s!==n;++s)e[r+s]=e[t+s];++o}return o!==t.length?(this.times=Mp.arraySlice(t,0,o),this.values=Mp.arraySlice(e,0,o*n)):(this.times=t,this.values=e),this}clone(){const t=Mp.arraySlice(this.times,0),e=Mp.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Ep.prototype.TimeBufferType=Float32Array,Ep.prototype.ValueBufferType=Float32Array,Ep.prototype.DefaultInterpolation=Ge;class Lp extends Ep{}Lp.prototype.ValueTypeName="bool",Lp.prototype.ValueBufferType=Array,Lp.prototype.DefaultInterpolation=He,Lp.prototype.InterpolantFactoryMethodLinear=void 0,Lp.prototype.InterpolantFactoryMethodSmooth=void 0;class Pp extends Ep{}Pp.prototype.ValueTypeName="color";class Rp extends Ep{}Rp.prototype.ValueTypeName="number";class Dp extends Tp{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=(n-e)/(r-e);let c=t*s;for(let t=c+s;c!==t;c+=4)sr.slerpFlat(i,0,o,c-s,o,c,a);return i}}class Ip extends Ep{InterpolantFactoryMethodLinear(t){return new Dp(this.times,this.values,this.getValueSize(),t)}}Ip.prototype.ValueTypeName="quaternion",Ip.prototype.DefaultInterpolation=Ge,Ip.prototype.InterpolantFactoryMethodSmooth=void 0;class Op extends Ep{}Op.prototype.ValueTypeName="string",Op.prototype.ValueBufferType=Array,Op.prototype.DefaultInterpolation=He,Op.prototype.InterpolantFactoryMethodLinear=void 0,Op.prototype.InterpolantFactoryMethodSmooth=void 0;class jp extends Ep{}jp.prototype.ValueTypeName="vector";class Bp{constructor(t,e=-1,n,r=qe){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=Un(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let t=0,i=n.length;t!==i;++t)e.push(Fp(n[t]).scale(r));const i=new this(t.name,t.duration,e,t.blendMode);return i.uuid=t.uuid,i}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,r=n.length;t!==r;++t)e.push(Ep.toJSON(n[t]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const i=e.length,o=[];for(let t=0;t<i;t++){let s=[],a=[];s.push((t+i-1)%i,t,(t+1)%i),a.push(0,1,0);const c=Mp.getKeyframeOrder(s);s=Mp.sortedArray(s,1,c),a=Mp.sortedArray(a,1,c),r||0!==s[0]||(s.push(i),a.push(a[0])),o.push(new Rp(".morphTargetInfluences["+e[t].name+"]",s,a).scale(1/n))}return new this(t,-1,o)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},i=/^([\\w-]*?)([\\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],o=n.name.match(i);if(o&&o.length>1){const t=o[1];let e=r[t];e||(r[t]=e=[]),e.push(n)}}const o=[];for(const t in r)o.push(this.CreateFromMorphTargetSequence(t,r[t],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,i){if(0!==n.length){const o=[],s=[];Mp.flattenJSON(n,o,s,r),0!==o.length&&i.push(new t(e,o,s))}},r=[],i=t.name||"default",o=t.fps||30,s=t.blendMode;let a=t.length||-1;const c=t.hierarchy||[];for(let t=0;t<c.length;t++){const i=c[t].keys;if(i&&0!==i.length)if(i[0].morphTargets){const t={};let e;for(e=0;e<i.length;e++)if(i[e].morphTargets)for(let n=0;n<i[e].morphTargets.length;n++)t[i[e].morphTargets[n]]=-1;for(const n in t){const t=[],o=[];for(let r=0;r!==i[e].morphTargets.length;++r){const r=i[e];t.push(r.time),o.push(r.morphTarget===n?1:0)}r.push(new Rp(".morphTargetInfluence["+n+"]",t,o))}a=t.length*(o||1)}else{const o=".bones["+e[t].name+"]";n(jp,o+".position",i,"pos",r),n(Ip,o+".quaternion",i,"rot",r),n(jp,o+".scale",i,"scl",r)}}return 0===r.length?null:new this(i,a,r,s)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Fp(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Rp;case"vector":case"vector2":case"vector3":case"vector4":return jp;case"color":return Pp;case"quaternion":return Ip;case"bool":case"boolean":return Lp;case"string":return Op}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Mp.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Np={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Hp{constructor(t,e,n){const r=this;let i=!1,o=0,s=0,a=void 0;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){s++,!1===i&&void 0!==r.onStart&&r.onStart(t,o,s),i=!0},this.itemEnd=function(t){o++,void 0!==r.onProgress&&r.onProgress(t,o,s),o===s&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return a?a(t):t},this.setURLModifier=function(t){return a=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){const e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=c.length;e<n;e+=2){const n=c[e],r=c[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}}}const Gp=new Hp;class Up{constructor(t){this.manager=void 0!==t?t:Gp,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,i){n.load(t,r,e,i)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const kp={};class Vp extends Up{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,o=Np.get(t);if(void 0!==o)return i.manager.itemStart(t),setTimeout((function(){e&&e(o),i.manager.itemEnd(t)}),0),o;if(void 0!==kp[t])return void kp[t].push({onLoad:e,onProgress:n,onError:r});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(s){const n=s[1],o=!!s[2];let a=s[3];a=decodeURIComponent(a),o&&(a=atob(a));try{let r;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const t=new Uint8Array(a.length);for(let e=0;e<a.length;e++)t[e]=a.charCodeAt(e);r="blob"===o?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;r=e.parseFromString(a,n);break;case"json":r=JSON.parse(a);break;default:r=a}setTimeout((function(){e&&e(r),i.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}),0)}}else{kp[t]=[],kp[t].push({onLoad:e,onProgress:n,onError:r}),a=new XMLHttpRequest,a.open("GET",t,!0),a.addEventListener("load",(function(e){const n=this.response,r=kp[t];if(delete kp[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Np.add(t,n);for(let t=0,e=r.length;t<e;t++){const e=r[t];e.onLoad&&e.onLoad(n)}i.manager.itemEnd(t)}else{for(let t=0,n=r.length;t<n;t++){const n=r[t];n.onError&&n.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}}),!1),a.addEventListener("progress",(function(e){const n=kp[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onProgress&&r.onProgress(e)}}),!1),a.addEventListener("error",(function(e){const n=kp[t];delete kp[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}),!1),a.addEventListener("abort",(function(e){const n=kp[t];delete kp[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return i.manager.itemStart(t),a}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Wp extends Up{constructor(t){super(t)}load(t,e,n,r){const i=this,o=new Vp(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e=[];for(let n=0;n<t.length;n++){const r=Bp.parse(t[n]);e.push(r)}return e}}class qp extends Up{constructor(t){super(t)}load(t,e,n,r){const i=this,o=[],s=new pl,a=new Vp(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(i.withCredentials);let c=0;function l(l){a.load(t[l],(function(t){const n=i.parse(t,!0);o[l]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},c+=1,6===c&&(1===n.mipmapCount&&(s.minFilter=vt),s.image=o,s.format=n.format,s.needsUpdate=!0,e&&e(s))}),n,r)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)l(e);else a.load(t,(function(t){const n=i.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){o[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)o[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),o[e].format=n.format,o[e].width=n.width,o[e].height=n.height}s.image=o}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=vt),s.format=n.format,s.needsUpdate=!0,e&&e(s)}),n,r);return s}}class Yp extends Up{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,o=Np.get(t);if(void 0!==o)return i.manager.itemStart(t),setTimeout((function(){e&&e(o),i.manager.itemEnd(t)}),0),o;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){s.removeEventListener("load",a,!1),s.removeEventListener("error",c,!1),Np.add(t,this),e&&e(this),i.manager.itemEnd(t)}function c(e){s.removeEventListener("load",a,!1),s.removeEventListener("error",c,!1),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}return s.addEventListener("load",a,!1),s.addEventListener("error",c,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(t),s.src=t,s}}class Xp extends Up{constructor(t){super(t)}load(t,e,n,r){const i=new Bo,o=new Yp(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let s=0;function a(n){o.load(t[n],(function(t){i.images[n]=t,s++,6===s&&(i.needsUpdate=!0,e&&e(i))}),void 0,r)}for(let e=0;e<t.length;++e)a(e);return i}}class Zp extends Up{constructor(t){super(t)}load(t,e,n,r){const i=this,o=new No,s=new Vp(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(t,(function(t){const n=i.parse(t);n&&(void 0!==n.image?o.image=n.image:void 0!==n.data&&(o.image.width=n.width,o.image.height=n.height,o.image.data=n.data),o.wrapS=void 0!==n.wrapS?n.wrapS:dt,o.wrapT=void 0!==n.wrapT?n.wrapT:dt,o.magFilter=void 0!==n.magFilter?n.magFilter:vt,o.minFilter=void 0!==n.minFilter?n.minFilter:vt,o.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(o.encoding=n.encoding),void 0!==n.flipY&&(o.flipY=n.flipY),void 0!==n.format&&(o.format=n.format),void 0!==n.type&&(o.type=n.type),void 0!==n.mipmaps&&(o.mipmaps=n.mipmaps,o.minFilter=St),1===n.mipmapCount&&(o.minFilter=vt),void 0!==n.generateMipmaps&&(o.generateMipmaps=n.generateMipmaps),o.needsUpdate=!0,e&&e(o,n))}),n,r),o}}class Jp extends Up{constructor(t){super(t)}load(t,e,n,r){const i=new er,o=new Yp(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,(function(n){i.image=n;const r=t.search(/\\.jpe?g($|\\?)/i)>0||0===t.search(/^data\\:image\\/jpeg/);i.format=r?Ft:Nt,i.needsUpdate=!0,void 0!==e&&e(i)}),n,r),i}}class Qp{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),i=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),i+=n.distanceTo(r),e.push(i),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let r=0;const i=n.length;let o;o=e||t*n[i-1];let s,a=0,c=i-1;for(;a<=c;)if(r=Math.floor(a+(c-a)/2),s=n[r]-o,s<0)a=r+1;else{if(!(s>0)){c=r;break}c=r-1}if(r=c,n[r]===o)return r/(i-1);const l=n[r];return(r+(o-l)/(n[r+1]-l))/(i-1)}getTangent(t,e){let n=t-1e-4,r=t+1e-4;n<0&&(n=0),r>1&&(r=1);const i=this.getPoint(n),o=this.getPoint(r),s=e||(i.isVector2?new Jn:new ar);return s.copy(o).sub(i).normalize(),s}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new ar,r=[],i=[],o=[],s=new ar,a=new Fr;for(let e=0;e<=t;e++){const n=e/t;r[e]=this.getTangentAt(n,new ar),r[e].normalize()}i[0]=new ar,o[0]=new ar;let c=Number.MAX_VALUE;const l=Math.abs(r[0].x),p=Math.abs(r[0].y),u=Math.abs(r[0].z);l<=c&&(c=l,n.set(1,0,0)),p<=c&&(c=p,n.set(0,1,0)),u<=c&&n.set(0,0,1),s.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],s),o[0].crossVectors(r[0],i[0]);for(let e=1;e<=t;e++){if(i[e]=i[e-1].clone(),o[e]=o[e-1].clone(),s.crossVectors(r[e-1],r[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(kn(r[e-1].dot(r[e]),-1,1));i[e].applyMatrix4(a.makeRotationAxis(s,t))}o[e].crossVectors(r[e],i[e])}if(!0===e){let e=Math.acos(kn(i[0].dot(i[t]),-1,1));e/=t,r[0].dot(s.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(a.makeRotationAxis(r[n],e*n)),o[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:o}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Kp extends Qp{constructor(t=0,e=0,n=1,r=1,i=0,o=2*Math.PI,s=!1,a=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=o,this.aClockwise=s,this.aRotation=a}getPoint(t,e){const n=e||new Jn,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const o=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=o?0:r),!0!==this.aClockwise||o||(i===r?i=-r:i-=r);const s=this.aStartAngle+t*i;let a=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=a-this.aX,r=c-this.aY;a=n*t-r*e+this.aX,c=n*e+r*t+this.aY}return n.set(a,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Kp.prototype.isEllipseCurve=!0;class $p extends Kp{constructor(t,e,n,r,i,o){super(t,e,n,n,r,i,o),this.type="ArcCurve"}}function tu(){let t=0,e=0,n=0,r=0;function i(i,o,s,a){t=i,e=s,n=-3*i+3*o-2*s-a,r=2*i-2*o+s+a}return{initCatmullRom:function(t,e,n,r,o){i(e,n,o*(n-t),o*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,o,s,a){let c=(e-t)/o-(n-t)/(o+s)+(n-e)/s,l=(n-e)/s-(r-e)/(s+a)+(r-n)/a;c*=s,l*=s,i(e,n,c,l)},calc:function(i){const o=i*i;return t+e*i+n*o+r*(o*i)}}}$p.prototype.isArcCurve=!0;const eu=new ar,nu=new tu,ru=new tu,iu=new tu;class ou extends Qp{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new ar){const n=e,r=this.points,i=r.length,o=(i-(this.closed?0:1))*t;let s,a,c=Math.floor(o),l=o-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/i)+1)*i:0===l&&c===i-1&&(c=i-2,l=1),this.closed||c>0?s=r[(c-1)%i]:(eu.subVectors(r[0],r[1]).add(r[0]),s=eu);const p=r[c%i],u=r[(c+1)%i];if(this.closed||c+2<i?a=r[(c+2)%i]:(eu.subVectors(r[i-1],r[i-2]).add(r[i-1]),a=eu),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(p),t),n=Math.pow(p.distanceToSquared(u),t),r=Math.pow(u.distanceToSquared(a),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),nu.initNonuniformCatmullRom(s.x,p.x,u.x,a.x,e,n,r),ru.initNonuniformCatmullRom(s.y,p.y,u.y,a.y,e,n,r),iu.initNonuniformCatmullRom(s.z,p.z,u.z,a.z,e,n,r)}else"catmullrom"===this.curveType&&(nu.initCatmullRom(s.x,p.x,u.x,a.x,this.tension),ru.initCatmullRom(s.y,p.y,u.y,a.y,this.tension),iu.initCatmullRom(s.z,p.z,u.z,a.z,this.tension));return n.set(nu.calc(l),ru.calc(l),iu.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new ar).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function su(t,e,n,r,i){const o=.5*(r-e),s=.5*(i-n),a=t*t;return(2*n-2*r+o+s)*(t*a)+(-3*n+3*r-2*o-s)*a+o*t+n}function au(t,e,n,r){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function cu(t,e,n,r,i){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,i)}ou.prototype.isCatmullRomCurve3=!0;class lu extends Qp{constructor(t=new Jn,e=new Jn,n=new Jn,r=new Jn){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new Jn){const n=e,r=this.v0,i=this.v1,o=this.v2,s=this.v3;return n.set(cu(t,r.x,i.x,o.x,s.x),cu(t,r.y,i.y,o.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}lu.prototype.isCubicBezierCurve=!0;class pu extends Qp{constructor(t=new ar,e=new ar,n=new ar,r=new ar){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new ar){const n=e,r=this.v0,i=this.v1,o=this.v2,s=this.v3;return n.set(cu(t,r.x,i.x,o.x,s.x),cu(t,r.y,i.y,o.y,s.y),cu(t,r.z,i.z,o.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}pu.prototype.isCubicBezierCurve3=!0;class uu extends Qp{constructor(t=new Jn,e=new Jn){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Jn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new Jn;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}uu.prototype.isLineCurve=!0;class hu extends Qp{constructor(t=new ar,e=new ar){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new ar){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class du extends Qp{constructor(t=new Jn,e=new Jn,n=new Jn){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Jn){const n=e,r=this.v0,i=this.v1,o=this.v2;return n.set(au(t,r.x,i.x,o.x),au(t,r.y,i.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}du.prototype.isQuadraticBezierCurve=!0;class fu extends Qp{constructor(t=new ar,e=new ar,n=new ar){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ar){const n=e,r=this.v0,i=this.v1,o=this.v2;return n.set(au(t,r.x,i.x,o.x),au(t,r.y,i.y,o.y),au(t,r.z,i.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}fu.prototype.isQuadraticBezierCurve3=!0;class mu extends Qp{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new Jn){const n=e,r=this.points,i=(r.length-1)*t,o=Math.floor(i),s=i-o,a=r[0===o?o:o-1],c=r[o],l=r[o>r.length-2?r.length-1:o+1],p=r[o>r.length-3?r.length-1:o+2];return n.set(su(s,a.x,c.x,l.x,p.x),su(s,a.y,c.y,l.y,p.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Jn).fromArray(n))}return this}}mu.prototype.isSplineCurve=!0;var _u=Object.freeze({__proto__:null,ArcCurve:$p,CatmullRomCurve3:ou,CubicBezierCurve:lu,CubicBezierCurve3:pu,EllipseCurve:Kp,LineCurve:uu,LineCurve3:hu,QuadraticBezierCurve:du,QuadraticBezierCurve3:fu,SplineCurve:mu});class yu extends Qp{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new uu(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=e){const t=n[r]-e,i=this.curves[r],o=i.getLength(),s=0===o?0:1-t/o;return i.getPointAt(s)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const o=i[r],s=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,a=o.getPoints(s);for(let t=0;t<a.length;t++){const r=a[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new _u[n.type]).fromJSON(n))}return this}}class gu extends yu{constructor(t){super(),this.type="Path",this.currentPoint=new Jn,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new uu(this.currentPoint.clone(),new Jn(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const i=new du(this.currentPoint.clone(),new Jn(t,e),new Jn(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,i,o){const s=new lu(this.currentPoint.clone(),new Jn(t,e),new Jn(n,r),new Jn(i,o));return this.curves.push(s),this.currentPoint.set(i,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new mu(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,i,o){const s=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+s,e+a,n,r,i,o),this}absarc(t,e,n,r,i,o){return this.absellipse(t,e,n,n,r,i,o),this}ellipse(t,e,n,r,i,o,s,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,r,i,o,s,a),this}absellipse(t,e,n,r,i,o,s,a){const c=new Kp(t,e,n,r,i,o,s,a);if(this.curves.length>0){const t=c.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class bu extends gu{constructor(t){super(t),this.uuid=Un(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new gu).fromJSON(n))}return this}}class vu extends di{constructor(t,e=1){super(),this.type="Light",this.color=new Bi(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}vu.prototype.isLight=!0;class xu extends vu{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(di.DefaultUp),this.updateMatrix(),this.groundColor=new Bi(e)}copy(t){return vu.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}xu.prototype.isHemisphereLight=!0;const wu=new Fr,Su=new ar,Mu=new ar;class Tu{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Jn(512,512),this.map=null,this.mapPass=null,this.matrix=new Fr,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Uo,this._frameExtents=new Jn(1,1),this._viewportCount=1,this._viewports=[new rr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Su.setFromMatrixPosition(t.matrixWorld),e.position.copy(Su),Mu.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Mu),e.updateMatrixWorld(),wu.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(wu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Cu extends Tu{constructor(){super(new Oo(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*Gn*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Cu.prototype.isSpotLightShadow=!0;class zu extends vu{constructor(t,e,n=0,r=Math.PI/3,i=0,o=1){super(t,e),this.type="SpotLight",this.position.copy(di.DefaultUp),this.updateMatrix(),this.target=new di,this.distance=n,this.angle=r,this.penumbra=i,this.decay=o,this.shadow=new Cu}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}zu.prototype.isSpotLight=!0;const Au=new Fr,Eu=new ar,Lu=new ar;class Pu extends Tu{constructor(){super(new Oo(90,1,.5,500)),this._frameExtents=new Jn(4,2),this._viewportCount=6,this._viewports=[new rr(2,1,1,1),new rr(0,1,1,1),new rr(3,1,1,1),new rr(1,1,1,1),new rr(3,0,1,1),new rr(1,0,1,1)],this._cubeDirections=[new ar(1,0,0),new ar(-1,0,0),new ar(0,0,1),new ar(0,0,-1),new ar(0,1,0),new ar(0,-1,0)],this._cubeUps=[new ar(0,1,0),new ar(0,1,0),new ar(0,1,0),new ar(0,1,0),new ar(0,0,1),new ar(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,i=t.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),Eu.setFromMatrixPosition(t.matrixWorld),n.position.copy(Eu),Lu.copy(n.position),Lu.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Lu),n.updateMatrixWorld(),r.makeTranslation(-Eu.x,-Eu.y,-Eu.z),Au.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Au)}}Pu.prototype.isPointLightShadow=!0;class Ru extends vu{constructor(t,e,n=0,r=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Pu}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}Ru.prototype.isPointLight=!0;class Du extends Io{constructor(t=-1,e=1,n=1,r=-1,i=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=i,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,i,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-t,o=n+t,s=r+e,a=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,o=i+t*this.view.width,s-=e*this.view.offsetY,a=s-e*this.view.height}this.projectionMatrix.makeOrthographic(i,o,s,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Du.prototype.isOrthographicCamera=!0;class Iu extends Tu{constructor(){super(new Du(-5,5,5,-5,.5,500))}}Iu.prototype.isDirectionalLightShadow=!0;class Ou extends vu{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(di.DefaultUp),this.updateMatrix(),this.target=new di,this.shadow=new Iu}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Ou.prototype.isDirectionalLight=!0;class ju extends vu{constructor(t,e){super(t,e),this.type="AmbientLight"}}ju.prototype.isAmbientLight=!0;class Bu extends vu{constructor(t,e,n=10,r=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=r}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}Bu.prototype.isRectAreaLight=!0;class Fu{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new ar)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,i=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*r),e.addScaledVector(o[2],.488603*i),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],n*r*1.092548),e.addScaledVector(o[5],r*i*1.092548),e.addScaledVector(o[6],.315392*(3*i*i-1)),e.addScaledVector(o[7],n*i*1.092548),e.addScaledVector(o[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,i=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],1.023328*r),e.addScaledVector(o[2],1.023328*i),e.addScaledVector(o[3],1.023328*n),e.addScaledVector(o[4],.858086*n*r),e.addScaledVector(o[5],.858086*r*i),e.addScaledVector(o[6],.743125*i*i-.247708),e.addScaledVector(o[7],.858086*n*i),e.addScaledVector(o[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,i=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-r*r)}}Fu.prototype.isSphericalHarmonics3=!0;class Nu extends vu{constructor(t=new Fu,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Nu.prototype.isLightProbe=!0;class Hu extends Up{constructor(t){super(t),this.textures={}}load(t,e,n,r){const i=this,o=new Vp(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=new Sp[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=(new Bi).setHex(t.sheen)),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(r.morphNormals=t.morphNormals),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.vertexTangents&&(r.vertexTangents=t.vertexTangents),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const i=t.uniforms[e];switch(r.uniforms[e]={},i.type){case"t":r.uniforms[e].value=n(i.value);break;case"c":r.uniforms[e].value=(new Bi).setHex(i.value);break;case"v2":r.uniforms[e].value=(new Jn).fromArray(i.value);break;case"v3":r.uniforms[e].value=(new ar).fromArray(i.value);break;case"v4":r.uniforms[e].value=(new rr).fromArray(i.value);break;case"m3":r.uniforms[e].value=(new Qn).fromArray(i.value);break;case"m4":r.uniforms[e].value=(new Fr).fromArray(i.value);break;default:r.uniforms[e].value=i.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)r.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new Jn).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Jn).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),r}setTextures(t){return this.textures=t,this}}class Gu{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}}class Uu extends co{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}Uu.prototype.isInstancedBufferGeometry=!0;class ku extends Gi{constructor(t,e,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=r||1}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}ku.prototype.isInstancedBufferAttribute=!0;class Vu extends Up{constructor(t){super(t)}load(t,e,n,r){const i=this,o=new Vp(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}parse(t){const e={},n={};function r(t,r){if(void 0!==e[r])return e[r];const i=t.interleavedBuffers[r],o=function(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers[e],i=new Uint32Array(r).buffer;return n[e]=i,i}(t,i.buffer),s=to(i.type,o),a=new cc(s,i.stride);return a.uuid=i.uuid,e[r]=a,a}const i=t.isInstancedBufferGeometry?new Uu:new co,o=t.data.index;if(void 0!==o){const t=to(o.type,o.array);i.setIndex(new Gi(t,1))}const s=t.data.attributes;for(const e in s){const n=s[e];let o;if(n.isInterleavedBufferAttribute){const e=r(t.data,n.data);o=new pc(e,n.itemSize,n.offset,n.normalized)}else{const t=to(n.type,n.array);o=new(n.isInstancedBufferAttribute?ku:Gi)(t,n.itemSize,n.normalized)}void 0!==n.name&&(o.name=n.name),void 0!==n.usage&&o.setUsage(n.usage),void 0!==n.updateRange&&(o.updateRange.offset=n.updateRange.offset,o.updateRange.count=n.updateRange.count),i.setAttribute(e,o)}const a=t.data.morphAttributes;if(a)for(const e in a){const n=a[e],o=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];let s;if(i.isInterleavedBufferAttribute){const e=r(t.data,i.data);s=new pc(e,i.itemSize,i.offset,i.normalized)}else{const t=to(i.type,i.array);s=new Gi(t,i.itemSize,i.normalized)}void 0!==i.name&&(s.name=i.name),o.push(s)}i.morphAttributes[e]=o}t.data.morphTargetsRelative&&(i.morphTargetsRelative=!0);const c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(let t=0,e=c.length;t!==e;++t){const e=c[t];i.addGroup(e.start,e.count,e.materialIndex)}const l=t.data.boundingSphere;if(void 0!==l){const t=new ar;void 0!==l.center&&t.fromArray(l.center),i.boundingSphere=new Er(t,l.radius)}return t.name&&(i.name=t.name),t.userData&&(i.userData=t.userData),i}}class Wu extends Up{constructor(t){super(t)}load(t,e,n,r){const i=this,o=""===this.path?Gu.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||o;const s=new Vp(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){let o=null;try{o=JSON.parse(n)}catch(e){return void 0!==r&&r(e),void console.error("THREE:ObjectLoader: Can\'t parse "+t+".",e.message)}const s=o.metadata;void 0!==s&&void 0!==s.type&&"geometry"!==s.type.toLowerCase()?i.parse(o,e):console.error("THREE.ObjectLoader: Can\'t load "+t)}),n,r)}parse(t,e){const n=this.parseAnimations(t.animations),r=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,r),o=this.parseImages(t.images,(function(){void 0!==e&&e(c)})),s=this.parseTextures(t.textures,o),a=this.parseMaterials(t.materials,s),c=this.parseObject(t.object,i,a,n),l=this.parseSkeletons(t.skeletons,c);if(this.bindSkeletons(c,l),void 0!==e){let t=!1;for(const e in o)if(o[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(c)}return c}parseShapes(t){const e={};if(void 0!==t)for(let n=0,r=t.length;n<r;n++){const r=(new bu).fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},r={};if(e.traverse((function(t){t.isBone&&(r[t.uuid]=t)})),void 0!==t)for(let e=0,i=t.length;e<i;e++){const i=(new Nc).fromJSON(t[e],r);n[i.uuid]=i}return n}parseGeometries(t,e){const n={};let r;if(void 0!==t){const i=new Vu;for(let o=0,s=t.length;o<s;o++){let s;const a=t[o];switch(a.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new hp[a.type](a.width,a.height,a.widthSegments,a.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":s=new hp[a.type](a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new hp[a.type](a.radius,a.segments,a.thetaStart,a.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new hp[a.type](a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new hp[a.type](a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new hp[a.type](a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new hp[a.type](a.radius,a.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new hp[a.type](a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new hp[a.type](a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new hp[a.type](a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q);break;case"TubeGeometry":case"TubeBufferGeometry":s=new hp[a.type]((new _u[a.path.type]).fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed);break;case"LatheGeometry":case"LatheBufferGeometry":s=new hp[a.type](a.points,a.segments,a.phiStart,a.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new hp[a.type](a.vertices,a.indices,a.radius,a.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":r=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];r.push(n)}s=new hp[a.type](r,a.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":r=[];for(let t=0,n=a.shapes.length;t<n;t++){const n=e[a.shapes[t]];r.push(n)}const t=a.options.extrudePath;void 0!==t&&(a.options.extrudePath=(new _u[t.type]).fromJSON(t)),s=new hp[a.type](r,a.options);break;case"BufferGeometry":case"InstancedBufferGeometry":s=i.parse(a);break;case"Geometry":console.error(\'THREE.ObjectLoader: Loading "Geometry" is not supported anymore.\');break;default:console.warn(\'THREE.ObjectLoader: Unsupported geometry type "\'+a.type+\'"\');continue}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),!0===s.isBufferGeometry&&void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(t,e){const n={},r={};if(void 0!==t){const i=new Hu;i.setTextures(e);for(let e=0,o=t.length;e<o;e++){const o=t[e];if("MultiMaterial"===o.type){const t=[];for(let e=0;e<o.materials.length;e++){const r=o.materials[e];void 0===n[r.uuid]&&(n[r.uuid]=i.parse(r)),t.push(n[r.uuid])}r[o.uuid]=t}else void 0===n[o.uuid]&&(n[o.uuid]=i.parse(o)),r[o.uuid]=n[o.uuid]}}return r}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const r=t[n],i=Bp.parse(r);e[i.uuid]=i}return e}parseImages(t,e){const n=this,r={};let i;function o(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),i.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:to(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new Hp(e);i=new Yp(n),i.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],i=n.url;if(Array.isArray(i)){r[n.uuid]=[];for(let t=0,e=i.length;t<e;t++){const e=o(i[t]);null!==e&&(e instanceof HTMLImageElement?r[n.uuid].push(e):r[n.uuid].push(new No(e.data,e.width,e.height)))}}else{const t=o(n.url);null!==t&&(r[n.uuid]=t)}}}return r}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const r={};if(void 0!==t)for(let i=0,o=t.length;i<o;i++){const o=t[i];let s;void 0===o.image&&console.warn(\'THREE.ObjectLoader: No "image" specified for\',o.uuid),void 0===e[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const a=e[o.image];Array.isArray(a)?(s=new Bo(a),6===a.length&&(s.needsUpdate=!0)):(s=a&&a.data?new No(a.data,a.width,a.height):new er(a),a&&(s.needsUpdate=!0)),s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),void 0!==o.mapping&&(s.mapping=n(o.mapping,qu)),void 0!==o.offset&&s.offset.fromArray(o.offset),void 0!==o.repeat&&s.repeat.fromArray(o.repeat),void 0!==o.center&&s.center.fromArray(o.center),void 0!==o.rotation&&(s.rotation=o.rotation),void 0!==o.wrap&&(s.wrapS=n(o.wrap[0],Yu),s.wrapT=n(o.wrap[1],Yu)),void 0!==o.format&&(s.format=o.format),void 0!==o.type&&(s.type=o.type),void 0!==o.encoding&&(s.encoding=o.encoding),void 0!==o.minFilter&&(s.minFilter=n(o.minFilter,Xu)),void 0!==o.magFilter&&(s.magFilter=n(o.magFilter,Xu)),void 0!==o.anisotropy&&(s.anisotropy=o.anisotropy),void 0!==o.flipY&&(s.flipY=o.flipY),void 0!==o.premultiplyAlpha&&(s.premultiplyAlpha=o.premultiplyAlpha),void 0!==o.unpackAlignment&&(s.unpackAlignment=o.unpackAlignment),r[o.uuid]=s}return r}parseObject(t,e,n,r){let i,o,s;function a(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let r=0,i=t.length;r<i;r++){const i=t[r];void 0===n[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),e.push(n[i])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}switch(t.type){case"Scene":i=new ac,void 0!==t.background&&Number.isInteger(t.background)&&(i.background=new Bi(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?i.fog=new sc(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(i.fog=new oc(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":i=new Oo(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(i.focus=t.focus),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.filmGauge&&(i.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(i.filmOffset=t.filmOffset),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case"OrthographicCamera":i=new Du(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case"AmbientLight":i=new ju(t.color,t.intensity);break;case"DirectionalLight":i=new Ou(t.color,t.intensity);break;case"PointLight":i=new Ru(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":i=new Bu(t.color,t.intensity,t.width,t.height);break;case"SpotLight":i=new zu(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new xu(t.color,t.groundColor,t.intensity);break;case"LightProbe":i=(new Nu).fromJSON(t);break;case"SkinnedMesh":o=a(t.geometry),s=c(t.material),i=new Oc(o,s),void 0!==t.bindMode&&(i.bindMode=t.bindMode),void 0!==t.bindMatrix&&i.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(i.skeleton=t.skeleton);break;case"Mesh":o=a(t.geometry),s=c(t.material),i=new zo(o,s);break;case"InstancedMesh":o=a(t.geometry),s=c(t.material);const e=t.count,n=t.instanceMatrix,r=t.instanceColor;i=new Vc(o,s,e),i.instanceMatrix=new Gi(new Float32Array(n.array),16),void 0!==r&&(i.instanceColor=new Gi(new Float32Array(r.array),r.itemSize));break;case"LOD":i=new Ec;break;case"Line":i=new Qc(a(t.geometry),c(t.material));break;case"LineLoop":i=new el(a(t.geometry),c(t.material));break;case"LineSegments":i=new tl(a(t.geometry),c(t.material));break;case"PointCloud":case"Points":i=new al(a(t.geometry),c(t.material));break;case"Sprite":i=new Tc(c(t.material));break;case"Group":i=new Ka;break;case"Bone":i=new jc;break;default:i=new di}if(i.uuid=t.uuid,void 0!==t.name&&(i.name=t.name),void 0!==t.matrix?(i.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(i.matrixAutoUpdate=t.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(void 0!==t.position&&i.position.fromArray(t.position),void 0!==t.rotation&&i.rotation.fromArray(t.rotation),void 0!==t.quaternion&&i.quaternion.fromArray(t.quaternion),void 0!==t.scale&&i.scale.fromArray(t.scale)),void 0!==t.castShadow&&(i.castShadow=t.castShadow),void 0!==t.receiveShadow&&(i.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(i.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(i.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(i.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&i.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(i.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.frustumCulled&&(i.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(i.renderOrder=t.renderOrder),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.layers&&(i.layers.mask=t.layers),void 0!==t.children){const o=t.children;for(let t=0;t<o.length;t++)i.add(this.parseObject(o[t],e,n,r))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];i.animations.push(r[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(i.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],r=i.getObjectByProperty("uuid",n.object);void 0!==r&&i.addLevel(r,n.distance)}}return i}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}}))}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const qu={UVMapping:ot,CubeReflectionMapping:st,CubeRefractionMapping:at,EquirectangularReflectionMapping:ct,EquirectangularRefractionMapping:lt,CubeUVReflectionMapping:pt,CubeUVRefractionMapping:ut},Yu={RepeatWrapping:ht,ClampToEdgeWrapping:dt,MirroredRepeatWrapping:ft},Xu={NearestFilter:mt,NearestMipmapNearestFilter:_t,NearestMipmapLinearFilter:gt,LinearFilter:vt,LinearMipmapNearestFilter:xt,LinearMipmapLinearFilter:St};class Zu extends Up{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,o=Np.get(t);if(void 0!==o)return i.manager.itemStart(t),setTimeout((function(){e&&e(o),i.manager.itemEnd(t)}),0),o;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(i.options,{colorSpaceConversion:"none"}))})).then((function(n){Np.add(t,n),e&&e(n),i.manager.itemEnd(t)})).catch((function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)})),i.manager.itemStart(t)}}Zu.prototype.isImageBitmapLoader=!0;class Ju{constructor(){this.type="ShapePath",this.color=new Bi,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new gu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,i,o){return this.currentPath.bezierCurveTo(t,e,n,r,i,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],i=new bu;i.curves=r.curves,e.push(i)}return e}function r(t,e){const n=e.length;let r=!1;for(let i=n-1,o=0;o<n;i=o++){let n=e[i],s=e[o],a=s.x-n.x,c=s.y-n.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(n=e[o],a=-a,s=e[i],c=-c),t.y<n.y||t.y>s.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=c*(t.x-n.x)-a*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(s.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=s.x)return!0}}return r}const i=Xl.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===e)return n(o);let s,a,c;const l=[];if(1===o.length)return a=o[0],c=new bu,c.curves=a.curves,l.push(c),l;let p=!i(o[0].getPoints());p=t?!p:p;const u=[],h=[];let d,f,m=[],_=0;h[_]=void 0,m[_]=[];for(let e=0,n=o.length;e<n;e++)a=o[e],d=a.getPoints(),s=i(d),s=t?!s:s,s?(!p&&h[_]&&_++,h[_]={s:new bu,p:d},h[_].s.curves=a.curves,p&&_++,m[_]=[]):m[_].push({h:a,p:d[0]});if(!h[0])return n(o);if(h.length>1){let t=!1;const e=[];for(let t=0,e=h.length;t<e;t++)u[t]=[];for(let n=0,i=h.length;n<i;n++){const i=m[n];for(let o=0;o<i.length;o++){const s=i[o];let a=!0;for(let i=0;i<h.length;i++)r(s.p,h[i].p)&&(n!==i&&e.push({froms:n,tos:i,hole:o}),a?(a=!1,u[i].push(s)):t=!0);a&&u[n].push(s)}}e.length>0&&(t||(m=u))}for(let t=0,e=h.length;t<e;t++){c=h[t].s,l.push(c),f=m[t];for(let t=0,e=f.length;t<e;t++)c.holes.push(f[t].h)}return l}}class Qu{constructor(t){this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],r=function(t,e,n){const r=Array.from(t),i=e/n.resolution,o=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,s=[];let a=0,c=0;for(let t=0;t<r.length;t++){const e=r[t];if("\\n"===e)a=0,c-=o;else{const t=Ku(e,i,a,c,n);a+=t.offsetX,s.push(t.path)}}return s}(t,e,this.data);for(let t=0,e=r.length;t<e;t++)Array.prototype.push.apply(n,r[t].toShapes());return n}}function Ku(t,e,n,r,i){const o=i.glyphs[t]||i.glyphs["?"];if(!o)return void console.error(\'THREE.Font: character "\'+t+\'" does not exists in font family \'+i.familyName+".");const s=new Ju;let a,c,l,p,u,h,d,f;if(o.o){const t=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let i=0,o=t.length;i<o;){switch(t[i++]){case"m":a=t[i++]*e+n,c=t[i++]*e+r,s.moveTo(a,c);break;case"l":a=t[i++]*e+n,c=t[i++]*e+r,s.lineTo(a,c);break;case"q":l=t[i++]*e+n,p=t[i++]*e+r,u=t[i++]*e+n,h=t[i++]*e+r,s.quadraticCurveTo(u,h,l,p);break;case"b":l=t[i++]*e+n,p=t[i++]*e+r,u=t[i++]*e+n,h=t[i++]*e+r,d=t[i++]*e+n,f=t[i++]*e+r,s.bezierCurveTo(u,h,d,f,l,p)}}}return{offsetX:o.ha*e,path:s}}Qu.prototype.isFont=!0;class $u extends Up{constructor(t){super(t)}load(t,e,n,r){const i=this,o=new Vp(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials),o.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const r=i.parse(n);e&&e(r)}),n,r)}parse(t){return new Qu(t)}}let th;const eh={getContext:function(){return void 0===th&&(th=new(window.AudioContext||window.webkitAudioContext)),th},setContext:function(t){th=t}};class nh extends Up{constructor(t){super(t)}load(t,e,n,r){const i=this,o=new Vp(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(n){try{const t=n.slice(0);eh.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}}class rh extends Nu{constructor(t,e,n=1){super(void 0,n);const r=(new Bi).set(t),i=(new Bi).set(e),o=new ar(r.r,r.g,r.b),s=new ar(i.r,i.g,i.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(s).multiplyScalar(a),this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(c)}}rh.prototype.isHemisphereLightProbe=!0;class ih extends Nu{constructor(t,e=1){super(void 0,e);const n=(new Bi).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}ih.prototype.isAmbientLightProbe=!0;const oh=new Fr,sh=new Fr;class ah{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Oo,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Oo,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),r=e.eyeSep/2,i=r*e.near/e.focus,o=e.near*Math.tan(Hn*e.fov*.5)/e.zoom;let s,a;sh.elements[12]=-r,oh.elements[12]=r,s=-o*e.aspect+i,a=o*e.aspect+i,n.elements[0]=2*e.near/(a-s),n.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(n),s=-o*e.aspect-i,a=o*e.aspect-i,n.elements[0]=2*e.near/(a-s),n.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(sh),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(oh)}}class ch{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=lh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=lh();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function lh(){return("undefined"==typeof performance?Date:performance).now()}const ph=new ar,uh=new sr,hh=new ar,dh=new ar;class fh extends di{constructor(){super(),this.type="AudioListener",this.context=eh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ch}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ph,uh,hh),dh.set(0,0,-1).applyQuaternion(uh),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(ph.x,t),e.positionY.linearRampToValueAtTime(ph.y,t),e.positionZ.linearRampToValueAtTime(ph.z,t),e.forwardX.linearRampToValueAtTime(dh.x,t),e.forwardY.linearRampToValueAtTime(dh.y,t),e.forwardZ.linearRampToValueAtTime(dh.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(ph.x,ph.y,ph.z),e.setOrientation(dh.x,dh.y,dh.z,n.x,n.y,n.z)}}class mh extends di{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const _h=new ar,yh=new sr,gh=new ar,bh=new ar;class vh extends mh{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){super.updateMatrixWorld(t);let e=!1;if(this._lastPosition||(e=!0,this._lastPosition=new ar,this._lastOrientation=new ar),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(_h,yh,gh),bh.set(0,0,1).applyQuaternion(yh);const n=this.panner;if(!(!e&&Math.abs(_h.x-this._lastPosition.x)<Number.EPSILON&&Math.abs(_h.y-this._lastPosition.y)<Number.EPSILON&&Math.abs(_h.z-this._lastPosition.z)<Number.EPSILON&&Math.abs(bh.x-this._lastOrientation.x)<Number.EPSILON&&Math.abs(bh.y-this._lastOrientation.y)<Number.EPSILON&&Math.abs(bh.z-this._lastOrientation.z)<Number.EPSILON)){if(n.positionX){const t=this.context.currentTime+this.listener.timeDelta;n.positionX.linearRampToValueAtTime(_h.x,t),n.positionY.linearRampToValueAtTime(_h.y,t),n.positionZ.linearRampToValueAtTime(_h.z,t),n.orientationX.linearRampToValueAtTime(bh.x,t),n.orientationY.linearRampToValueAtTime(bh.y,t),n.orientationZ.linearRampToValueAtTime(bh.z,t)}else n.setPosition(_h.x,_h.y,_h.z),n.setOrientation(bh.x,bh.y,bh.z);this._lastPosition.x=_h.x,this._lastPosition.y=_h.y,this._lastPosition.z=_h.z,this._lastOrientation.x=bh.x,this._lastOrientation.y=bh.y,this._lastOrientation.z=bh.z}}}class xh{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class wh{constructor(t,e,n){let r,i,o;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,i=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,i=t*r+r;let o=this.cumulativeWeight;if(0===o){for(let t=0;t!==r;++t)n[i+t]=n[t];o=e}else{o+=e;const t=e/o;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=o}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,o=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-i,e)}o>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let t=e,i=e+e;t!==i;++t)if(n[t]!==n[t+e]){s.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let t=n,i=r;t!==i;++t)e[t]=e[r+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,i){if(r>=.5)for(let r=0;r!==i;++r)t[e+r]=t[n+r]}_slerp(t,e,n,r){sr.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,i){const o=this._workIndex*i;sr.multiplyQuaternionsFlat(t,o,t,e,t,n),sr.slerpFlat(t,e,t,e,t,o,r)}_lerp(t,e,n,r,i){const o=1-r;for(let s=0;s!==i;++s){const i=e+s;t[i]=t[i]*o+t[n+s]*r}}_lerpAdditive(t,e,n,r,i){for(let o=0;o!==i;++o){const i=e+o;t[i]=t[i]+t[n+o]*r}}}const Sh=new RegExp("[\\\\[\\\\]\\\\.:\\\\/]","g"),Mh="[^"+"\\\\[\\\\]\\\\.:\\\\/".replace("\\\\.","")+"]",Th=/((?:WC+[\\/:])*)/.source.replace("WC","[^\\\\[\\\\]\\\\.:\\\\/]"),Ch=/(WCOD+)?/.source.replace("WCOD",Mh),zh=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace("WC","[^\\\\[\\\\]\\\\.:\\\\/]"),Ah=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace("WC","[^\\\\[\\\\]\\\\.:\\\\/]"),Eh=new RegExp("^"+Th+Ch+zh+Ah+"$"),Lh=["material","materials","bones"];class Ph{constructor(t,e,n){this.path=e,this.parsedPath=n||Ph.parseTrackName(e),this.node=Ph.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ph.Composite(t,e,n):new Ph(t,e,n)}static sanitizeNodeName(t){return t.replace(/\\s/g,"_").replace(Sh,"")}static parseTrackName(t){const e=Eh.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==Lh.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const i=t[r];if(i.name===e||i.uuid===e)return i;const o=n(i.children);if(o)return o}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.node[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0,this.targetObject.matrixNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0,this.targetObject.matrixNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0,this.targetObject.matrixNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let i=e.propertyIndex;if(t||(t=Ph.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn\'t found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const o=t[r];if(void 0===o){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn\'t found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}a=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=i}else void 0!==o.fromArray&&void 0!==o.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(a=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ph.Composite=class{constructor(t,e,n){const r=n||Ph.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},Ph.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ph.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ph.prototype.GetterByBindingType=[Ph.prototype._getValue_direct,Ph.prototype._getValue_array,Ph.prototype._getValue_arrayElement,Ph.prototype._getValue_toArray],Ph.prototype.SetterByBindingTypeAndVersioning=[[Ph.prototype._setValue_direct,Ph.prototype._setValue_direct_setNeedsUpdate,Ph.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ph.prototype._setValue_array,Ph.prototype._setValue_array_setNeedsUpdate,Ph.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ph.prototype._setValue_arrayElement,Ph.prototype._setValue_arrayElement_setNeedsUpdate,Ph.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ph.prototype._setValue_fromArray,Ph.prototype._setValue_fromArray_setNeedsUpdate,Ph.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Rh{constructor(){this.uuid=Un(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,o=i.length;let s=void 0,a=t.length,c=this.nCachedObjects_;for(let l=0,p=arguments.length;l!==p;++l){const p=arguments[l],u=p.uuid;let h=e[u];if(void 0===h){h=a++,e[u]=h,t.push(p);for(let t=0,e=o;t!==e;++t)i[t].push(new Ph(p,n[t],r[t]))}else if(h<c){s=t[h];const a=--c,l=t[a];e[l.uuid]=h,t[h]=l,e[u]=a,t[a]=p;for(let t=0,e=o;t!==e;++t){const e=i[t],o=e[a];let s=e[h];e[h]=o,void 0===s&&(s=new Ph(p,n[t],r[t])),e[a]=s}}else t[h]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o],a=s.uuid,c=e[a];if(void 0!==c&&c>=i){const o=i++,l=t[o];e[l.uuid]=c,t[c]=l,e[a]=o,t[o]=s;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[o],i=e[c];e[c]=r,e[o]=i}}}this.nCachedObjects_=i}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,o=t.length;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s].uuid,c=e[a];if(void 0!==c)if(delete e[a],c<i){const s=--i,a=t[s],l=--o,p=t[l];e[a.uuid]=c,t[c]=a,e[p.uuid]=s,t[s]=p,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[s],i=e[l];e[c]=r,e[s]=i,e.pop()}}else{const i=--o,s=t[i];i>0&&(e[s.uuid]=c),t[c]=s,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[c]=e[i],e.pop()}}}this.nCachedObjects_=i}subscribe_(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const i=this._bindings;if(void 0!==r)return i[r];const o=this._paths,s=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,p=new Array(c);r=i.length,n[t]=r,o.push(t),s.push(e),i.push(p);for(let n=l,r=a.length;n!==r;++n){const r=a[n];p[n]=new Ph(r,t,e)}return p}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,i=this._parsedPaths,o=this._bindings,s=o.length-1,a=o[s];e[t[s]]=n,o[n]=a,o.pop(),i[n]=i[s],i.pop(),r[n]=r[s],r.pop()}}}Rh.prototype.isAnimationObjectGroup=!0;class Dh{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const i=e.tracks,o=i.length,s=new Array(o),a={endingStart:ke,endingEnd:ke};for(let t=0;t!==o;++t){const e=i[t].createInterpolant(null);s[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Fe,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,i=r/n,o=n/r;t.warp(1,i,e),this.warp(o,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,i=r.time,o=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);const a=s.parameterPositions,c=s.sampleValues;return a[0]=i,a[1]=i+n,c[0]=t/o,c[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const r=(t-i)*n;if(r<0||0===n)return;this._startTime=null,e=n*r}e*=this._updateTimeScale(t);const o=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case Ye:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(o),e[n].accumulateAdditive(s);break;case qe:default:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(o),e[n].accumulate(r,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,i=this._loopCount;const o=n===Ne;if(0===t)return-1===i?r:o&&1==(1&i)?e-r:r;if(n===Be){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,i+=Math.abs(n);const s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,o)}else this._setEndings(!1,!1,o);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(o&&1==(1&i))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=Ve,r.endingEnd=Ve):(r.endingStart=t?this.zeroSlopeAtStart?Ve:ke:We,r.endingEnd=e?this.zeroSlopeAtEnd?Ve:ke:We)}_scheduleFading(t,e,n){const r=this._mixer,i=r.time;let o=this._weightInterpolant;null===o&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const s=o.parameterPositions,a=o.sampleValues;return s[0]=i,a[0]=e,s[1]=i+t,a[1]=n,this}}class Ih extends Bn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,o=t._propertyBindings,s=t._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];void 0===l&&(l={},c[a]=l);for(let t=0;t!==i;++t){const i=r[t],c=i.name;let p=l[c];if(void 0!==p)o[t]=p;else{if(p=o[t],void 0!==p){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,a,c));continue}const r=e&&e._propertyBindings[t].binding.parsedPath;p=new wh(Ph.create(n,c,r),i.ValueTypeName,i.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,a,c),o[t]=p}s[t].resultBuffer=p.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,i=this._actionsByClip;let o=i[e];if(void 0===o)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=o;else{const e=o.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),o.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,o=this._actionsByClip,s=o[i],a=s.knownActions,c=a[a.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),t._byClipCacheIndex=null,delete s.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete o[i],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,i=this._bindings;let o=r[e];void 0===o&&(o={},r[e]=o),o[n]=t,t._cacheIndex=i.length,i.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,o=this._bindingsByRootAndName,s=o[r],a=e[e.length-1],c=t._cacheIndex;a._cacheIndex=c,e[c]=a,e.pop(),delete s[i],0===Object.keys(s).length&&delete o[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new zp(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i}clipAction(t,e,n){const r=e||this._root,i=r.uuid;let o="string"==typeof t?Bp.findByName(r,t):t;const s=null!==o?o.uuid:t,a=this._actionsByClip[s];let c=null;if(void 0===n&&(n=null!==o?o.blendMode:qe),void 0!==a){const t=a.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;c=a.knownActions[0],null===o&&(o=c._clip)}if(null===o)return null;const l=new Dh(this,o,e,n);return this._bindAction(l,c),this._addInactiveAction(l,s,i),l}existingAction(t,e){const n=e||this._root,r=n.uuid,i="string"==typeof t?Bp.findByName(n,t):t,o=i?i.uuid:t,s=this._actionsByClip[o];return void 0!==s&&s.actionByRoot[r]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),o=this._accuIndex^=1;for(let s=0;s!==n;++s){e[s]._update(r,t,i,o)}const s=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)s[t].apply(o);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const t=i.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const i=r._cacheIndex,o=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,o._cacheIndex=i,e[i]=o,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const r=n[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const t in r){const e=r[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}Ih.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Oh{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Oh(void 0===this.value.clone?this.value:this.value.clone())}}class jh extends cc{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n||1}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}jh.prototype.isInstancedInterleavedBuffer=!0;class Bh{constructor(t,e,n,r,i){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}Bh.prototype.isGLBufferAttribute=!0;class Fh{constructor(t,e,n=0,r=1/0){this.ray=new Br(t,e),this.near=n,this.far=r,this.camera=null,this.layers=new Zr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!1,n=[]){return Hh(t,this,n,e),n.sort(Nh),n}intersectObjects(t,e=!1,n=[]){for(let r=0,i=t.length;r<i;r++)Hh(t[r],this,n,e);return n.sort(Nh),n}}function Nh(t,e){return t.distance-e.distance}function Hh(t,e,n,r){if(t.visible&&(t.raycast(e,n),!0===r)){const r=t.children;for(let t=0,i=r.length;t<i;t++)Hh(r[t],e,n,!0)}}class Gh{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(kn(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Uh{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}const kh=new Jn;class Vh{constructor(t=new Jn(1/0,1/0),e=new Jn(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=kh.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new Jn),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new Jn),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Jn),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Jn),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return kh.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Vh.prototype.isBox2=!0;const Wh=new ar,qh=new ar;class Yh{constructor(t=new ar,e=new ar){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new ar),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new ar),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new ar),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Wh.subVectors(t,this.start),qh.subVectors(this.end,this.start);const n=qh.dot(qh);let r=qh.dot(Wh)/n;return e&&(r=kn(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new ar),this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class Xh extends di{constructor(t){super(),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}Xh.prototype.isImmediateRenderObject=!0;const Zh=new ar;class Jh extends di{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new co,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const i=t/n*Math.PI*2,o=e/n*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(o),Math.sin(o),1)}n.setAttribute("position",new Ji(r,3));const i=new Wc({fog:!1,toneMapped:!1});this.cone=new tl(n,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Zh.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Zh),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Qh=new ar,Kh=new Fr,$h=new Fr;class td extends tl{constructor(t){const e=function t(e){const n=[];e&&e.isBone&&n.push(e);for(let r=0;r<e.children.length;r++)n.push.apply(n,t(e.children[r]));return n}(t),n=new co,r=[],i=[],o=new Bi(0,0,1),s=new Bi(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(o.r,o.g,o.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new Ji(r,3)),n.setAttribute("color",new Ji(i,3)),super(n,new Wc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");$h.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(Kh.multiplyMatrices($h,i.matrixWorld),Qh.setFromMatrixPosition(Kh),r.setXYZ(n,Qh.x,Qh.y,Qh.z),Kh.multiplyMatrices($h,i.parent.matrixWorld),Qh.setFromMatrixPosition(Kh),r.setXYZ(n+1,Qh.x,Qh.y,Qh.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}class ed extends zo{constructor(t,e,n){super(new op(e,4,2),new Fi({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const nd=new ar,rd=new Bi,id=new Bi;class od extends di{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new ep(e);r.rotateY(.5*Math.PI),this.material=new Fi({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=r.getAttribute("position"),o=new Float32Array(3*i.count);r.setAttribute("color",new Gi(o,3)),this.add(new zo(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");rd.copy(this.light.color),id.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const r=t<n/2?rd:id;e.setXYZ(t,r.r,r.g,r.b)}e.needsUpdate=!0}t.lookAt(nd.setFromMatrixPosition(this.light.matrixWorld).negate())}}class sd extends tl{constructor(t=10,e=10,n=4473924,r=8947848){n=new Bi(n),r=new Bi(r);const i=e/2,o=t/e,s=t/2,a=[],c=[];for(let t=0,l=0,p=-s;t<=e;t++,p+=o){a.push(-s,0,p,s,0,p),a.push(p,0,-s,p,0,s);const e=t===i?n:r;e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3,e.toArray(c,l),l+=3}const l=new co;l.setAttribute("position",new Ji(a,3)),l.setAttribute("color",new Ji(c,3)),super(l,new Wc({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class ad extends tl{constructor(t=10,e=16,n=8,r=64,i=4473924,o=8947848){i=new Bi(i),o=new Bi(o);const s=[],a=[];for(let n=0;n<=e;n++){const r=n/e*(2*Math.PI),c=Math.sin(r)*t,l=Math.cos(r)*t;s.push(0,0,0),s.push(c,0,l);const p=1&n?i:o;a.push(p.r,p.g,p.b),a.push(p.r,p.g,p.b)}for(let e=0;e<=n;e++){const c=1&e?i:o,l=t-t/n*e;for(let t=0;t<r;t++){let e=t/r*(2*Math.PI),n=Math.sin(e)*l,i=Math.cos(e)*l;s.push(n,0,i),a.push(c.r,c.g,c.b),e=(t+1)/r*(2*Math.PI),n=Math.sin(e)*l,i=Math.cos(e)*l,s.push(n,0,i),a.push(c.r,c.g,c.b)}}const c=new co;c.setAttribute("position",new Ji(s,3)),c.setAttribute("color",new Ji(a,3)),super(c,new Wc({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const cd=new ar,ld=new ar,pd=new ar;class ud extends di{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let r=new co;r.setAttribute("position",new Ji([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const i=new Wc({fog:!1,toneMapped:!1});this.lightPlane=new Qc(r,i),this.add(this.lightPlane),r=new co,r.setAttribute("position",new Ji([0,0,0,0,0,1],3)),this.targetLine=new Qc(r,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){cd.setFromMatrixPosition(this.light.matrixWorld),ld.setFromMatrixPosition(this.light.target.matrixWorld),pd.subVectors(ld,cd),this.lightPlane.lookAt(ld),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(ld),this.targetLine.scale.z=pd.length()}}const hd=new ar,dd=new Io;class fd extends tl{constructor(t){const e=new co,n=new Wc({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],o={},s=new Bi(16755200),a=new Bi(16711680),c=new Bi(43775),l=new Bi(16777215),p=new Bi(3355443);function u(t,e,n){h(t,n),h(e,n)}function h(t,e){r.push(0,0,0),i.push(e.r,e.g,e.b),void 0===o[t]&&(o[t]=[]),o[t].push(r.length/3-1)}u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",a),u("p","n2",a),u("p","n3",a),u("p","n4",a),u("u1","u2",c),u("u2","u3",c),u("u3","u1",c),u("c","t",l),u("p","c",p),u("cn1","cn2",p),u("cn3","cn4",p),u("cf1","cf2",p),u("cf3","cf4",p),e.setAttribute("position",new Ji(r,3)),e.setAttribute("color",new Ji(i,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const t=this.geometry,e=this.pointMap;dd.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),md("c",e,t,dd,0,0,-1),md("t",e,t,dd,0,0,1),md("n1",e,t,dd,-1,-1,-1),md("n2",e,t,dd,1,-1,-1),md("n3",e,t,dd,-1,1,-1),md("n4",e,t,dd,1,1,-1),md("f1",e,t,dd,-1,-1,1),md("f2",e,t,dd,1,-1,1),md("f3",e,t,dd,-1,1,1),md("f4",e,t,dd,1,1,1),md("u1",e,t,dd,.7,1.1,-1),md("u2",e,t,dd,-.7,1.1,-1),md("u3",e,t,dd,0,2,-1),md("cf1",e,t,dd,-1,0,1),md("cf2",e,t,dd,1,0,1),md("cf3",e,t,dd,0,-1,1),md("cf4",e,t,dd,0,1,1),md("cn1",e,t,dd,-1,0,-1),md("cn2",e,t,dd,1,0,-1),md("cn3",e,t,dd,0,-1,-1),md("cn4",e,t,dd,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function md(t,e,n,r,i,o,s){hd.set(i,o,s).unproject(r);const a=e[t];if(void 0!==a){const t=n.getAttribute("position");for(let e=0,n=a.length;e<n;e++)t.setXYZ(a[e],hd.x,hd.y,hd.z)}}const _d=new pr;class yd extends tl{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new co;i.setIndex(new Gi(n,1)),i.setAttribute("position",new Gi(r,3)),super(i,new Wc({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&_d.setFromObject(this.object),_d.isEmpty())return;const e=_d.min,n=_d.max,r=this.geometry.attributes.position,i=r.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=e.x,i[4]=n.y,i[5]=n.z,i[6]=e.x,i[7]=e.y,i[8]=n.z,i[9]=n.x,i[10]=e.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=e.z,i[15]=e.x,i[16]=n.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=n.x,i[22]=e.y,i[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return tl.prototype.copy.call(this,t),this.object=t.object,this}}class gd extends tl{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new co;r.setIndex(new Gi(n,1)),r.setAttribute("position",new Ji([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Wc({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class bd extends Qc{constructor(t,e=1,n=16776960){const r=n,i=new co;i.setAttribute("position",new Ji([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),super(i,new Wc({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const o=new co;o.setAttribute("position",new Ji([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),o.computeBoundingSphere(),this.add(new zo(o,new Fi({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?m:f,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const vd=new ar;let xd,wd;class Sd extends di{constructor(t=new ar(0,0,1),e=new ar(0,0,0),n=1,r=16776960,i=.2*n,o=.2*i){super(),this.type="ArrowHelper",void 0===xd&&(xd=new co,xd.setAttribute("position",new Ji([0,0,0,0,1,0],3)),wd=new fl(0,.5,1,5,1),wd.translate(0,-.5,0)),this.position.copy(e),this.line=new Qc(xd,new Wc({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new zo(wd,new Fi({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,i,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{vd.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(vd,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class Md extends tl{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new co;n.setAttribute("position",new Ji(e,3)),n.setAttribute("color",new Ji([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new Wc({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Td=new Float32Array(1),Cd=new Int32Array(Td.buffer);class zd{static toHalfFloat(t){Td[0]=t;const e=Cd[0];let n=e>>16&32768,r=e>>12&2047;const i=e>>23&255;return i<103?n:i>142?(n|=31744,n|=(255==i?0:1)&&8388607&e,n):i<113?(r|=2048,n|=(r>>114-i)+(r>>113-i&1),n):(n|=i-112<<10|r>>1,n+=1&r,n)}}const Ad=Math.pow(2,8),Ed=[.125,.215,.35,.446,.526,.582],Ld=5+Ed.length,Pd={[Qe]:0,[Ke]:1,[tn]:2,[nn]:3,[rn]:4,[on]:5,[$e]:6},Rd=new Fi({side:m,depthWrite:!1,depthTest:!1}),Dd=new zo(new Eo,Rd),Id=new Du,{_lodPlanes:Od,_sizeLods:jd,_sigmas:Bd}=qd(),Fd=new Bi;let Nd=null;const Hd=(1+Math.sqrt(5))/2,Gd=1/Hd,Ud=[new ar(1,1,1),new ar(-1,1,1),new ar(1,1,-1),new ar(-1,1,-1),new ar(0,Hd,Gd),new ar(0,Hd,-Gd),new ar(Gd,0,Hd),new ar(-Gd,0,Hd),new ar(Hd,Gd,0),new ar(-Hd,Gd,0)];function kd(t){const e=Math.max(t.r,t.g,t.b),n=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);return t.multiplyScalar(Math.pow(2,-n)),(n+128)/255}class Vd{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(t),n=new ar(0,1,0);return new fp({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:Pd[Qe]},outputEncoding:{value:Pd[Qe]}},vertexShader:Qd(),fragmentShader:`\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform int samples;\\n\\t\\t\\tuniform float weights[ n ];\\n\\t\\t\\tuniform bool latitudinal;\\n\\t\\t\\tuniform float dTheta;\\n\\t\\t\\tuniform float mipInt;\\n\\t\\t\\tuniform vec3 poleAxis;\\n\\n\\t\\t\\t${Kd()}\\n\\n\\t\\t\\t#define ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\n\\t\\t\\tvec3 getSample( float theta, vec3 axis ) {\\n\\n\\t\\t\\t\\tfloat cosTheta = cos( theta );\\n\\t\\t\\t\\t// Rodrigues\' axis-angle rotation\\n\\t\\t\\t\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t\\t\\t\\t+ cross( axis, vOutputDirection ) * sin( theta )\\n\\t\\t\\t\\t\\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\\n\\n\\t\\t\\t\\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\\n\\n\\t\\t\\t\\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\\n\\n\\t\\t\\t\\t\\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taxis = normalize( axis );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\\n\\n\\t\\t\\t\\tfor ( int i = 1; i < n; i++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i >= samples ) {\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfloat theta = dTheta * float( i );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,blending:b,depthTest:!1,depthWrite:!1})}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100){Nd=this._renderer.getRenderTarget();const i=this._allocateTargets();return this._sceneToCubeUV(t,n,r,i),e>0&&this._blur(i,0,0,e),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Jd(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Zd(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Od.length;t++)Od[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Nd),t.scissorTest=!1,Xd(t,0,0,t.width,t.height)}_fromTexture(t){Nd=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:mt,minFilter:mt,generateMipmaps:!1,type:Tt,format:Ut,encoding:Wd(t)?t.encoding:tn,depthBuffer:!1},n=Yd(e);return n.depthBuffer=!t,this._pingPongRenderTarget=Yd(e),n}_compileMaterial(t){const e=new zo(Od[0],t);this._renderer.compile(e,Id)}_sceneToCubeUV(t,e,n,r){const i=new Oo(90,1,e,n),o=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],a=this._renderer,c=a.autoClear,l=a.outputEncoding,p=a.toneMapping;a.getClearColor(Fd),a.toneMapping=K,a.outputEncoding=Qe,a.autoClear=!1;let u=!1;const h=t.background;if(h){if(h.isColor){Rd.color.copy(h).convertSRGBToLinear(),t.background=null;const e=kd(Rd.color);Rd.opacity=e,u=!0}}else{Rd.color.copy(Fd).convertSRGBToLinear();const t=kd(Rd.color);Rd.opacity=t,u=!0}for(let e=0;e<6;e++){const n=e%3;0==n?(i.up.set(0,o[e],0),i.lookAt(s[e],0,0)):1==n?(i.up.set(0,0,o[e]),i.lookAt(0,s[e],0)):(i.up.set(0,o[e],0),i.lookAt(0,0,s[e])),Xd(r,n*Ad,e>2?Ad:0,Ad,Ad),a.setRenderTarget(r),u&&a.render(Dd,i),a.render(t,i)}a.toneMapping=p,a.outputEncoding=l,a.autoClear=c}_textureToCubeUV(t,e){const n=this._renderer;t.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Jd()):null==this._equirectShader&&(this._equirectShader=Zd());const r=t.isCubeTexture?this._cubemapShader:this._equirectShader,i=new zo(Od[0],r),o=r.uniforms;o.envMap.value=t,t.isCubeTexture||o.texelSize.value.set(1/t.image.width,1/t.image.height),o.inputEncoding.value=Pd[t.encoding],o.outputEncoding.value=Pd[e.texture.encoding],Xd(e,0,0,3*Ad,2*Ad),n.setRenderTarget(e),n.render(i,Id)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let e=1;e<Ld;e++){const n=Math.sqrt(Bd[e]*Bd[e]-Bd[e-1]*Bd[e-1]),r=Ud[(e-1)%Ud.length];this._blur(t,e-1,e,n,r)}e.autoClear=n}_blur(t,e,n,r,i){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,r,"latitudinal",i),this._halfBlur(o,t,n,n,r,"longitudinal",i)}_halfBlur(t,e,n,r,i,o,s){const a=this._renderer,c=this._blurMaterial;"latitudinal"!==o&&"longitudinal"!==o&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new zo(Od[r],c),p=c.uniforms,u=jd[n]-1,h=isFinite(i)?Math.PI/(2*u):2*Math.PI/39,d=i/h,f=isFinite(i)?1+Math.floor(3*d):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let _=0;for(let t=0;t<20;++t){const e=t/d,n=Math.exp(-e*e/2);m.push(n),0==t?_+=n:t<f&&(_+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/_;p.envMap.value=t.texture,p.samples.value=f,p.weights.value=m,p.latitudinal.value="latitudinal"===o,s&&(p.poleAxis.value=s),p.dTheta.value=h,p.mipInt.value=8-n,p.inputEncoding.value=Pd[t.texture.encoding],p.outputEncoding.value=Pd[t.texture.encoding];const y=jd[r];Xd(e,3*Math.max(0,Ad-2*y),(0===r?0:2*Ad)+2*y*(r>4?r-8+4:0),3*y,2*y),a.setRenderTarget(e),a.render(l,Id)}}function Wd(t){return void 0!==t&&t.type===Tt&&(t.encoding===Qe||t.encoding===Ke||t.encoding===$e)}function qd(){const t=[],e=[],n=[];let r=8;for(let i=0;i<Ld;i++){const o=Math.pow(2,r);e.push(o);let s=1/o;i>4?s=Ed[i-8+4-1]:0==i&&(s=0),n.push(s);const a=1/(o-1),c=-a/2,l=1+a/2,p=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,h=6,d=3,f=2,m=1,_=new Float32Array(d*h*u),y=new Float32Array(f*h*u),g=new Float32Array(m*h*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];_.set(r,d*h*t),y.set(p,f*h*t);const i=[t,t,t,t,t,t];g.set(i,m*h*t)}const b=new co;b.setAttribute("position",new Gi(_,d)),b.setAttribute("uv",new Gi(y,f)),b.setAttribute("faceIndex",new Gi(g,m)),t.push(b),r>4&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function Yd(t){const e=new ir(3*Ad,3*Ad,t);return e.texture.mapping=pt,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Xd(t,e,n,r,i){t.viewport.set(e,n,r,i),t.scissor.set(e,n,r,i)}function Zd(){const t=new Jn(1,1);return new fp({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:Pd[Qe]},outputEncoding:{value:Pd[Qe]}},vertexShader:Qd(),fragmentShader:`\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform vec2 texelSize;\\n\\n\\t\\t\\t${Kd()}\\n\\n\\t\\t\\t#include <common>\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\n\\t\\t\\t\\tvec3 outputDirection = normalize( vOutputDirection );\\n\\t\\t\\t\\tvec2 uv = equirectUv( outputDirection );\\n\\n\\t\\t\\t\\tvec2 f = fract( uv / texelSize - 0.5 );\\n\\t\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\t\\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x += texelSize.x;\\n\\t\\t\\t\\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.y += texelSize.y;\\n\\t\\t\\t\\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x -= texelSize.x;\\n\\t\\t\\t\\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\n\\t\\t\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\t\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\t\\t\\tgl_FragColor.rgb = mix( tm, bm, f.y );\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,blending:b,depthTest:!1,depthWrite:!1})}function Jd(){return new fp({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Pd[Qe]},outputEncoding:{value:Pd[Qe]}},vertexShader:Qd(),fragmentShader:`\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform samplerCube envMap;\\n\\n\\t\\t\\t${Kd()}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t`,blending:b,depthTest:!1,depthWrite:!1})}function Qd(){return"\\n\\n\\t\\tprecision mediump float;\\n\\t\\tprecision mediump int;\\n\\n\\t\\tattribute vec3 position;\\n\\t\\tattribute vec2 uv;\\n\\t\\tattribute float faceIndex;\\n\\n\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t// RH coordinate system; PMREM face-indexing convention\\n\\t\\tvec3 getDirection( vec2 uv, float face ) {\\n\\n\\t\\t\\tuv = 2.0 * uv - 1.0;\\n\\n\\t\\t\\tvec3 direction = vec3( uv, 1.0 );\\n\\n\\t\\t\\tif ( face == 0.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\n\\t\\t\\t} else if ( face == 1.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\n\\t\\t\\t} else if ( face == 2.0 ) {\\n\\n\\t\\t\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\n\\t\\t\\t} else if ( face == 3.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\n\\t\\t\\t} else if ( face == 4.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\n\\t\\t\\t} else if ( face == 5.0 ) {\\n\\n\\t\\t\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn direction;\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvOutputDirection = getDirection( uv, faceIndex );\\n\\t\\t\\tgl_Position = vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\t"}function Kd(){return"\\n\\n\\t\\tuniform int inputEncoding;\\n\\t\\tuniform int outputEncoding;\\n\\n\\t\\t#include <encodings_pars_fragment>\\n\\n\\t\\tvec4 inputTexelToLinear( vec4 value ) {\\n\\n\\t\\t\\tif ( inputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( inputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn sRGBToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn RGBEToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 7.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 16.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn RGBDToLinear( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn GammaToLinear( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 linearToOutputTexel( vec4 value ) {\\n\\n\\t\\t\\tif ( outputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( outputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn LinearTosRGB( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBE( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 7.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 16.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBD( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn LinearToGamma( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 envMapTexelToLinear( vec4 color ) {\\n\\n\\t\\t\\treturn inputTexelToLinear( color );\\n\\n\\t\\t}\\n\\t"}const $d=0,tf=1,ef=0,nf=1,rf=2;function of(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function sf(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function af(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new al(t,e)}function cf(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Tc(t)}function lf(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new al(t,e)}function pf(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new nl(t)}function uf(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new nl(t)}function hf(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new nl(t)}function df(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new ar(t,e,n)}function ff(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Gi(t,e).setUsage(zn)}function mf(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Ui(t,e)}function _f(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new ki(t,e)}function yf(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Vi(t,e)}function gf(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Wi(t,e)}function bf(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new qi(t,e)}function vf(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Yi(t,e)}function xf(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Xi(t,e)}function wf(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Ji(t,e)}function Sf(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Qi(t,e)}function Mf(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Md(t)}function Tf(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new yd(t,e)}function Cf(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new tl(new wl(t.geometry),new Wc({color:void 0!==e?e:16777215}))}function zf(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new tl(new up(t.geometry),new Wc({color:void 0!==e?e:16777215}))}function Af(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Vp(t)}function Ef(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Zp(t)}function Lf(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Fo(t,n)}function Pf(){console.error("THREE.CanvasRenderer has been removed")}function Rf(){console.error("THREE.JSONLoader has been removed.")}Qp.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Qp.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},gu.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},sd.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},td.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Up.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Gu.extractUrlBase(t)},Up.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Vh.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Vh.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Vh.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Vh.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},pr.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},pr.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},pr.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},pr.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},pr.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},Er.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Uo.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Yh.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Qn.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Qn.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Qn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Qn.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Qn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Qn.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Fr.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Fr.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Fr.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new ar).setFromMatrixColumn(this,3)},Fr.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Fr.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Fr.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Fr.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Fr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Fr.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Fr.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Fr.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Fr.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Fr.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Fr.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Fr.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Fr.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Fr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Fr.prototype.makeFrustum=function(t,e,n,r,i,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,i,o)},Fr.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},yi.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},sr.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},sr.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Br.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Br.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Br.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Ai.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Ai.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Ai.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Ai.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Ai.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Ai.barycoordFromPoint=function(t,e,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ai.getBarycoord(t,e,n,r,i)},Ai.normal=function(t,e,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ai.getNormal(t,e,n,r)},bu.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},bu.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Ql(this,t)},bu.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ip(this,t)},Jn.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},Jn.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},Jn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},ar.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},ar.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},ar.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},ar.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},ar.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},ar.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},ar.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},ar.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},ar.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},rr.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},rr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},di.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},di.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},di.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},di.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},di.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(di.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),zo.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(zo.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Xe},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Oc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Oo.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(vu.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Gi.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===zn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(zn)}}}),Gi.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?zn:Cn),this},Gi.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Gi.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},co.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},co.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Gi(arguments[1],arguments[2])))},co.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},co.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},co.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},co.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},co.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(co.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),cc.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?zn:Cn),this},cc.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Ql.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Ql.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Ql.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},ac.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Oh.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Li.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Bi}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===y}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Do.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),rc.prototype.clearTarget=function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},rc.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},rc.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},rc.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},rc.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},rc.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},rc.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' )."),this.extensions.get("OES_texture_float")},rc.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' )."),this.extensions.get("OES_texture_half_float")},rc.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' )."),this.extensions.get("OES_standard_derivatives")},rc.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},rc.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},rc.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' )."),this.extensions.get("EXT_blend_minmax")},rc.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},rc.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' )."),this.extensions.get("ANGLE_instanced_arrays")},rc.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},rc.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},rc.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},rc.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},rc.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},rc.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},rc.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},rc.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},rc.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},rc.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},rc.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(rc.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Ke:Qe}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Ya.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(ir.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),mh.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new nh).load(t,(function(t){e.setBuffer(t)})),this},xh.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},jo.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},jo.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},$n.crossOrigin=void 0,$n.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Jp;i.setCrossOrigin(this.crossOrigin);const o=i.load(t,n,void 0,r);return e&&(o.mapping=e),o},$n.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Xp;i.setCrossOrigin(this.crossOrigin);const o=i.load(t,n,void 0,r);return e&&(o.mapping=e),o},$n.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},$n.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Df={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function If(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},function(t,e){t.exports={GRAVITY:-9.8,MAX_INTERVAL:4/60,ITERATIONS:10,SIMULATION_RATE:8.333,ACTIVATION_STATE:{ACTIVE_TAG:"active",ISLAND_SLEEPING:"islandSleeping",WANTS_DEACTIVATION:"wantsDeactivation",DISABLE_DEACTIVATION:"disableDeactivation",DISABLE_SIMULATION:"disableSimulation"},COLLISION_FLAG:{STATIC_OBJECT:1,KINEMATIC_OBJECT:2,NO_CONTACT_RESPONSE:4,CUSTOM_MATERIAL_CALLBACK:8,CHARACTER_OBJECT:16,DISABLE_VISUALIZE_OBJECT:32,DISABLE_SPU_COLLISION_PROCESSING:64},TYPE:{STATIC:"static",DYNAMIC:"dynamic",KINEMATIC:"kinematic"},SHAPE:{BOX:"box",CYLINDER:"cylinder",SPHERE:"sphere",CAPSULE:"capsule",CONE:"cone",HULL:"hull",HACD:"hacd",VHACD:"vhacd",MESH:"mesh",HEIGHTFIELD:"heightfield"},FIT:{ALL:"all",MANUAL:"manual"},CONSTRAINT:{LOCK:"lock",FIXED:"fixed",SPRING:"spring",SLIDER:"slider",HINGE:"hinge",CONE_TWIST:"coneTwist",POINT_TO_POINT:"pointToPoint"},MESSAGE_TYPES:{INIT:0,READY:1,ADD_BODY:2,BODY_READY:3,UPDATE_BODY:4,REMOVE_BODY:5,ADD_SHAPES:6,REMOVE_SHAPES:7,ADD_CONSTRAINT:8,REMOVE_CONSTRAINT:9,ENABLE_DEBUG:10,RESET_DYNAMIC_BODY:11,ACTIVATE_BODY:12,TRANSFER_DATA:13,APPLY_FORCE:14,APPLY_IMPULSE:15,SET_LINEAR_VELOCITY:16,SET_ANGULAR_VELOCITY:17},BUFFER_CONFIG:{HEADER_LENGTH:2,MAX_BODIES:1e4,MATRIX_OFFSET:0,LINEAR_VELOCITY_OFFSET:16,ANGULAR_VELOCITY_OFFSET:17,COLLISIONS_OFFSET:18,BODY_DATA_SIZE:26},BUFFER_STATE:{UNINITIALIZED:0,READY:1,CONSUMED:2}}},function(t,e){var n,r,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function a(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"==typeof clearTimeout?clearTimeout:s}catch(t){r=s}}();var c,l=[],p=!1,u=-1;function h(){p&&c&&(p=!1,c.length?l=c.concat(l):u=-1,l.length&&d())}function d(){if(!p){var t=a(h);p=!0;for(var e=l.length;e;){for(c=l,l=[];++u<e;)c&&c[u].run();u=-1,e=l.length}c=null,p=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===s||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];l.push(new f(t,e)),1!==l.length||p||a(d)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e,n){"use strict";(function(t){const n=e.TYPE={BOX:"box",CYLINDER:"cylinder",SPHERE:"sphere",CAPSULE:"capsule",CONE:"cone",HULL:"hull",HACD:"hacd",VHACD:"vhacd",MESH:"mesh",HEIGHTFIELD:"heightfield"},r=e.FIT={ALL:"all",MANUAL:"manual"},i=(e.HEIGHTFIELD_DATA_TYPE={short:"short",float:"float"},t.Object3D.prototype.hasOwnProperty("updateMatrices"));function o(e){e.fit=e.hasOwnProperty("fit")?e.fit:r.ALL,e.type=e.type||n.HULL,e.minHalfExtent=e.hasOwnProperty("minHalfExtent")?e.minHalfExtent:0,e.maxHalfExtent=e.hasOwnProperty("maxHalfExtent")?e.maxHalfExtent:Number.POSITIVE_INFINITY,e.cylinderAxis=e.cylinderAxis||"y",e.margin=e.hasOwnProperty("margin")?e.margin:.01,e.includeInvisible=!!e.hasOwnProperty("includeInvisible")&&e.includeInvisible,e.offset||(e.offset=new t.Vector3),e.orientation||(e.orientation=new t.Quaternion)}e.createCollisionShapes=function(t,e){switch(e.type){case n.BOX:return[this.createBoxShape(t,e)];case n.CYLINDER:return[this.createCylinderShape(t,e)];case n.CAPSULE:return[this.createCapsuleShape(t,e)];case n.CONE:return[this.createConeShape(t,e)];case n.SPHERE:return[this.createSphereShape(t,e)];case n.HULL:return[this.createHullShape(t,e)];case n.HACD:return this.createHACDShapes(t,e);case n.VHACD:return this.createVHACDShapes(t,e);case n.MESH:return[this.createTriMeshShape(t,e)];case n.HEIGHTFIELD:return[this.createHeightfieldTerrainShape(t,e)];default:return console.warn(e.type+" is not currently supported"),[]}},e.createBoxShape=function(t,e){e.type=n.BOX,o(e),e.fit===r.ALL&&(e.halfExtents=p(t,u(t,e),e.minHalfExtent,e.maxHalfExtent));const i=new Ammo.btVector3(e.halfExtents.x,e.halfExtents.y,e.halfExtents.z),a=new Ammo.btBoxShape(i);return Ammo.destroy(i),s(a,e,c(t,e)),a},e.createCylinderShape=function(t,e){e.type=n.CYLINDER,o(e),e.fit===r.ALL&&(e.halfExtents=p(t,u(t,e),e.minHalfExtent,e.maxHalfExtent));const i=new Ammo.btVector3(e.halfExtents.x,e.halfExtents.y,e.halfExtents.z),a=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btCylinderShape(i);case"x":return new Ammo.btCylinderShapeX(i);case"z":return new Ammo.btCylinderShapeZ(i)}return null})();return Ammo.destroy(i),s(a,e,c(t,e)),a},e.createCapsuleShape=function(t,e){e.type=n.CAPSULE,o(e),e.fit===r.ALL&&(e.halfExtents=p(t,u(t,e),e.minHalfExtent,e.maxHalfExtent));const{x:i,y:a,z:l}=e.halfExtents,h=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btCapsuleShape(Math.max(i,l),2*a);case"x":return new Ammo.btCapsuleShapeX(Math.max(a,l),2*i);case"z":return new Ammo.btCapsuleShapeZ(Math.max(i,a),2*l)}return null})();return s(h,e,c(t,e)),h},e.createConeShape=function(t,e){e.type=n.CONE,o(e),e.fit===r.ALL&&(e.halfExtents=p(t,u(t,e),e.minHalfExtent,e.maxHalfExtent));const{x:i,y:a,z:l}=e.halfExtents,h=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btConeShape(Math.max(i,l),2*a);case"x":return new Ammo.btConeShapeX(Math.max(a,l),2*i);case"z":return new Ammo.btConeShapeZ(Math.max(i,a),2*l)}return null})();return s(h,e,c(t,e)),h},e.createSphereShape=function(t,e){let i;e.type=n.SPHERE,o(e),i=e.fit!==r.MANUAL||isNaN(e.sphereRadius)?l(t,e,u(t,e)):e.sphereRadius;const a=new Ammo.btSphereShape(i);return s(a,e,c(t,e)),a},e.createHullShape=function(){const e=new t.Vector3,i=new t.Vector3;return function(t,l){if(l.type=n.HULL,o(l),l.fit===r.MANUAL)return console.warn("cannot use fit: manual with type: hull"),null;const p=u(t,l),h=new Ammo.btVector3,d=new Ammo.btConvexHullShape;d.setMargin(l.margin),i.addVectors(p.max,p.min).multiplyScalar(.5);let f=0;a(t,l,t=>{f+=t.attributes.position.array.length/3});const m=l.hullMaxVertices||1e5;f>m&&console.warn(`too many vertices for hull shape; sampling ~${m} from ~${f} vertices`);const _=Math.min(1,m/f);a(t,l,(t,n)=>{const r=t.attributes.position.array;for(let t=0;t<r.length;t+=3)Math.random()<=_&&(e.set(r[t],r[t+1],r[t+2]).applyMatrix4(n).sub(i),h.setValue(e.x,e.y,e.z),d.addPoint(h,t===r.length-3))});let y=d;if(d.getNumVertices()>=100){const t=new Ammo.btShapeHull(d);t.buildHull(l.margin),Ammo.destroy(d),y=new Ammo.btConvexHullShape(Ammo.getPointer(t.getVertexPointer()),t.numVertices()),Ammo.destroy(t)}return Ammo.destroy(h),s(y,l,c(t,l)),y}}(),e.createHACDShapes=function(){const e=new t.Vector3,i=new t.Vector3;return function(t,l){if(l.type=n.HACD,o(l),l.fit===r.MANUAL)return console.warn("cannot use fit: manual with type: hacd"),[];if(!Ammo.hasOwnProperty("HACD"))return console.warn("HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version."),[];const p=u(t),h=c(t,l);let d=0,f=0;i.addVectors(p.max,p.min).multiplyScalar(.5),a(t,l,t=>{d+=t.attributes.position.array.length/3,t.index?f+=t.index.array.length/3:f+=t.attributes.position.array.length/9});const m=new Ammo.HACD;l.hasOwnProperty("compacityWeight")&&m.SetCompacityWeight(l.compacityWeight),l.hasOwnProperty("volumeWeight")&&m.SetVolumeWeight(l.volumeWeight),l.hasOwnProperty("nClusters")&&m.SetNClusters(l.nClusters),l.hasOwnProperty("nVerticesPerCH")&&m.SetNVerticesPerCH(l.nVerticesPerCH),l.hasOwnProperty("concavity")&&m.SetConcavity(l.concavity);const _=Ammo._malloc(3*d*8),y=Ammo._malloc(3*f*4);m.SetPoints(_),m.SetTriangles(y),m.SetNPoints(d),m.SetNTriangles(f);const g=_/8,b=y/4;a(t,l,(t,n)=>{const r=t.attributes.position.array,o=t.index?t.index.array:null;for(let t=0;t<r.length;t+=3)e.set(r[t+0],r[t+1],r[t+2]).applyMatrix4(n).sub(i),Ammo.HEAPF64[g+t+0]=e.x,Ammo.HEAPF64[g+t+1]=e.y,Ammo.HEAPF64[g+t+2]=e.z;if(o)for(let t=0;t<o.length;t++)Ammo.HEAP32[b+t]=o[t];else for(let t=0;t<r.length/3;t++)Ammo.HEAP32[b+t]=t}),m.Compute(),Ammo._free(_),Ammo._free(y);const v=m.GetNClusters(),x=[];for(let t=0;t<v;t++){const e=new Ammo.btConvexHullShape;e.setMargin(l.margin);const n=m.GetNPointsCH(t),r=m.GetNTrianglesCH(t),i=Ammo._malloc(3*n*8),o=Ammo._malloc(3*r*4);m.GetCH(t,i,o);const a=i/8;for(let t=0;t<n;t++){const r=new Ammo.btVector3,i=Ammo.HEAPF64[a+3*t+0],o=Ammo.HEAPF64[a+3*t+1],s=Ammo.HEAPF64[a+3*t+2];r.setValue(i,o,s),e.addPoint(r,t===n-1),Ammo.destroy(r)}s(e,l,h),x.push(e)}return x}}(),e.createVHACDShapes=function(){const e=new t.Vector3,i=new t.Vector3;return function(t,l){if(l.type=n.VHACD,o(l),l.fit===r.MANUAL)return console.warn("cannot use fit: manual with type: vhacd"),[];if(!Ammo.hasOwnProperty("VHACD"))return console.warn("VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version."),[];const p=u(t,l),h=c(t,l);let d=0,f=0;i.addVectors(p.max,p.min).multiplyScalar(.5),a(t,l,t=>{d+=t.attributes.position.count,t.index?f+=t.index.count/3:f+=t.attributes.position.count/3});const m=new Ammo.VHACD,_=new Ammo.Parameters;l.hasOwnProperty("resolution")&&_.set_m_resolution(l.resolution),l.hasOwnProperty("depth")&&_.set_m_depth(l.depth),l.hasOwnProperty("concavity")&&_.set_m_concavity(l.concavity),l.hasOwnProperty("planeDownsampling")&&_.set_m_planeDownsampling(l.planeDownsampling),l.hasOwnProperty("convexhullDownsampling")&&_.set_m_convexhullDownsampling(l.convexhullDownsampling),l.hasOwnProperty("alpha")&&_.set_m_alpha(l.alpha),l.hasOwnProperty("beta")&&_.set_m_beta(l.beta),l.hasOwnProperty("gamma")&&_.set_m_gamma(l.gamma),l.hasOwnProperty("pca")&&_.set_m_pca(l.pca),l.hasOwnProperty("mode")&&_.set_m_mode(l.mode),l.hasOwnProperty("maxNumVerticesPerCH")&&_.set_m_maxNumVerticesPerCH(l.maxNumVerticesPerCH),l.hasOwnProperty("minVolumePerCH")&&_.set_m_minVolumePerCH(l.minVolumePerCH),l.hasOwnProperty("convexhullApproximation")&&_.set_m_convexhullApproximation(l.convexhullApproximation),l.hasOwnProperty("oclAcceleration")&&_.set_m_oclAcceleration(l.oclAcceleration);const y=Ammo._malloc(3*d*8),g=Ammo._malloc(3*f*4);let b=y/8,v=g/4;a(t,l,(t,n)=>{const r=t.attributes.position.array,o=t.index?t.index.array:null;for(let t=0;t<r.length;t+=3)e.set(r[t+0],r[t+1],r[t+2]).applyMatrix4(n).sub(i),Ammo.HEAPF64[b+0]=e.x,Ammo.HEAPF64[b+1]=e.y,Ammo.HEAPF64[b+2]=e.z,b+=3;if(o)for(let t=0;t<o.length;t++)Ammo.HEAP32[v]=o[t],v++;else for(let t=0;t<r.length/3;t++)Ammo.HEAP32[v]=t,v++}),m.Compute(y,3,d,g,3,f,_),Ammo._free(y),Ammo._free(g);const x=m.GetNConvexHulls(),w=[],S=new Ammo.ConvexHull;for(let t=0;t<x;t++){m.GetConvexHull(t,S);const e=S.get_m_nPoints(),n=(S.get_m_points(),new Ammo.btConvexHullShape);n.setMargin(l.margin);for(let t=0;t<e;t++){const r=new Ammo.btVector3,i=S.get_m_points(3*t+0),o=S.get_m_points(3*t+1),s=S.get_m_points(3*t+2);r.setValue(i,o,s),n.addPoint(r,t===e-1),Ammo.destroy(r)}s(n,l,h),w.push(n)}return Ammo.destroy(S),Ammo.destroy(m),w}}(),e.createTriMeshShape=function(){const e=new t.Vector3,i=new t.Vector3,l=new t.Vector3;return function(t,p){if(p.type=n.MESH,o(p),p.fit===r.MANUAL)return console.warn("cannot use fit: manual with type: mesh"),null;const u=c(t,p),h=new Ammo.btVector3,d=new Ammo.btVector3,f=new Ammo.btVector3,m=new Ammo.btTriangleMesh(!0,!1);a(t,p,(t,n)=>{const r=t.attributes.position.array;if(t.index)for(let o=0;o<t.index.count;o+=3){const s=3*t.index.array[o],a=3*t.index.array[o+1],c=3*t.index.array[o+2];e.set(r[s],r[s+1],r[s+2]).applyMatrix4(n),i.set(r[a],r[a+1],r[a+2]).applyMatrix4(n),l.set(r[c],r[c+1],r[c+2]).applyMatrix4(n),h.setValue(e.x,e.y,e.z),d.setValue(i.x,i.y,i.z),f.setValue(l.x,l.y,l.z),m.addTriangle(h,d,f,!1)}else for(let t=0;t<r.length;t+=9)e.set(r[t+0],r[t+1],r[t+2]).applyMatrix4(n),i.set(r[t+3],r[t+4],r[t+5]).applyMatrix4(n),l.set(r[t+6],r[t+7],r[t+8]).applyMatrix4(n),h.setValue(e.x,e.y,e.z),d.setValue(i.x,i.y,i.z),f.setValue(l.x,l.y,l.z),m.addTriangle(h,d,f,!1)});const _=new Ammo.btVector3(u.x,u.y,u.z);m.setScaling(_),Ammo.destroy(_);const y=new Ammo.btBvhTriangleMeshShape(m,!0,!0);return y.resources=[m],Ammo.destroy(h),Ammo.destroy(d),Ammo.destroy(f),s(y,p),y}}(),e.createHeightfieldTerrainShape=function(t,e){if(o(e),e.fit===r.ALL)return console.warn("cannot use fit: all with type: heightfield"),null;const n=e.heightfieldDistance||1,i=e.heightfieldData||[],a=e.heightScale||0,c=e.hasOwnProperty("upAxis")?e.upAxis:1,l=(()=>{switch(e.heightDataType){case"short":return Ammo.PHY_SHORT;case"float":default:return Ammo.PHY_FLOAT}})(),p=!e.hasOwnProperty("flipQuadEdges")||e.flipQuadEdges,u=i.length,h=u>0?i[0].length:0,d=Ammo._malloc(u*h*4),f=d/4;let m=Number.POSITIVE_INFINITY,_=Number.NEGATIVE_INFINITY,y=0;for(let t=0;t<u;t++)for(let e=0;e<h;e++){const n=i[t][e];Ammo.HEAPF32[f+y]=n,y++,m=Math.min(m,n),_=Math.max(_,n)}const g=new Ammo.btHeightfieldTerrainShape(h,u,d,a,m,_,c,l,p),b=new Ammo.btVector3(n,1,n);return g.setLocalScaling(b),Ammo.destroy(b),g.heightfieldData=d,s(g,e),g};const s=function(t,e,n){t.type=e.type,t.setMargin(e.margin),t.destroy=()=>{for(let e of t.resources||[])Ammo.destroy(e);t.heightfieldData&&Ammo._free(t.heightfieldData),Ammo.destroy(t)};const r=new Ammo.btTransform,i=new Ammo.btQuaternion;if(r.setIdentity(),r.getOrigin().setValue(e.offset.x,e.offset.y,e.offset.z),i.setValue(e.orientation.x,e.orientation.y,e.orientation.z,e.orientation.w),r.setRotation(i),Ammo.destroy(i),n){const e=new Ammo.btVector3(n.x,n.y,n.z);t.setLocalScaling(e),Ammo.destroy(e)}t.localTransform=r},a=function(){const e=new t.Matrix4,n=new t.Matrix4,r=new t.BufferGeometry;return function(o,s,a){n.getInverse(o.matrixWorld),o.traverse(c=>{!c.isMesh||t.Sky&&c.__proto__==t.Sky.prototype||!(s.includeInvisible||c.el&&c.el.object3D.visible||c.visible)||(c===o?e.identity():(i&&c.updateMatrices(),e.multiplyMatrices(n,c.matrixWorld)),a(c.geometry.isBufferGeometry?c.geometry:r.fromGeometry(c.geometry),e))})}}(),c=function(e,n){const i=new t.Vector3(1,1,1);return n.fit===r.ALL&&i.setFromMatrixScale(e.matrixWorld),i},l=function(){const e=new t.Vector3,n=new t.Vector3;return function(t,r,i){let o=0,{x:s,y:c,z:l}=i.getCenter(n);return a(t,r,(t,n)=>{const r=t.attributes.position.array;for(let t=0;t<r.length;t+=3){e.set(r[t],r[t+1],r[t+2]).applyMatrix4(n);const i=s-e.x,a=c-e.y,p=l-e.z;o=Math.max(o,i*i+a*a+p*p)}}),Math.sqrt(o)}}(),p=function(e,n,r,i){return(new t.Vector3).subVectors(n.max,n.min).multiplyScalar(.5).clampScalar(r,i)},u=function(){const e=new t.Vector3;return function(n,r){const i=new t.Box3;let o=1/0,s=1/0,c=1/0,l=-1/0,p=-1/0,u=-1/0;return i.min.set(0,0,0),i.max.set(0,0,0),a(n,r,(t,n)=>{const r=t.attributes.position.array;for(let t=0;t<r.length;t+=3)e.set(r[t],r[t+1],r[t+2]).applyMatrix4(n),e.x<o&&(o=e.x),e.y<s&&(s=e.y),e.z<c&&(c=e.z),e.x>l&&(l=e.x),e.y>p&&(p=e.y),e.z>u&&(u=e.z)}),i.min.set(o,s,c),i.max.set(l,p,u),i}}()}).call(this,n(0))},function(t,e,n){(function(e,r){var i,o=(i="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(t){var o,s;t=t||{},s||(s=void 0!==t?t:{});var a,c,l,p,u,h={};for(a in s)s.hasOwnProperty(a)&&(h[a]=s[a]);c="object"==typeof window,l="function"==typeof importScripts,p="object"==typeof e&&"object"==typeof e.versions&&"string"==typeof e.versions.node&&!c&&!l,u=!c&&!p&&!l;var d,f,m,_,y="";p?(y=r+"/",d=function(t,e){return m||(m=n(5)),_||(_=n(6)),t=_.normalize(t),m.readFileSync(t,e?null:"utf8")},f=function(t){return(t=d(t,!0)).buffer||(t=new Uint8Array(t)),T(t.buffer),t},1<e.argv.length&&e.argv[1].replace(/\\\\/g,"/"),e.argv.slice(2),e.on("uncaughtException",(function(t){throw t})),e.on("unhandledRejection",K),s.inspect=function(){return"[Emscripten Module object]"}):u?("undefined"!=typeof read&&(d=function(t){return read(t)}),f=function(t){return"function"==typeof readbuffer?new Uint8Array(readbuffer(t)):(T("object"==typeof(t=read(t,"binary"))),t)},"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(c||l)&&(l?y=self.location.href:document.currentScript&&(y=document.currentScript.src),i&&(y=i),y=0!==y.indexOf("blob:")?y.substr(0,y.lastIndexOf("/")+1):"",d=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},l&&(f=function(t){var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}));var g=s.print||console.log.bind(console),b=s.printErr||console.warn.bind(console);for(a in h)h.hasOwnProperty(a)&&(s[a]=h[a]);h=null;var v,x={"f64-rem":function(t,e){return t%e},debugger:function(){}};s.wasmBinary&&(v=s.wasmBinary),"object"!=typeof WebAssembly&&b("no native wasm support detected");var w,S=new WebAssembly.Table({initial:1832,maximum:1832,element:"anyfunc"}),M=!1;function T(t,e){t||K("Assertion failed: "+e)}var C,z,A,E,L,P,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(t,e,n){var r=e+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.subarray&&R)return R.decode(t.subarray(e,n));for(r="";e<n;){var i=t[e++];if(128&i){var o=63&t[e++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var s=63&t[e++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|s:(7&i)<<18|o<<12|s<<6|63&t[e++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function I(t,e){return t?D(A,t,e):""}function O(t,e,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var o=0;o<t.length;++o){var s=t.charCodeAt(o);if(55296<=s&&57343>=s&&(s=65536+((1023&s)<<10)|1023&t.charCodeAt(++o)),127>=s){if(n>=r)break;e[n++]=s}else{if(2047>=s){if(n+1>=r)break;e[n++]=192|s>>6}else{if(65535>=s){if(n+2>=r)break;e[n++]=224|s>>12}else{if(n+3>=r)break;e[n++]=240|s>>18,e[n++]=128|s>>12&63}e[n++]=128|s>>6&63}e[n++]=128|63&s}}return e[n]=0,n-i}function j(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&t.charCodeAt(++n)),127>=r?++e:e=2047>=r?e+2:65535>=r?e+3:e+4}return e}function B(t){return 0<t%65536&&(t+=65536-t%65536),t}function F(t){C=t,s.HEAP8=z=new Int8Array(t),s.HEAP16=new Int16Array(t),s.HEAP32=E=new Int32Array(t),s.HEAPU8=A=new Uint8Array(t),s.HEAPU16=new Uint16Array(t),s.HEAPU32=new Uint32Array(t),s.HEAPF32=L=new Float32Array(t),s.HEAPF64=P=new Float64Array(t)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");var N=s.TOTAL_MEMORY||67108864;function H(t){for(;0<t.length;){var e=t.shift();if("function"==typeof e)e();else{var n=e.it;"number"==typeof n?void 0===e.$s?s.dynCall_v(n):s.dynCall_vi(n,e.$s):n(void 0===e.$s?null:e.$s)}}}(w=s.wasmMemory?s.wasmMemory:new WebAssembly.Memory({initial:N/65536}))&&(C=w.buffer),N=C.byteLength,F(C),E[11868]=5290544;var G=[],U=[],k=[],V=[],W=!1;function q(){var t=s.preRun.shift();G.unshift(t)}var Y=Math.cos,X=Math.sin,Z=0,J=null,Q=null;function K(t){throw s.onAbort&&s.onAbort(t),g(t+=""),b(t),M=!0,new WebAssembly.RuntimeError("abort("+t+"). Build with -s ASSERTIONS=1 for more info.")}function $(){var t=tt;return String.prototype.startsWith?t.startsWith("data:application/octet-stream;base64,"):0===t.indexOf("data:application/octet-stream;base64,")}s.preloadedImages={},s.preloadedAudios={};var tt="ammo.wasm.wasm";if(!$()){var et=tt;tt=s.locateFile?s.locateFile(et,y):y+et}function nt(){try{if(v)return new Uint8Array(v);if(f)return f(tt);throw"both async and sync fetching of the wasm failed"}catch(t){K(t)}}s.asm=function(){function t(t){s.asm=t.exports,Z--,s.monitorRunDependencies&&s.monitorRunDependencies(Z),0==Z&&(null!==J&&(clearInterval(J),J=null),Q&&(t=Q,Q=null,t()))}function e(e){t(e.instance)}function n(t){return(v||!c&&!l||"function"!=typeof fetch?new Promise((function(t){t(nt())})):fetch(tt,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at \'"+tt+"\'";return t.arrayBuffer()})).catch((function(){return nt()}))).then((function(t){return WebAssembly.instantiate(t,r)})).then(t,(function(t){b("failed to asynchronously prepare wasm: "+t),K(t)}))}var r={env:St,wasi_unstable:St,global:{NaN:NaN,Infinity:1/0},"global.Math":Math,asm2wasm:x};if(Z++,s.monitorRunDependencies&&s.monitorRunDependencies(Z),s.instantiateWasm)try{return s.instantiateWasm(r,t)}catch(t){return b("Module.instantiateWasm callback failed with error: "+t),!1}return function(){if(v||"function"!=typeof WebAssembly.instantiateStreaming||$()||"function"!=typeof fetch)return n(e);fetch(tt,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(e,(function(t){b("wasm streaming compile failed: "+t),b("falling back to ArrayBuffer instantiation"),n(e)}))}))}(),{}};var rt=[function(t,e,n,r,i,o,a,c){if(!(t=s.getCache(s.ConcreteContactResultCallback)[t]).hasOwnProperty("addSingleResult"))throw"a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.";return t.addSingleResult(e,n,r,i,o,a,c)},function(t,e,n,r){if(!(t=s.getCache(s.DebugDrawer)[t]).hasOwnProperty("drawLine"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::drawLine.";t.drawLine(e,n,r)},function(t,e,n,r,i,o){if(!(t=s.getCache(s.DebugDrawer)[t]).hasOwnProperty("drawContactPoint"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::drawContactPoint.";t.drawContactPoint(e,n,r,i,o)},function(t,e){if(!(t=s.getCache(s.DebugDrawer)[t]).hasOwnProperty("reportErrorWarning"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::reportErrorWarning.";t.reportErrorWarning(e)},function(t,e,n){if(!(t=s.getCache(s.DebugDrawer)[t]).hasOwnProperty("draw3dText"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::draw3dText.";t.draw3dText(e,n)},function(t,e){if(!(t=s.getCache(s.DebugDrawer)[t]).hasOwnProperty("setDebugMode"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::setDebugMode.";t.setDebugMode(e)},function(t){if(!(t=s.getCache(s.DebugDrawer)[t]).hasOwnProperty("getDebugMode"))throw"a JSImplementation must implement all functions, you forgot DebugDrawer::getDebugMode.";return t.getDebugMode()}];function it(t){s.___errno_location&&(E[s.___errno_location()>>2]=t)}U.push({it:function(){_b()}});var ot=[null,[],[]],st=0;function at(){return E[(st+=4)-4>>2]}var ct={};function lt(){return 0}function pt(t,e,n,r){try{var i=ct.Zv(t),o=ct.Xv(i,e,n);return E[r>>2]=o,0}catch(t){return K(t),t.gt}}function ut(){return 0}function ht(t,e,n,r){try{for(var i=0,o=0;o<n;o++){for(var s=E[e+8*o>>2],a=E[e+(8*o+4)>>2],c=0;c<a;c++){var l=A[s+c],p=ot[t];0===l||10===l?((1===t?g:b)(D(p,0)),p.length=0):p.push(l)}i+=a}return E[r>>2]=i,0}catch(t){return K(t),t.gt}}function dt(){K()}function ft(){return z.length}var mt={};function _t(){return _t.Ls||(_t.Ls=[]),_t.Ls.push(gb()),_t.Ls.length-1}function yt(t){return 0==t%4&&(0!=t%100||0==t%400)}function gt(t,e){for(var n=0,r=0;r<=e;n+=t[r++]);return n}var bt=[31,29,31,30,31,30,31,31,30,31,30,31],vt=[31,28,31,30,31,30,31,31,30,31,30,31];function xt(t,e){for(t=new Date(t.getTime());0<e;){var n=t.getMonth(),r=(yt(t.getFullYear())?bt:vt)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return t}function wt(t,e){var n=Array(j(t)+1);return t=O(t,n,0,n.length),e&&(n.length=t),n}dt=p?function(){var t=e.hrtime();return 1e3*t[0]+t[1]/1e6}:"undefined"!=typeof dateNow?dateNow:"object"==typeof performance&&performance&&"function"==typeof performance.now?function(){return performance.now()}:Date.now;var St={f:function(t){return mb(t)},d:function(t){throw"uncaught_exception"in Ct?Ct.Uv++:Ct.Uv=1,t},m:function(){},t:function(){return it(63),-1},s:function(t,e){st=e;try{var n=at(),r=at();if(-1===n||0===r)var i=-28;else{var o=ct.Bu[n];if(o&&r===o.$v){var s=(void 0).Yv(o.fd);ct.Wv(n,s,r,o.flags),(void 0).bw(s),ct.Bu[n]=null,o.Vv&&fb(o.aw)}i=0}return i}catch(t){return K(t),-t.gt}},l:function(){},r:function(){return lt.apply(null,arguments)},q:function(){return pt.apply(null,arguments)},u:function(){return ut.apply(null,arguments)},p:function(){return ht.apply(null,arguments)},__memory_base:1024,__table_base:0,a:function(){K()},e:function(t,e){if(0===t)t=Date.now();else{if(1!==t||!(p||"undefined"!=typeof dateNow||"object"==typeof performance&&performance&&"function"==typeof performance.now))return it(28),-1;t=dt()}return E[e>>2]=t/1e3|0,E[e+4>>2]=t%1e3*1e6|0,0},D:function(t,e,n,r,i,o,s,a,c){return rt[t](e,n,r,i,o,s,a,c)},C:function(t,e){return rt[t](e)},o:function(t,e,n){return rt[t](e,n)},B:function(t,e,n,r){return rt[t](e,n,r)},A:function(t,e,n,r,i,o,s){return rt[t](e,n,r,i,o,s)},z:function(t,e,n,r,i){return rt[t](e,n,r,i)},j:ft,y:function(t,e,n){A.set(A.subarray(e,e+n),t)},i:function(t){if(2147418112<t)return!1;for(var e=Math.max(ft(),16777216);e<t;)e=536870912>=e?B(2*e):Math.min(B((3*e+2147483648)/4),2147418112);t:{try{w.grow(e-C.byteLength+65535>>16),F(w.buffer);var n=1;break t}catch(t){}n=void 0}return!!n},k:function t(e){if(0===e)return 0;if(e=I(e),!mt.hasOwnProperty(e))return 0;t.dt&&fb(t.dt);var n=j(e=mt[e])+1,r=mb(n);return r&&O(e,z,r,n),t.dt=r},c:function(t){var e=Date.now();return E[t>>2]=e/1e3|0,E[t+4>>2]=e%1e3*1e3|0,0},x:Y,w:X,h:function(t){var e=_t.Ls[t];_t.Ls.splice(t,1),yb(e)},g:_t,n:function(){K("trap!")},v:function(t,e,n,r){return function(t,e,n,r){function i(t,e,n){for(t="number"==typeof t?t.toString():t||"";t.length<e;)t=n[0]+t;return t}function o(t,e){return i(t,e,"0")}function s(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function a(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){t=xt(new Date(t.Cs+1900,0,1),t.Zs);var e=a(new Date(t.getFullYear()+1,0,4));return 0>=s(a(new Date(t.getFullYear(),0,4)),t)?0>=s(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=E[r+40>>2];for(var p in r={Sv:E[r>>2],Rv:E[r+4>>2],Xs:E[r+8>>2],Us:E[r+12>>2],Ks:E[r+16>>2],Cs:E[r+20>>2],Ys:E[r+24>>2],Zs:E[r+28>>2],cw:E[r+32>>2],Qv:E[r+36>>2],Tv:l?I(l):""},n=I(n),l={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(p,"g"),l[p]);var u="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),h="January February March April May June July August September October November December".split(" ");for(p in l={"%a":function(t){return u[t.Ys].substring(0,3)},"%A":function(t){return u[t.Ys]},"%b":function(t){return h[t.Ks].substring(0,3)},"%B":function(t){return h[t.Ks]},"%C":function(t){return o((t.Cs+1900)/100|0,2)},"%d":function(t){return o(t.Us,2)},"%e":function(t){return i(t.Us,2," ")},"%g":function(t){return c(t).toString().substring(2)},"%G":function(t){return c(t)},"%H":function(t){return o(t.Xs,2)},"%I":function(t){return 0==(t=t.Xs)?t=12:12<t&&(t-=12),o(t,2)},"%j":function(t){return o(t.Us+gt(yt(t.Cs+1900)?bt:vt,t.Ks-1),3)},"%m":function(t){return o(t.Ks+1,2)},"%M":function(t){return o(t.Rv,2)},"%n":function(){return"\\n"},"%p":function(t){return 0<=t.Xs&&12>t.Xs?"AM":"PM"},"%S":function(t){return o(t.Sv,2)},"%t":function(){return"\\t"},"%u":function(t){return t.Ys||7},"%U":function(t){var e=new Date(t.Cs+1900,0,1),n=0===e.getDay()?e:xt(e,7-e.getDay());return 0>s(n,t=new Date(t.Cs+1900,t.Ks,t.Us))?o(Math.ceil((31-n.getDate()+(gt(yt(t.getFullYear())?bt:vt,t.getMonth()-1)-31)+t.getDate())/7),2):0===s(n,e)?"01":"00"},"%V":function(t){var e=a(new Date(t.Cs+1900,0,4)),n=a(new Date(t.Cs+1901,0,4)),r=xt(new Date(t.Cs+1900,0,1),t.Zs);return 0>s(r,e)?"53":0>=s(n,r)?"01":o(Math.ceil((e.getFullYear()<t.Cs+1900?t.Zs+32-e.getDate():t.Zs+1-e.getDate())/7),2)},"%w":function(t){return t.Ys},"%W":function(t){var e=new Date(t.Cs,0,1),n=1===e.getDay()?e:xt(e,0===e.getDay()?1:7-e.getDay()+1);return 0>s(n,t=new Date(t.Cs+1900,t.Ks,t.Us))?o(Math.ceil((31-n.getDate()+(gt(yt(t.getFullYear())?bt:vt,t.getMonth()-1)-31)+t.getDate())/7),2):0===s(n,e)?"01":"00"},"%y":function(t){return(t.Cs+1900).toString().substring(2)},"%Y":function(t){return t.Cs+1900},"%z":function(t){var e=0<=(t=t.Qv);return t=Math.abs(t)/60,(e?"+":"-")+String("0000"+(t/60*100+t%60)).slice(-4)},"%Z":function(t){return t.Tv},"%%":function(){return"%"}})0<=n.indexOf(p)&&(n=n.replace(new RegExp(p,"g"),l[p](r)));return(p=wt(n,!1)).length>e?0:(z.set(p,t),p.length-1)}(t,e,n,r)},b:K,memory:w,table:S},Mt=s.asm({},St,C);s.asm=Mt;var Tt,Ct=s.__ZSt18uncaught_exceptionv=function(){return s.asm.E.apply(null,arguments)},zt=s._emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2=function(){return s.asm.F.apply(null,arguments)},At=s._emscripten_bind_AllHitsRayResultCallback___destroy___0=function(){return s.asm.G.apply(null,arguments)},Et=s._emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0=function(){return s.asm.H.apply(null,arguments)},Lt=s._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0=function(){return s.asm.I.apply(null,arguments)},Pt=s._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0=function(){return s.asm.J.apply(null,arguments)},Rt=s._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0=function(){return s.asm.K.apply(null,arguments)},Dt=s._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0=function(){return s.asm.L.apply(null,arguments)},It=s._emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0=function(){return s.asm.M.apply(null,arguments)},Ot=s._emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0=function(){return s.asm.N.apply(null,arguments)},jt=s._emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0=function(){return s.asm.O.apply(null,arguments)},Bt=s._emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0=function(){return s.asm.P.apply(null,arguments)},Ft=s._emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0=function(){return s.asm.Q.apply(null,arguments)},Nt=s._emscripten_bind_AllHitsRayResultCallback_hasHit_0=function(){return s.asm.R.apply(null,arguments)},Ht=s._emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1=function(){return s.asm.S.apply(null,arguments)},Gt=s._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1=function(){return s.asm.T.apply(null,arguments)},Ut=s._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1=function(){return s.asm.U.apply(null,arguments)},kt=s._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1=function(){return s.asm.V.apply(null,arguments)},Vt=s._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1=function(){return s.asm.W.apply(null,arguments)},Wt=s._emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1=function(){return s.asm.X.apply(null,arguments)},qt=s._emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1=function(){return s.asm.Y.apply(null,arguments)},Yt=s._emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1=function(){return s.asm.Z.apply(null,arguments)},Xt=s._emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1=function(){return s.asm._.apply(null,arguments)},Zt=s._emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1=function(){return s.asm.$.apply(null,arguments)},Jt=s._emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=function(){return s.asm.aa.apply(null,arguments)},Qt=s._emscripten_bind_ClosestConvexResultCallback___destroy___0=function(){return s.asm.ba.apply(null,arguments)},Kt=s._emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=function(){return s.asm.ca.apply(null,arguments)},$t=s._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=function(){return s.asm.da.apply(null,arguments)},te=s._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=function(){return s.asm.ea.apply(null,arguments)},ee=s._emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=function(){return s.asm.fa.apply(null,arguments)},ne=s._emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=function(){return s.asm.ga.apply(null,arguments)},re=s._emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=function(){return s.asm.ha.apply(null,arguments)},ie=s._emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=function(){return s.asm.ia.apply(null,arguments)},oe=s._emscripten_bind_ClosestConvexResultCallback_hasHit_0=function(){return s.asm.ja.apply(null,arguments)},se=s._emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=function(){return s.asm.ka.apply(null,arguments)},ae=s._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=function(){return s.asm.la.apply(null,arguments)},ce=s._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=function(){return s.asm.ma.apply(null,arguments)},le=s._emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=function(){return s.asm.na.apply(null,arguments)},pe=s._emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=function(){return s.asm.oa.apply(null,arguments)},ue=s._emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=function(){return s.asm.pa.apply(null,arguments)},he=s._emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=function(){return s.asm.qa.apply(null,arguments)},de=s._emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=function(){return s.asm.ra.apply(null,arguments)},fe=s._emscripten_bind_ClosestRayResultCallback___destroy___0=function(){return s.asm.sa.apply(null,arguments)},me=s._emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0=function(){return s.asm.ta.apply(null,arguments)},_e=s._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=function(){return s.asm.ua.apply(null,arguments)},ye=s._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=function(){return s.asm.va.apply(null,arguments)},ge=s._emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=function(){return s.asm.wa.apply(null,arguments)},be=s._emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=function(){return s.asm.xa.apply(null,arguments)},ve=s._emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=function(){return s.asm.ya.apply(null,arguments)},xe=s._emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=function(){return s.asm.za.apply(null,arguments)},we=s._emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=function(){return s.asm.Aa.apply(null,arguments)},Se=s._emscripten_bind_ClosestRayResultCallback_hasHit_0=function(){return s.asm.Ba.apply(null,arguments)},Me=s._emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1=function(){return s.asm.Ca.apply(null,arguments)},Te=s._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=function(){return s.asm.Da.apply(null,arguments)},Ce=s._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=function(){return s.asm.Ea.apply(null,arguments)},ze=s._emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=function(){return s.asm.Fa.apply(null,arguments)},Ae=s._emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=function(){return s.asm.Ga.apply(null,arguments)},Ee=s._emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=function(){return s.asm.Ha.apply(null,arguments)},Le=s._emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=function(){return s.asm.Ia.apply(null,arguments)},Pe=s._emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=function(){return s.asm.Ja.apply(null,arguments)},Re=s._emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=function(){return s.asm.Ka.apply(null,arguments)},De=s._emscripten_bind_ConcreteContactResultCallback___destroy___0=function(){return s.asm.La.apply(null,arguments)},Ie=s._emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=function(){return s.asm.Ma.apply(null,arguments)},Oe=s._emscripten_bind_ContactResultCallback___destroy___0=function(){return s.asm.Na.apply(null,arguments)},je=s._emscripten_bind_ContactResultCallback_addSingleResult_7=function(){return s.asm.Oa.apply(null,arguments)},Be=s._emscripten_bind_ConvexHull_ConvexHull_0=function(){return s.asm.Pa.apply(null,arguments)},Fe=s._emscripten_bind_ConvexHull___destroy___0=function(){return s.asm.Qa.apply(null,arguments)},Ne=s._emscripten_bind_ConvexHull_get_m_nPoints_0=function(){return s.asm.Ra.apply(null,arguments)},He=s._emscripten_bind_ConvexHull_get_m_nTriangles_0=function(){return s.asm.Sa.apply(null,arguments)},Ge=s._emscripten_bind_ConvexHull_get_m_points_1=function(){return s.asm.Ta.apply(null,arguments)},Ue=s._emscripten_bind_ConvexHull_get_m_triangles_1=function(){return s.asm.Ua.apply(null,arguments)},ke=s._emscripten_bind_ConvexResultCallback___destroy___0=function(){return s.asm.Va.apply(null,arguments)},Ve=s._emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=function(){return s.asm.Wa.apply(null,arguments)},We=s._emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=function(){return s.asm.Xa.apply(null,arguments)},qe=s._emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=function(){return s.asm.Ya.apply(null,arguments)},Ye=s._emscripten_bind_ConvexResultCallback_hasHit_0=function(){return s.asm.Za.apply(null,arguments)},Xe=s._emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=function(){return s.asm._a.apply(null,arguments)},Ze=s._emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=function(){return s.asm.$a.apply(null,arguments)},Je=s._emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=function(){return s.asm.ab.apply(null,arguments)},Qe=s._emscripten_bind_DebugDrawer_DebugDrawer_0=function(){return s.asm.bb.apply(null,arguments)},Ke=s._emscripten_bind_DebugDrawer___destroy___0=function(){return s.asm.cb.apply(null,arguments)},$e=s._emscripten_bind_DebugDrawer_draw3dText_2=function(){return s.asm.db.apply(null,arguments)},tn=s._emscripten_bind_DebugDrawer_drawContactPoint_5=function(){return s.asm.eb.apply(null,arguments)},en=s._emscripten_bind_DebugDrawer_drawLine_3=function(){return s.asm.fb.apply(null,arguments)},nn=s._emscripten_bind_DebugDrawer_getDebugMode_0=function(){return s.asm.gb.apply(null,arguments)},rn=s._emscripten_bind_DebugDrawer_reportErrorWarning_1=function(){return s.asm.hb.apply(null,arguments)},on=s._emscripten_bind_DebugDrawer_setDebugMode_1=function(){return s.asm.ib.apply(null,arguments)},sn=s._emscripten_bind_HACD_Compute_0=function(){return s.asm.jb.apply(null,arguments)},an=s._emscripten_bind_HACD_GetCH_3=function(){return s.asm.kb.apply(null,arguments)},cn=s._emscripten_bind_HACD_GetNClusters_0=function(){return s.asm.lb.apply(null,arguments)},ln=s._emscripten_bind_HACD_GetNPointsCH_1=function(){return s.asm.mb.apply(null,arguments)},pn=s._emscripten_bind_HACD_GetNTrianglesCH_1=function(){return s.asm.nb.apply(null,arguments)},un=s._emscripten_bind_HACD_HACD_0=function(){return s.asm.ob.apply(null,arguments)},hn=s._emscripten_bind_HACD_SetCompacityWeight_1=function(){return s.asm.pb.apply(null,arguments)},dn=s._emscripten_bind_HACD_SetConcavity_1=function(){return s.asm.qb.apply(null,arguments)},fn=s._emscripten_bind_HACD_SetNClusters_1=function(){return s.asm.rb.apply(null,arguments)},mn=s._emscripten_bind_HACD_SetNPoints_1=function(){return s.asm.sb.apply(null,arguments)},_n=s._emscripten_bind_HACD_SetNTriangles_1=function(){return s.asm.tb.apply(null,arguments)},yn=s._emscripten_bind_HACD_SetNVerticesPerCH_1=function(){return s.asm.ub.apply(null,arguments)},gn=s._emscripten_bind_HACD_SetPoints_1=function(){return s.asm.vb.apply(null,arguments)},bn=s._emscripten_bind_HACD_SetTriangles_1=function(){return s.asm.wb.apply(null,arguments)},vn=s._emscripten_bind_HACD_SetVolumeWeight_1=function(){return s.asm.xb.apply(null,arguments)},xn=s._emscripten_bind_HACD___destroy___0=function(){return s.asm.yb.apply(null,arguments)},wn=s._emscripten_bind_LocalConvexResult_LocalConvexResult_5=function(){return s.asm.zb.apply(null,arguments)},Sn=s._emscripten_bind_LocalConvexResult___destroy___0=function(){return s.asm.Ab.apply(null,arguments)},Mn=s._emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=function(){return s.asm.Bb.apply(null,arguments)},Tn=s._emscripten_bind_LocalConvexResult_get_m_hitFraction_0=function(){return s.asm.Cb.apply(null,arguments)},Cn=s._emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=function(){return s.asm.Db.apply(null,arguments)},zn=s._emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=function(){return s.asm.Eb.apply(null,arguments)},An=s._emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=function(){return s.asm.Fb.apply(null,arguments)},En=s._emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=function(){return s.asm.Gb.apply(null,arguments)},Ln=s._emscripten_bind_LocalConvexResult_set_m_hitFraction_1=function(){return s.asm.Hb.apply(null,arguments)},Pn=s._emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=function(){return s.asm.Ib.apply(null,arguments)},Rn=s._emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=function(){return s.asm.Jb.apply(null,arguments)},Dn=s._emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=function(){return s.asm.Kb.apply(null,arguments)},In=s._emscripten_bind_LocalShapeInfo___destroy___0=function(){return s.asm.Lb.apply(null,arguments)},On=s._emscripten_bind_LocalShapeInfo_get_m_shapePart_0=function(){return s.asm.Mb.apply(null,arguments)},jn=s._emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=function(){return s.asm.Nb.apply(null,arguments)},Bn=s._emscripten_bind_LocalShapeInfo_set_m_shapePart_1=function(){return s.asm.Ob.apply(null,arguments)},Fn=s._emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=function(){return s.asm.Pb.apply(null,arguments)},Nn=s._emscripten_bind_Parameters_Parameters_0=function(){return s.asm.Qb.apply(null,arguments)},Hn=s._emscripten_bind_Parameters___destroy___0=function(){return s.asm.Rb.apply(null,arguments)},Gn=s._emscripten_bind_Parameters_get_m_alpha_0=function(){return s.asm.Sb.apply(null,arguments)},Un=s._emscripten_bind_Parameters_get_m_beta_0=function(){return s.asm.Tb.apply(null,arguments)},kn=s._emscripten_bind_Parameters_get_m_concavity_0=function(){return s.asm.Ub.apply(null,arguments)},Vn=s._emscripten_bind_Parameters_get_m_convexhullApproximation_0=function(){return s.asm.Vb.apply(null,arguments)},Wn=s._emscripten_bind_Parameters_get_m_convexhullDownsampling_0=function(){return s.asm.Wb.apply(null,arguments)},qn=s._emscripten_bind_Parameters_get_m_depth_0=function(){return s.asm.Xb.apply(null,arguments)},Yn=s._emscripten_bind_Parameters_get_m_gamma_0=function(){return s.asm.Yb.apply(null,arguments)},Xn=s._emscripten_bind_Parameters_get_m_maxNumVerticesPerCH_0=function(){return s.asm.Zb.apply(null,arguments)},Zn=s._emscripten_bind_Parameters_get_m_minVolumePerCH_0=function(){return s.asm._b.apply(null,arguments)},Jn=s._emscripten_bind_Parameters_get_m_mode_0=function(){return s.asm.$b.apply(null,arguments)},Qn=s._emscripten_bind_Parameters_get_m_oclAcceleration_0=function(){return s.asm.ac.apply(null,arguments)},Kn=s._emscripten_bind_Parameters_get_m_pca_0=function(){return s.asm.bc.apply(null,arguments)},$n=s._emscripten_bind_Parameters_get_m_planeDownsampling_0=function(){return s.asm.cc.apply(null,arguments)},tr=s._emscripten_bind_Parameters_get_m_resolution_0=function(){return s.asm.dc.apply(null,arguments)},er=s._emscripten_bind_Parameters_set_m_alpha_1=function(){return s.asm.ec.apply(null,arguments)},nr=s._emscripten_bind_Parameters_set_m_beta_1=function(){return s.asm.fc.apply(null,arguments)},rr=s._emscripten_bind_Parameters_set_m_concavity_1=function(){return s.asm.gc.apply(null,arguments)},ir=s._emscripten_bind_Parameters_set_m_convexhullApproximation_1=function(){return s.asm.hc.apply(null,arguments)},or=s._emscripten_bind_Parameters_set_m_convexhullDownsampling_1=function(){return s.asm.ic.apply(null,arguments)},sr=s._emscripten_bind_Parameters_set_m_depth_1=function(){return s.asm.jc.apply(null,arguments)},ar=s._emscripten_bind_Parameters_set_m_gamma_1=function(){return s.asm.kc.apply(null,arguments)},cr=s._emscripten_bind_Parameters_set_m_maxNumVerticesPerCH_1=function(){return s.asm.lc.apply(null,arguments)},lr=s._emscripten_bind_Parameters_set_m_minVolumePerCH_1=function(){return s.asm.mc.apply(null,arguments)},pr=s._emscripten_bind_Parameters_set_m_mode_1=function(){return s.asm.nc.apply(null,arguments)},ur=s._emscripten_bind_Parameters_set_m_oclAcceleration_1=function(){return s.asm.oc.apply(null,arguments)},hr=s._emscripten_bind_Parameters_set_m_pca_1=function(){return s.asm.pc.apply(null,arguments)},dr=s._emscripten_bind_Parameters_set_m_planeDownsampling_1=function(){return s.asm.qc.apply(null,arguments)},fr=s._emscripten_bind_Parameters_set_m_resolution_1=function(){return s.asm.rc.apply(null,arguments)},mr=s._emscripten_bind_RayResultCallback___destroy___0=function(){return s.asm.sc.apply(null,arguments)},_r=s._emscripten_bind_RayResultCallback_get_m_closestHitFraction_0=function(){return s.asm.tc.apply(null,arguments)},yr=s._emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=function(){return s.asm.uc.apply(null,arguments)},gr=s._emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=function(){return s.asm.vc.apply(null,arguments)},br=s._emscripten_bind_RayResultCallback_get_m_collisionObject_0=function(){return s.asm.wc.apply(null,arguments)},vr=s._emscripten_bind_RayResultCallback_hasHit_0=function(){return s.asm.xc.apply(null,arguments)},xr=s._emscripten_bind_RayResultCallback_set_m_closestHitFraction_1=function(){return s.asm.yc.apply(null,arguments)},wr=s._emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=function(){return s.asm.zc.apply(null,arguments)},Sr=s._emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=function(){return s.asm.Ac.apply(null,arguments)},Mr=s._emscripten_bind_RayResultCallback_set_m_collisionObject_1=function(){return s.asm.Bc.apply(null,arguments)},Tr=s._emscripten_bind_VHACD_Cancel_0=function(){return s.asm.Cc.apply(null,arguments)},Cr=s._emscripten_bind_VHACD_Clean_0=function(){return s.asm.Dc.apply(null,arguments)},zr=s._emscripten_bind_VHACD_Compute_7=function(){return s.asm.Ec.apply(null,arguments)},Ar=s._emscripten_bind_VHACD_GetConvexHull_2=function(){return s.asm.Fc.apply(null,arguments)},Er=s._emscripten_bind_VHACD_GetNConvexHulls_0=function(){return s.asm.Gc.apply(null,arguments)},Lr=s._emscripten_bind_VHACD_Release_0=function(){return s.asm.Hc.apply(null,arguments)},Pr=s._emscripten_bind_VHACD_VHACD_0=function(){return s.asm.Ic.apply(null,arguments)},Rr=s._emscripten_bind_VHACD___destroy___0=function(){return s.asm.Jc.apply(null,arguments)},Dr=s._emscripten_bind_Vec3Long_Vec3Long_3=function(){return s.asm.Kc.apply(null,arguments)},Ir=s._emscripten_bind_Vec3Long_X_0=function(){return s.asm.Lc.apply(null,arguments)},Or=s._emscripten_bind_Vec3Long_Y_0=function(){return s.asm.Mc.apply(null,arguments)},jr=s._emscripten_bind_Vec3Long_Z_0=function(){return s.asm.Nc.apply(null,arguments)},Br=s._emscripten_bind_Vec3Long___destroy___0=function(){return s.asm.Oc.apply(null,arguments)},Fr=s._emscripten_bind_Vec3Real_Vec3Real_3=function(){return s.asm.Pc.apply(null,arguments)},Nr=s._emscripten_bind_Vec3Real_X_0=function(){return s.asm.Qc.apply(null,arguments)},Hr=s._emscripten_bind_Vec3Real_Y_0=function(){return s.asm.Rc.apply(null,arguments)},Gr=s._emscripten_bind_Vec3Real_Z_0=function(){return s.asm.Sc.apply(null,arguments)},Ur=s._emscripten_bind_Vec3Real___destroy___0=function(){return s.asm.Tc.apply(null,arguments)},kr=s._emscripten_bind_VoidPtr___destroy___0=function(){return s.asm.Uc.apply(null,arguments)},Vr=s._emscripten_bind_btActionInterface___destroy___0=function(){return s.asm.Vc.apply(null,arguments)},Wr=s._emscripten_bind_btActionInterface_updateAction_2=function(){return s.asm.Wc.apply(null,arguments)},qr=s._emscripten_bind_btAxisSweep3___destroy___0=function(){return s.asm.Xc.apply(null,arguments)},Yr=s._emscripten_bind_btAxisSweep3_btAxisSweep3_2=function(){return s.asm.Yc.apply(null,arguments)},Xr=s._emscripten_bind_btAxisSweep3_btAxisSweep3_3=function(){return s.asm.Zc.apply(null,arguments)},Zr=s._emscripten_bind_btAxisSweep3_btAxisSweep3_4=function(){return s.asm._c.apply(null,arguments)},Jr=s._emscripten_bind_btAxisSweep3_btAxisSweep3_5=function(){return s.asm.$c.apply(null,arguments)},Qr=s._emscripten_bind_btBoxShape___destroy___0=function(){return s.asm.ad.apply(null,arguments)},Kr=s._emscripten_bind_btBoxShape_btBoxShape_1=function(){return s.asm.bd.apply(null,arguments)},$r=s._emscripten_bind_btBoxShape_calculateLocalInertia_2=function(){return s.asm.cd.apply(null,arguments)},ti=s._emscripten_bind_btBoxShape_getLocalScaling_0=function(){return s.asm.dd.apply(null,arguments)},ei=s._emscripten_bind_btBoxShape_getMargin_0=function(){return s.asm.ed.apply(null,arguments)},ni=s._emscripten_bind_btBoxShape_setLocalScaling_1=function(){return s.asm.fd.apply(null,arguments)},ri=s._emscripten_bind_btBoxShape_setMargin_1=function(){return s.asm.gd.apply(null,arguments)},ii=s._emscripten_bind_btBroadphaseInterface___destroy___0=function(){return s.asm.hd.apply(null,arguments)},oi=s._emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0=function(){return s.asm.id.apply(null,arguments)},si=s._emscripten_bind_btBroadphaseProxy___destroy___0=function(){return s.asm.jd.apply(null,arguments)},ai=s._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0=function(){return s.asm.kd.apply(null,arguments)},ci=s._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0=function(){return s.asm.ld.apply(null,arguments)},li=s._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1=function(){return s.asm.md.apply(null,arguments)},pi=s._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1=function(){return s.asm.nd.apply(null,arguments)},ui=s._emscripten_bind_btBvhTriangleMeshShape___destroy___0=function(){return s.asm.od.apply(null,arguments)},hi=s._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=function(){return s.asm.pd.apply(null,arguments)},di=s._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=function(){return s.asm.qd.apply(null,arguments)},fi=s._emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=function(){return s.asm.rd.apply(null,arguments)},mi=s._emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0=function(){return s.asm.sd.apply(null,arguments)},_i=s._emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=function(){return s.asm.td.apply(null,arguments)},yi=s._emscripten_bind_btCapsuleShapeX___destroy___0=function(){return s.asm.ud.apply(null,arguments)},gi=s._emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=function(){return s.asm.vd.apply(null,arguments)},bi=s._emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=function(){return s.asm.wd.apply(null,arguments)},vi=s._emscripten_bind_btCapsuleShapeX_getHalfHeight_0=function(){return s.asm.xd.apply(null,arguments)},xi=s._emscripten_bind_btCapsuleShapeX_getLocalScaling_0=function(){return s.asm.yd.apply(null,arguments)},wi=s._emscripten_bind_btCapsuleShapeX_getMargin_0=function(){return s.asm.zd.apply(null,arguments)},Si=s._emscripten_bind_btCapsuleShapeX_getRadius_0=function(){return s.asm.Ad.apply(null,arguments)},Mi=s._emscripten_bind_btCapsuleShapeX_getUpAxis_0=function(){return s.asm.Bd.apply(null,arguments)},Ti=s._emscripten_bind_btCapsuleShapeX_setLocalScaling_1=function(){return s.asm.Cd.apply(null,arguments)},Ci=s._emscripten_bind_btCapsuleShapeX_setMargin_1=function(){return s.asm.Dd.apply(null,arguments)},zi=s._emscripten_bind_btCapsuleShapeZ___destroy___0=function(){return s.asm.Ed.apply(null,arguments)},Ai=s._emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=function(){return s.asm.Fd.apply(null,arguments)},Ei=s._emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=function(){return s.asm.Gd.apply(null,arguments)},Li=s._emscripten_bind_btCapsuleShapeZ_getHalfHeight_0=function(){return s.asm.Hd.apply(null,arguments)},Pi=s._emscripten_bind_btCapsuleShapeZ_getLocalScaling_0=function(){return s.asm.Id.apply(null,arguments)},Ri=s._emscripten_bind_btCapsuleShapeZ_getMargin_0=function(){return s.asm.Jd.apply(null,arguments)},Di=s._emscripten_bind_btCapsuleShapeZ_getRadius_0=function(){return s.asm.Kd.apply(null,arguments)},Ii=s._emscripten_bind_btCapsuleShapeZ_getUpAxis_0=function(){return s.asm.Ld.apply(null,arguments)},Oi=s._emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=function(){return s.asm.Md.apply(null,arguments)},ji=s._emscripten_bind_btCapsuleShapeZ_setMargin_1=function(){return s.asm.Nd.apply(null,arguments)},Bi=s._emscripten_bind_btCapsuleShape___destroy___0=function(){return s.asm.Od.apply(null,arguments)},Fi=s._emscripten_bind_btCapsuleShape_btCapsuleShape_2=function(){return s.asm.Pd.apply(null,arguments)},Ni=s._emscripten_bind_btCapsuleShape_calculateLocalInertia_2=function(){return s.asm.Qd.apply(null,arguments)},Hi=s._emscripten_bind_btCapsuleShape_getHalfHeight_0=function(){return s.asm.Rd.apply(null,arguments)},Gi=s._emscripten_bind_btCapsuleShape_getLocalScaling_0=function(){return s.asm.Sd.apply(null,arguments)},Ui=s._emscripten_bind_btCapsuleShape_getMargin_0=function(){return s.asm.Td.apply(null,arguments)},ki=s._emscripten_bind_btCapsuleShape_getRadius_0=function(){return s.asm.Ud.apply(null,arguments)},Vi=s._emscripten_bind_btCapsuleShape_getUpAxis_0=function(){return s.asm.Vd.apply(null,arguments)},Wi=s._emscripten_bind_btCapsuleShape_setLocalScaling_1=function(){return s.asm.Wd.apply(null,arguments)},qi=s._emscripten_bind_btCapsuleShape_setMargin_1=function(){return s.asm.Xd.apply(null,arguments)},Yi=s._emscripten_bind_btCollisionConfiguration___destroy___0=function(){return s.asm.Yd.apply(null,arguments)},Xi=s._emscripten_bind_btCollisionDispatcher___destroy___0=function(){return s.asm.Zd.apply(null,arguments)},Zi=s._emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=function(){return s.asm._d.apply(null,arguments)},Ji=s._emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=function(){return s.asm.$d.apply(null,arguments)},Qi=s._emscripten_bind_btCollisionDispatcher_getNumManifolds_0=function(){return s.asm.ae.apply(null,arguments)},Ki=s._emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0=function(){return s.asm.be.apply(null,arguments)},$i=s._emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0=function(){return s.asm.ce.apply(null,arguments)},to=s._emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0=function(){return s.asm.de.apply(null,arguments)},eo=s._emscripten_bind_btCollisionObject___destroy___0=function(){return s.asm.ee.apply(null,arguments)},no=s._emscripten_bind_btCollisionObject_activate_0=function(){return s.asm.fe.apply(null,arguments)},ro=s._emscripten_bind_btCollisionObject_activate_1=function(){return s.asm.ge.apply(null,arguments)},io=s._emscripten_bind_btCollisionObject_forceActivationState_1=function(){return s.asm.he.apply(null,arguments)},oo=s._emscripten_bind_btCollisionObject_getBroadphaseHandle_0=function(){return s.asm.ie.apply(null,arguments)},so=s._emscripten_bind_btCollisionObject_getCollisionFlags_0=function(){return s.asm.je.apply(null,arguments)},ao=s._emscripten_bind_btCollisionObject_getCollisionShape_0=function(){return s.asm.ke.apply(null,arguments)},co=s._emscripten_bind_btCollisionObject_getFriction_0=function(){return s.asm.le.apply(null,arguments)},lo=s._emscripten_bind_btCollisionObject_getRestitution_0=function(){return s.asm.me.apply(null,arguments)},po=s._emscripten_bind_btCollisionObject_getRollingFriction_0=function(){return s.asm.ne.apply(null,arguments)},uo=s._emscripten_bind_btCollisionObject_getUserIndex_0=function(){return s.asm.oe.apply(null,arguments)},ho=s._emscripten_bind_btCollisionObject_getUserPointer_0=function(){return s.asm.pe.apply(null,arguments)},fo=s._emscripten_bind_btCollisionObject_getWorldTransform_0=function(){return s.asm.qe.apply(null,arguments)},mo=s._emscripten_bind_btCollisionObject_isActive_0=function(){return s.asm.re.apply(null,arguments)},_o=s._emscripten_bind_btCollisionObject_isKinematicObject_0=function(){return s.asm.se.apply(null,arguments)},yo=s._emscripten_bind_btCollisionObject_isStaticObject_0=function(){return s.asm.te.apply(null,arguments)},go=s._emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0=function(){return s.asm.ue.apply(null,arguments)},bo=s._emscripten_bind_btCollisionObject_setActivationState_1=function(){return s.asm.ve.apply(null,arguments)},vo=s._emscripten_bind_btCollisionObject_setAnisotropicFriction_2=function(){return s.asm.we.apply(null,arguments)},xo=s._emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=function(){return s.asm.xe.apply(null,arguments)},wo=s._emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=function(){return s.asm.ye.apply(null,arguments)},So=s._emscripten_bind_btCollisionObject_setCollisionFlags_1=function(){return s.asm.ze.apply(null,arguments)},Mo=s._emscripten_bind_btCollisionObject_setCollisionShape_1=function(){return s.asm.Ae.apply(null,arguments)},To=s._emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=function(){return s.asm.Be.apply(null,arguments)},Co=s._emscripten_bind_btCollisionObject_setFriction_1=function(){return s.asm.Ce.apply(null,arguments)},zo=s._emscripten_bind_btCollisionObject_setRestitution_1=function(){return s.asm.De.apply(null,arguments)},Ao=s._emscripten_bind_btCollisionObject_setRollingFriction_1=function(){return s.asm.Ee.apply(null,arguments)},Eo=s._emscripten_bind_btCollisionObject_setUserIndex_1=function(){return s.asm.Fe.apply(null,arguments)},Lo=s._emscripten_bind_btCollisionObject_setUserPointer_1=function(){return s.asm.Ge.apply(null,arguments)},Po=s._emscripten_bind_btCollisionObject_setWorldTransform_1=function(){return s.asm.He.apply(null,arguments)},Ro=s._emscripten_bind_btCollisionShape___destroy___0=function(){return s.asm.Ie.apply(null,arguments)},Do=s._emscripten_bind_btCollisionShape_calculateLocalInertia_2=function(){return s.asm.Je.apply(null,arguments)},Io=s._emscripten_bind_btCollisionShape_getLocalScaling_0=function(){return s.asm.Ke.apply(null,arguments)},Oo=s._emscripten_bind_btCollisionShape_getMargin_0=function(){return s.asm.Le.apply(null,arguments)},jo=s._emscripten_bind_btCollisionShape_setLocalScaling_1=function(){return s.asm.Me.apply(null,arguments)},Bo=s._emscripten_bind_btCollisionShape_setMargin_1=function(){return s.asm.Ne.apply(null,arguments)},Fo=s._emscripten_bind_btCollisionWorld___destroy___0=function(){return s.asm.Oe.apply(null,arguments)},No=s._emscripten_bind_btCollisionWorld_addCollisionObject_1=function(){return s.asm.Pe.apply(null,arguments)},Ho=s._emscripten_bind_btCollisionWorld_addCollisionObject_2=function(){return s.asm.Qe.apply(null,arguments)},Go=s._emscripten_bind_btCollisionWorld_addCollisionObject_3=function(){return s.asm.Re.apply(null,arguments)},Uo=s._emscripten_bind_btCollisionWorld_contactPairTest_3=function(){return s.asm.Se.apply(null,arguments)},ko=s._emscripten_bind_btCollisionWorld_contactTest_2=function(){return s.asm.Te.apply(null,arguments)},Vo=s._emscripten_bind_btCollisionWorld_convexSweepTest_5=function(){return s.asm.Ue.apply(null,arguments)},Wo=s._emscripten_bind_btCollisionWorld_debugDrawObject_3=function(){return s.asm.Ve.apply(null,arguments)},qo=s._emscripten_bind_btCollisionWorld_debugDrawWorld_0=function(){return s.asm.We.apply(null,arguments)},Yo=s._emscripten_bind_btCollisionWorld_getBroadphase_0=function(){return s.asm.Xe.apply(null,arguments)},Xo=s._emscripten_bind_btCollisionWorld_getDebugDrawer_0=function(){return s.asm.Ye.apply(null,arguments)},Zo=s._emscripten_bind_btCollisionWorld_getDispatchInfo_0=function(){return s.asm.Ze.apply(null,arguments)},Jo=s._emscripten_bind_btCollisionWorld_getDispatcher_0=function(){return s.asm._e.apply(null,arguments)},Qo=s._emscripten_bind_btCollisionWorld_getPairCache_0=function(){return s.asm.$e.apply(null,arguments)},Ko=s._emscripten_bind_btCollisionWorld_rayTest_3=function(){return s.asm.af.apply(null,arguments)},$o=s._emscripten_bind_btCollisionWorld_removeCollisionObject_1=function(){return s.asm.bf.apply(null,arguments)},ts=s._emscripten_bind_btCollisionWorld_setDebugDrawer_1=function(){return s.asm.cf.apply(null,arguments)},es=s._emscripten_bind_btCollisionWorld_setForceUpdateAllAabbs_1=function(){return s.asm.df.apply(null,arguments)},ns=s._emscripten_bind_btCollisionWorld_updateSingleAabb_1=function(){return s.asm.ef.apply(null,arguments)},rs=s._emscripten_bind_btCompoundShape___destroy___0=function(){return s.asm.ff.apply(null,arguments)},is=s._emscripten_bind_btCompoundShape_addChildShape_2=function(){return s.asm.gf.apply(null,arguments)},os=s._emscripten_bind_btCompoundShape_btCompoundShape_0=function(){return s.asm.hf.apply(null,arguments)},ss=s._emscripten_bind_btCompoundShape_btCompoundShape_1=function(){return s.asm.jf.apply(null,arguments)},as=s._emscripten_bind_btCompoundShape_calculateLocalInertia_2=function(){return s.asm.kf.apply(null,arguments)},cs=s._emscripten_bind_btCompoundShape_getChildShape_1=function(){return s.asm.lf.apply(null,arguments)},ls=s._emscripten_bind_btCompoundShape_getLocalScaling_0=function(){return s.asm.mf.apply(null,arguments)},ps=s._emscripten_bind_btCompoundShape_getMargin_0=function(){return s.asm.nf.apply(null,arguments)},us=s._emscripten_bind_btCompoundShape_getNumChildShapes_0=function(){return s.asm.of.apply(null,arguments)},hs=s._emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=function(){return s.asm.pf.apply(null,arguments)},ds=s._emscripten_bind_btCompoundShape_removeChildShape_1=function(){return s.asm.qf.apply(null,arguments)},fs=s._emscripten_bind_btCompoundShape_setLocalScaling_1=function(){return s.asm.rf.apply(null,arguments)},ms=s._emscripten_bind_btCompoundShape_setMargin_1=function(){return s.asm.sf.apply(null,arguments)},_s=s._emscripten_bind_btCompoundShape_updateChildTransform_2=function(){return s.asm.tf.apply(null,arguments)},ys=s._emscripten_bind_btCompoundShape_updateChildTransform_3=function(){return s.asm.uf.apply(null,arguments)},gs=s._emscripten_bind_btConcaveShape___destroy___0=function(){return s.asm.vf.apply(null,arguments)},bs=s._emscripten_bind_btConcaveShape_calculateLocalInertia_2=function(){return s.asm.wf.apply(null,arguments)},vs=s._emscripten_bind_btConcaveShape_getLocalScaling_0=function(){return s.asm.xf.apply(null,arguments)},xs=s._emscripten_bind_btConcaveShape_setLocalScaling_1=function(){return s.asm.yf.apply(null,arguments)},ws=s._emscripten_bind_btConeShapeX___destroy___0=function(){return s.asm.zf.apply(null,arguments)},Ss=s._emscripten_bind_btConeShapeX_btConeShapeX_2=function(){return s.asm.Af.apply(null,arguments)},Ms=s._emscripten_bind_btConeShapeX_calculateLocalInertia_2=function(){return s.asm.Bf.apply(null,arguments)},Ts=s._emscripten_bind_btConeShapeX_getLocalScaling_0=function(){return s.asm.Cf.apply(null,arguments)},Cs=s._emscripten_bind_btConeShapeX_setLocalScaling_1=function(){return s.asm.Df.apply(null,arguments)},zs=s._emscripten_bind_btConeShapeZ___destroy___0=function(){return s.asm.Ef.apply(null,arguments)},As=s._emscripten_bind_btConeShapeZ_btConeShapeZ_2=function(){return s.asm.Ff.apply(null,arguments)},Es=s._emscripten_bind_btConeShapeZ_calculateLocalInertia_2=function(){return s.asm.Gf.apply(null,arguments)},Ls=s._emscripten_bind_btConeShapeZ_getLocalScaling_0=function(){return s.asm.Hf.apply(null,arguments)},Ps=s._emscripten_bind_btConeShapeZ_setLocalScaling_1=function(){return s.asm.If.apply(null,arguments)},Rs=s._emscripten_bind_btConeShape___destroy___0=function(){return s.asm.Jf.apply(null,arguments)},Ds=s._emscripten_bind_btConeShape_btConeShape_2=function(){return s.asm.Kf.apply(null,arguments)},Is=s._emscripten_bind_btConeShape_calculateLocalInertia_2=function(){return s.asm.Lf.apply(null,arguments)},Os=s._emscripten_bind_btConeShape_getLocalScaling_0=function(){return s.asm.Mf.apply(null,arguments)},js=s._emscripten_bind_btConeShape_setLocalScaling_1=function(){return s.asm.Nf.apply(null,arguments)},Bs=s._emscripten_bind_btConeTwistConstraint___destroy___0=function(){return s.asm.Of.apply(null,arguments)},Fs=s._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=function(){return s.asm.Pf.apply(null,arguments)},Ns=s._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=function(){return s.asm.Qf.apply(null,arguments)},Hs=s._emscripten_bind_btConeTwistConstraint_enableFeedback_1=function(){return s.asm.Rf.apply(null,arguments)},Gs=s._emscripten_bind_btConeTwistConstraint_enableMotor_1=function(){return s.asm.Sf.apply(null,arguments)},Us=s._emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=function(){return s.asm.Tf.apply(null,arguments)},ks=s._emscripten_bind_btConeTwistConstraint_getParam_2=function(){return s.asm.Uf.apply(null,arguments)},Vs=s._emscripten_bind_btConeTwistConstraint_setAngularOnly_1=function(){return s.asm.Vf.apply(null,arguments)},Ws=s._emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=function(){return s.asm.Wf.apply(null,arguments)},qs=s._emscripten_bind_btConeTwistConstraint_setDamping_1=function(){return s.asm.Xf.apply(null,arguments)},Ys=s._emscripten_bind_btConeTwistConstraint_setLimit_2=function(){return s.asm.Yf.apply(null,arguments)},Xs=s._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=function(){return s.asm.Zf.apply(null,arguments)},Zs=s._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=function(){return s.asm._f.apply(null,arguments)},Js=s._emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=function(){return s.asm.$f.apply(null,arguments)},Qs=s._emscripten_bind_btConeTwistConstraint_setMotorTarget_1=function(){return s.asm.ag.apply(null,arguments)},Ks=s._emscripten_bind_btConeTwistConstraint_setParam_3=function(){return s.asm.bg.apply(null,arguments)},$s=s._emscripten_bind_btConstCollisionObjectArray___destroy___0=function(){return s.asm.cg.apply(null,arguments)},ta=s._emscripten_bind_btConstCollisionObjectArray_at_1=function(){return s.asm.dg.apply(null,arguments)},ea=s._emscripten_bind_btConstCollisionObjectArray_size_0=function(){return s.asm.eg.apply(null,arguments)},na=s._emscripten_bind_btConstraintSetting___destroy___0=function(){return s.asm.fg.apply(null,arguments)},ra=s._emscripten_bind_btConstraintSetting_btConstraintSetting_0=function(){return s.asm.gg.apply(null,arguments)},ia=s._emscripten_bind_btConstraintSetting_get_m_damping_0=function(){return s.asm.hg.apply(null,arguments)},oa=s._emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=function(){return s.asm.ig.apply(null,arguments)},sa=s._emscripten_bind_btConstraintSetting_get_m_tau_0=function(){return s.asm.jg.apply(null,arguments)},aa=s._emscripten_bind_btConstraintSetting_set_m_damping_1=function(){return s.asm.kg.apply(null,arguments)},ca=s._emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=function(){return s.asm.lg.apply(null,arguments)},la=s._emscripten_bind_btConstraintSetting_set_m_tau_1=function(){return s.asm.mg.apply(null,arguments)},pa=s._emscripten_bind_btConstraintSolver___destroy___0=function(){return s.asm.ng.apply(null,arguments)},ua=s._emscripten_bind_btContactSolverInfo___destroy___0=function(){return s.asm.og.apply(null,arguments)},ha=s._emscripten_bind_btContactSolverInfo_get_m_numIterations_0=function(){return s.asm.pg.apply(null,arguments)},da=s._emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=function(){return s.asm.qg.apply(null,arguments)},fa=s._emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=function(){return s.asm.rg.apply(null,arguments)},ma=s._emscripten_bind_btContactSolverInfo_set_m_numIterations_1=function(){return s.asm.sg.apply(null,arguments)},_a=s._emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=function(){return s.asm.tg.apply(null,arguments)},ya=s._emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=function(){return s.asm.ug.apply(null,arguments)},ga=s._emscripten_bind_btConvexHullShape___destroy___0=function(){return s.asm.vg.apply(null,arguments)},ba=s._emscripten_bind_btConvexHullShape_addPoint_1=function(){return s.asm.wg.apply(null,arguments)},va=s._emscripten_bind_btConvexHullShape_addPoint_2=function(){return s.asm.xg.apply(null,arguments)},xa=s._emscripten_bind_btConvexHullShape_btConvexHullShape_0=function(){return s.asm.yg.apply(null,arguments)},wa=s._emscripten_bind_btConvexHullShape_btConvexHullShape_1=function(){return s.asm.zg.apply(null,arguments)},Sa=s._emscripten_bind_btConvexHullShape_btConvexHullShape_2=function(){return s.asm.Ag.apply(null,arguments)},Ma=s._emscripten_bind_btConvexHullShape_calculateLocalInertia_2=function(){return s.asm.Bg.apply(null,arguments)},Ta=s._emscripten_bind_btConvexHullShape_getConvexPolyhedron_0=function(){return s.asm.Cg.apply(null,arguments)},Ca=s._emscripten_bind_btConvexHullShape_getLocalScaling_0=function(){return s.asm.Dg.apply(null,arguments)},za=s._emscripten_bind_btConvexHullShape_getMargin_0=function(){return s.asm.Eg.apply(null,arguments)},Aa=s._emscripten_bind_btConvexHullShape_getNumVertices_0=function(){return s.asm.Fg.apply(null,arguments)},Ea=s._emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1=function(){return s.asm.Gg.apply(null,arguments)},La=s._emscripten_bind_btConvexHullShape_recalcLocalAabb_0=function(){return s.asm.Hg.apply(null,arguments)},Pa=s._emscripten_bind_btConvexHullShape_setLocalScaling_1=function(){return s.asm.Ig.apply(null,arguments)},Ra=s._emscripten_bind_btConvexHullShape_setMargin_1=function(){return s.asm.Jg.apply(null,arguments)},Da=s._emscripten_bind_btConvexPolyhedron___destroy___0=function(){return s.asm.Kg.apply(null,arguments)},Ia=s._emscripten_bind_btConvexPolyhedron_get_m_faces_0=function(){return s.asm.Lg.apply(null,arguments)},Oa=s._emscripten_bind_btConvexPolyhedron_get_m_vertices_0=function(){return s.asm.Mg.apply(null,arguments)},ja=s._emscripten_bind_btConvexPolyhedron_set_m_faces_1=function(){return s.asm.Ng.apply(null,arguments)},Ba=s._emscripten_bind_btConvexPolyhedron_set_m_vertices_1=function(){return s.asm.Og.apply(null,arguments)},Fa=s._emscripten_bind_btConvexShape___destroy___0=function(){return s.asm.Pg.apply(null,arguments)},Na=s._emscripten_bind_btConvexShape_calculateLocalInertia_2=function(){return s.asm.Qg.apply(null,arguments)},Ha=s._emscripten_bind_btConvexShape_getLocalScaling_0=function(){return s.asm.Rg.apply(null,arguments)},Ga=s._emscripten_bind_btConvexShape_getMargin_0=function(){return s.asm.Sg.apply(null,arguments)},Ua=s._emscripten_bind_btConvexShape_setLocalScaling_1=function(){return s.asm.Tg.apply(null,arguments)},ka=s._emscripten_bind_btConvexShape_setMargin_1=function(){return s.asm.Ug.apply(null,arguments)},Va=s._emscripten_bind_btConvexTriangleMeshShape___destroy___0=function(){return s.asm.Vg.apply(null,arguments)},Wa=s._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=function(){return s.asm.Wg.apply(null,arguments)},qa=s._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=function(){return s.asm.Xg.apply(null,arguments)},Ya=s._emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=function(){return s.asm.Yg.apply(null,arguments)},Xa=s._emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0=function(){return s.asm.Zg.apply(null,arguments)},Za=s._emscripten_bind_btConvexTriangleMeshShape_getMargin_0=function(){return s.asm._g.apply(null,arguments)},Ja=s._emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=function(){return s.asm.$g.apply(null,arguments)},Qa=s._emscripten_bind_btConvexTriangleMeshShape_setMargin_1=function(){return s.asm.ah.apply(null,arguments)},Ka=s._emscripten_bind_btCylinderShapeX___destroy___0=function(){return s.asm.bh.apply(null,arguments)},$a=s._emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=function(){return s.asm.ch.apply(null,arguments)},tc=s._emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=function(){return s.asm.dh.apply(null,arguments)},ec=s._emscripten_bind_btCylinderShapeX_getLocalScaling_0=function(){return s.asm.eh.apply(null,arguments)},nc=s._emscripten_bind_btCylinderShapeX_getMargin_0=function(){return s.asm.fh.apply(null,arguments)},rc=s._emscripten_bind_btCylinderShapeX_setLocalScaling_1=function(){return s.asm.gh.apply(null,arguments)},ic=s._emscripten_bind_btCylinderShapeX_setMargin_1=function(){return s.asm.hh.apply(null,arguments)},oc=s._emscripten_bind_btCylinderShapeZ___destroy___0=function(){return s.asm.ih.apply(null,arguments)},sc=s._emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=function(){return s.asm.jh.apply(null,arguments)},ac=s._emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=function(){return s.asm.kh.apply(null,arguments)},cc=s._emscripten_bind_btCylinderShapeZ_getLocalScaling_0=function(){return s.asm.lh.apply(null,arguments)},lc=s._emscripten_bind_btCylinderShapeZ_getMargin_0=function(){return s.asm.mh.apply(null,arguments)},pc=s._emscripten_bind_btCylinderShapeZ_setLocalScaling_1=function(){return s.asm.nh.apply(null,arguments)},uc=s._emscripten_bind_btCylinderShapeZ_setMargin_1=function(){return s.asm.oh.apply(null,arguments)},hc=s._emscripten_bind_btCylinderShape___destroy___0=function(){return s.asm.ph.apply(null,arguments)},dc=s._emscripten_bind_btCylinderShape_btCylinderShape_1=function(){return s.asm.qh.apply(null,arguments)},fc=s._emscripten_bind_btCylinderShape_calculateLocalInertia_2=function(){return s.asm.rh.apply(null,arguments)},mc=s._emscripten_bind_btCylinderShape_getLocalScaling_0=function(){return s.asm.sh.apply(null,arguments)},_c=s._emscripten_bind_btCylinderShape_getMargin_0=function(){return s.asm.th.apply(null,arguments)},yc=s._emscripten_bind_btCylinderShape_setLocalScaling_1=function(){return s.asm.uh.apply(null,arguments)},gc=s._emscripten_bind_btCylinderShape_setMargin_1=function(){return s.asm.vh.apply(null,arguments)},bc=s._emscripten_bind_btDbvtBroadphase___destroy___0=function(){return s.asm.wh.apply(null,arguments)},vc=s._emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=function(){return s.asm.xh.apply(null,arguments)},xc=s._emscripten_bind_btDbvtBroadphase_getOverlappingPairCache_0=function(){return s.asm.yh.apply(null,arguments)},wc=s._emscripten_bind_btDefaultCollisionConfiguration___destroy___0=function(){return s.asm.zh.apply(null,arguments)},Sc=s._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=function(){return s.asm.Ah.apply(null,arguments)},Mc=s._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=function(){return s.asm.Bh.apply(null,arguments)},Tc=s._emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=function(){return s.asm.Ch.apply(null,arguments)},Cc=s._emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=function(){return s.asm.Dh.apply(null,arguments)},zc=s._emscripten_bind_btDefaultMotionState___destroy___0=function(){return s.asm.Eh.apply(null,arguments)},Ac=s._emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=function(){return s.asm.Fh.apply(null,arguments)},Ec=s._emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=function(){return s.asm.Gh.apply(null,arguments)},Lc=s._emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=function(){return s.asm.Hh.apply(null,arguments)},Pc=s._emscripten_bind_btDefaultMotionState_getWorldTransform_1=function(){return s.asm.Ih.apply(null,arguments)},Rc=s._emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=function(){return s.asm.Jh.apply(null,arguments)},Dc=s._emscripten_bind_btDefaultMotionState_setWorldTransform_1=function(){return s.asm.Kh.apply(null,arguments)},Ic=s._emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=function(){return s.asm.Lh.apply(null,arguments)},Oc=s._emscripten_bind_btDiscreteDynamicsWorld___destroy___0=function(){return s.asm.Mh.apply(null,arguments)},jc=s._emscripten_bind_btDiscreteDynamicsWorld_addAction_1=function(){return s.asm.Nh.apply(null,arguments)},Bc=s._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=function(){return s.asm.Oh.apply(null,arguments)},Fc=s._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=function(){return s.asm.Ph.apply(null,arguments)},Nc=s._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=function(){return s.asm.Qh.apply(null,arguments)},Hc=s._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=function(){return s.asm.Rh.apply(null,arguments)},Gc=s._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=function(){return s.asm.Sh.apply(null,arguments)},Uc=s._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=function(){return s.asm.Th.apply(null,arguments)},kc=s._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=function(){return s.asm.Uh.apply(null,arguments)},Vc=s._emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=function(){return s.asm.Vh.apply(null,arguments)},Wc=s._emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=function(){return s.asm.Wh.apply(null,arguments)},qc=s._emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=function(){return s.asm.Xh.apply(null,arguments)},Yc=s._emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=function(){return s.asm.Yh.apply(null,arguments)},Xc=s._emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3=function(){return s.asm.Zh.apply(null,arguments)},Zc=s._emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0=function(){return s.asm._h.apply(null,arguments)},Jc=s._emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=function(){return s.asm.$h.apply(null,arguments)},Qc=s._emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0=function(){return s.asm.ai.apply(null,arguments)},Kc=s._emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=function(){return s.asm.bi.apply(null,arguments)},$c=s._emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=function(){return s.asm.ci.apply(null,arguments)},tl=s._emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=function(){return s.asm.di.apply(null,arguments)},el=s._emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=function(){return s.asm.ei.apply(null,arguments)},nl=s._emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=function(){return s.asm.fi.apply(null,arguments)},rl=s._emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=function(){return s.asm.gi.apply(null,arguments)},il=s._emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=function(){return s.asm.hi.apply(null,arguments)},ol=s._emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1=function(){return s.asm.ii.apply(null,arguments)},sl=s._emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=function(){return s.asm.ji.apply(null,arguments)},al=s._emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=function(){return s.asm.ki.apply(null,arguments)},cl=s._emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1=function(){return s.asm.li.apply(null,arguments)},ll=s._emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1=function(){return s.asm.mi.apply(null,arguments)},pl=s._emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1=function(){return s.asm.ni.apply(null,arguments)},ul=s._emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1=function(){return s.asm.oi.apply(null,arguments)},hl=s._emscripten_bind_btDiscreteDynamicsWorld_setForceUpdateAllAabbs_1=function(){return s.asm.pi.apply(null,arguments)},dl=s._emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=function(){return s.asm.qi.apply(null,arguments)},fl=s._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=function(){return s.asm.ri.apply(null,arguments)},ml=s._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=function(){return s.asm.si.apply(null,arguments)},_l=s._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=function(){return s.asm.ti.apply(null,arguments)},yl=s._emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1=function(){return s.asm.ui.apply(null,arguments)},gl=s._emscripten_bind_btDispatcherInfo___destroy___0=function(){return s.asm.vi.apply(null,arguments)},bl=s._emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=function(){return s.asm.wi.apply(null,arguments)},vl=s._emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=function(){return s.asm.xi.apply(null,arguments)},xl=s._emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=function(){return s.asm.yi.apply(null,arguments)},wl=s._emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=function(){return s.asm.zi.apply(null,arguments)},Sl=s._emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=function(){return s.asm.Ai.apply(null,arguments)},Ml=s._emscripten_bind_btDispatcherInfo_get_m_stepCount_0=function(){return s.asm.Bi.apply(null,arguments)},Tl=s._emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=function(){return s.asm.Ci.apply(null,arguments)},Cl=s._emscripten_bind_btDispatcherInfo_get_m_timeStep_0=function(){return s.asm.Di.apply(null,arguments)},zl=s._emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=function(){return s.asm.Ei.apply(null,arguments)},Al=s._emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=function(){return s.asm.Fi.apply(null,arguments)},El=s._emscripten_bind_btDispatcherInfo_get_m_useEpa_0=function(){return s.asm.Gi.apply(null,arguments)},Ll=s._emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=function(){return s.asm.Hi.apply(null,arguments)},Pl=s._emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=function(){return s.asm.Ii.apply(null,arguments)},Rl=s._emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=function(){return s.asm.Ji.apply(null,arguments)},Dl=s._emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=function(){return s.asm.Ki.apply(null,arguments)},Il=s._emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=function(){return s.asm.Li.apply(null,arguments)},Ol=s._emscripten_bind_btDispatcherInfo_set_m_stepCount_1=function(){return s.asm.Mi.apply(null,arguments)},jl=s._emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=function(){return s.asm.Ni.apply(null,arguments)},Bl=s._emscripten_bind_btDispatcherInfo_set_m_timeStep_1=function(){return s.asm.Oi.apply(null,arguments)},Fl=s._emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=function(){return s.asm.Pi.apply(null,arguments)},Nl=s._emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=function(){return s.asm.Qi.apply(null,arguments)},Hl=s._emscripten_bind_btDispatcherInfo_set_m_useEpa_1=function(){return s.asm.Ri.apply(null,arguments)},Gl=s._emscripten_bind_btDispatcher___destroy___0=function(){return s.asm.Si.apply(null,arguments)},Ul=s._emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=function(){return s.asm.Ti.apply(null,arguments)},kl=s._emscripten_bind_btDispatcher_getNumManifolds_0=function(){return s.asm.Ui.apply(null,arguments)},Vl=s._emscripten_bind_btDynamicsWorld___destroy___0=function(){return s.asm.Vi.apply(null,arguments)},Wl=s._emscripten_bind_btDynamicsWorld_addAction_1=function(){return s.asm.Wi.apply(null,arguments)},ql=s._emscripten_bind_btDynamicsWorld_addCollisionObject_1=function(){return s.asm.Xi.apply(null,arguments)},Yl=s._emscripten_bind_btDynamicsWorld_addCollisionObject_2=function(){return s.asm.Yi.apply(null,arguments)},Xl=s._emscripten_bind_btDynamicsWorld_addCollisionObject_3=function(){return s.asm.Zi.apply(null,arguments)},Zl=s._emscripten_bind_btDynamicsWorld_contactPairTest_3=function(){return s.asm._i.apply(null,arguments)},Jl=s._emscripten_bind_btDynamicsWorld_contactTest_2=function(){return s.asm.$i.apply(null,arguments)},Ql=s._emscripten_bind_btDynamicsWorld_convexSweepTest_5=function(){return s.asm.aj.apply(null,arguments)},Kl=s._emscripten_bind_btDynamicsWorld_debugDrawObject_3=function(){return s.asm.bj.apply(null,arguments)},$l=s._emscripten_bind_btDynamicsWorld_debugDrawWorld_0=function(){return s.asm.cj.apply(null,arguments)},tp=s._emscripten_bind_btDynamicsWorld_getBroadphase_0=function(){return s.asm.dj.apply(null,arguments)},ep=s._emscripten_bind_btDynamicsWorld_getDebugDrawer_0=function(){return s.asm.ej.apply(null,arguments)},np=s._emscripten_bind_btDynamicsWorld_getDispatchInfo_0=function(){return s.asm.fj.apply(null,arguments)},rp=s._emscripten_bind_btDynamicsWorld_getDispatcher_0=function(){return s.asm.gj.apply(null,arguments)},ip=s._emscripten_bind_btDynamicsWorld_getPairCache_0=function(){return s.asm.hj.apply(null,arguments)},op=s._emscripten_bind_btDynamicsWorld_getSolverInfo_0=function(){return s.asm.ij.apply(null,arguments)},sp=s._emscripten_bind_btDynamicsWorld_rayTest_3=function(){return s.asm.jj.apply(null,arguments)},ap=s._emscripten_bind_btDynamicsWorld_removeAction_1=function(){return s.asm.kj.apply(null,arguments)},cp=s._emscripten_bind_btDynamicsWorld_removeCollisionObject_1=function(){return s.asm.lj.apply(null,arguments)},lp=s._emscripten_bind_btDynamicsWorld_setDebugDrawer_1=function(){return s.asm.mj.apply(null,arguments)},pp=s._emscripten_bind_btDynamicsWorld_setForceUpdateAllAabbs_1=function(){return s.asm.nj.apply(null,arguments)},up=s._emscripten_bind_btDynamicsWorld_updateSingleAabb_1=function(){return s.asm.oj.apply(null,arguments)},hp=s._emscripten_bind_btEmptyShape___destroy___0=function(){return s.asm.pj.apply(null,arguments)},dp=s._emscripten_bind_btEmptyShape_btEmptyShape_0=function(){return s.asm.qj.apply(null,arguments)},fp=s._emscripten_bind_btEmptyShape_calculateLocalInertia_2=function(){return s.asm.rj.apply(null,arguments)},mp=s._emscripten_bind_btEmptyShape_getLocalScaling_0=function(){return s.asm.sj.apply(null,arguments)},_p=s._emscripten_bind_btEmptyShape_setLocalScaling_1=function(){return s.asm.tj.apply(null,arguments)},yp=s._emscripten_bind_btFaceArray___destroy___0=function(){return s.asm.uj.apply(null,arguments)},gp=s._emscripten_bind_btFaceArray_at_1=function(){return s.asm.vj.apply(null,arguments)},bp=s._emscripten_bind_btFaceArray_size_0=function(){return s.asm.wj.apply(null,arguments)},vp=s._emscripten_bind_btFace___destroy___0=function(){return s.asm.xj.apply(null,arguments)},xp=s._emscripten_bind_btFace_get_m_indices_0=function(){return s.asm.yj.apply(null,arguments)},wp=s._emscripten_bind_btFace_get_m_plane_1=function(){return s.asm.zj.apply(null,arguments)},Sp=s._emscripten_bind_btFace_set_m_indices_1=function(){return s.asm.Aj.apply(null,arguments)},Mp=s._emscripten_bind_btFace_set_m_plane_2=function(){return s.asm.Bj.apply(null,arguments)},Tp=s._emscripten_bind_btFixedConstraint___destroy___0=function(){return s.asm.Cj.apply(null,arguments)},Cp=s._emscripten_bind_btFixedConstraint_btFixedConstraint_4=function(){return s.asm.Dj.apply(null,arguments)},zp=s._emscripten_bind_btFixedConstraint_enableFeedback_1=function(){return s.asm.Ej.apply(null,arguments)},Ap=s._emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0=function(){return s.asm.Fj.apply(null,arguments)},Ep=s._emscripten_bind_btFixedConstraint_getParam_2=function(){return s.asm.Gj.apply(null,arguments)},Lp=s._emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1=function(){return s.asm.Hj.apply(null,arguments)},Pp=s._emscripten_bind_btFixedConstraint_setParam_3=function(){return s.asm.Ij.apply(null,arguments)},Rp=s._emscripten_bind_btGeneric6DofConstraint___destroy___0=function(){return s.asm.Jj.apply(null,arguments)},Dp=s._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=function(){return s.asm.Kj.apply(null,arguments)},Ip=s._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=function(){return s.asm.Lj.apply(null,arguments)},Op=s._emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=function(){return s.asm.Mj.apply(null,arguments)},jp=s._emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=function(){return s.asm.Nj.apply(null,arguments)},Bp=s._emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0=function(){return s.asm.Oj.apply(null,arguments)},Fp=s._emscripten_bind_btGeneric6DofConstraint_getParam_2=function(){return s.asm.Pj.apply(null,arguments)},Np=s._emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=function(){return s.asm.Qj.apply(null,arguments)},Hp=s._emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=function(){return s.asm.Rj.apply(null,arguments)},Gp=s._emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=function(){return s.asm.Sj.apply(null,arguments)},Up=s._emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=function(){return s.asm.Tj.apply(null,arguments)},kp=s._emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=function(){return s.asm.Uj.apply(null,arguments)},Vp=s._emscripten_bind_btGeneric6DofConstraint_setParam_3=function(){return s.asm.Vj.apply(null,arguments)},Wp=s._emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=function(){return s.asm.Wj.apply(null,arguments)},qp=s._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=function(){return s.asm.Xj.apply(null,arguments)},Yp=s._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=function(){return s.asm.Yj.apply(null,arguments)},Xp=s._emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=function(){return s.asm.Zj.apply(null,arguments)},Zp=s._emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=function(){return s.asm._j.apply(null,arguments)},Jp=s._emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=function(){return s.asm.$j.apply(null,arguments)},Qp=s._emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0=function(){return s.asm.ak.apply(null,arguments)},Kp=s._emscripten_bind_btGeneric6DofSpringConstraint_getParam_2=function(){return s.asm.bk.apply(null,arguments)},$p=s._emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=function(){return s.asm.ck.apply(null,arguments)},tu=s._emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=function(){return s.asm.dk.apply(null,arguments)},eu=s._emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=function(){return s.asm.ek.apply(null,arguments)},nu=s._emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=function(){return s.asm.fk.apply(null,arguments)},ru=s._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0=function(){return s.asm.gk.apply(null,arguments)},iu=s._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1=function(){return s.asm.hk.apply(null,arguments)},ou=s._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2=function(){return s.asm.ik.apply(null,arguments)},su=s._emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=function(){return s.asm.jk.apply(null,arguments)},au=s._emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=function(){return s.asm.kk.apply(null,arguments)},cu=s._emscripten_bind_btGeneric6DofSpringConstraint_setParam_3=function(){return s.asm.lk.apply(null,arguments)},lu=s._emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=function(){return s.asm.mk.apply(null,arguments)},pu=s._emscripten_bind_btGhostObject___destroy___0=function(){return s.asm.nk.apply(null,arguments)},uu=s._emscripten_bind_btGhostObject_activate_0=function(){return s.asm.ok.apply(null,arguments)},hu=s._emscripten_bind_btGhostObject_activate_1=function(){return s.asm.pk.apply(null,arguments)},du=s._emscripten_bind_btGhostObject_btGhostObject_0=function(){return s.asm.qk.apply(null,arguments)},fu=s._emscripten_bind_btGhostObject_forceActivationState_1=function(){return s.asm.rk.apply(null,arguments)},mu=s._emscripten_bind_btGhostObject_getBroadphaseHandle_0=function(){return s.asm.sk.apply(null,arguments)},_u=s._emscripten_bind_btGhostObject_getCollisionFlags_0=function(){return s.asm.tk.apply(null,arguments)},yu=s._emscripten_bind_btGhostObject_getCollisionShape_0=function(){return s.asm.uk.apply(null,arguments)},gu=s._emscripten_bind_btGhostObject_getFriction_0=function(){return s.asm.vk.apply(null,arguments)},bu=s._emscripten_bind_btGhostObject_getNumOverlappingObjects_0=function(){return s.asm.wk.apply(null,arguments)},vu=s._emscripten_bind_btGhostObject_getOverlappingObject_1=function(){return s.asm.xk.apply(null,arguments)},xu=s._emscripten_bind_btGhostObject_getRestitution_0=function(){return s.asm.yk.apply(null,arguments)},wu=s._emscripten_bind_btGhostObject_getRollingFriction_0=function(){return s.asm.zk.apply(null,arguments)},Su=s._emscripten_bind_btGhostObject_getUserIndex_0=function(){return s.asm.Ak.apply(null,arguments)},Mu=s._emscripten_bind_btGhostObject_getUserPointer_0=function(){return s.asm.Bk.apply(null,arguments)},Tu=s._emscripten_bind_btGhostObject_getWorldTransform_0=function(){return s.asm.Ck.apply(null,arguments)},Cu=s._emscripten_bind_btGhostObject_isActive_0=function(){return s.asm.Dk.apply(null,arguments)},zu=s._emscripten_bind_btGhostObject_isKinematicObject_0=function(){return s.asm.Ek.apply(null,arguments)},Au=s._emscripten_bind_btGhostObject_isStaticObject_0=function(){return s.asm.Fk.apply(null,arguments)},Eu=s._emscripten_bind_btGhostObject_isStaticOrKinematicObject_0=function(){return s.asm.Gk.apply(null,arguments)},Lu=s._emscripten_bind_btGhostObject_setActivationState_1=function(){return s.asm.Hk.apply(null,arguments)},Pu=s._emscripten_bind_btGhostObject_setAnisotropicFriction_2=function(){return s.asm.Ik.apply(null,arguments)},Ru=s._emscripten_bind_btGhostObject_setCcdMotionThreshold_1=function(){return s.asm.Jk.apply(null,arguments)},Du=s._emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=function(){return s.asm.Kk.apply(null,arguments)},Iu=s._emscripten_bind_btGhostObject_setCollisionFlags_1=function(){return s.asm.Lk.apply(null,arguments)},Ou=s._emscripten_bind_btGhostObject_setCollisionShape_1=function(){return s.asm.Mk.apply(null,arguments)},ju=s._emscripten_bind_btGhostObject_setContactProcessingThreshold_1=function(){return s.asm.Nk.apply(null,arguments)},Bu=s._emscripten_bind_btGhostObject_setFriction_1=function(){return s.asm.Ok.apply(null,arguments)},Fu=s._emscripten_bind_btGhostObject_setRestitution_1=function(){return s.asm.Pk.apply(null,arguments)},Nu=s._emscripten_bind_btGhostObject_setRollingFriction_1=function(){return s.asm.Qk.apply(null,arguments)},Hu=s._emscripten_bind_btGhostObject_setUserIndex_1=function(){return s.asm.Rk.apply(null,arguments)},Gu=s._emscripten_bind_btGhostObject_setUserPointer_1=function(){return s.asm.Sk.apply(null,arguments)},Uu=s._emscripten_bind_btGhostObject_setWorldTransform_1=function(){return s.asm.Tk.apply(null,arguments)},ku=s._emscripten_bind_btGhostPairCallback___destroy___0=function(){return s.asm.Uk.apply(null,arguments)},Vu=s._emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=function(){return s.asm.Vk.apply(null,arguments)},Wu=s._emscripten_bind_btHeightfieldTerrainShape___destroy___0=function(){return s.asm.Wk.apply(null,arguments)},qu=s._emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=function(){return s.asm.Xk.apply(null,arguments)},Yu=s._emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=function(){return s.asm.Yk.apply(null,arguments)},Xu=s._emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0=function(){return s.asm.Zk.apply(null,arguments)},Zu=s._emscripten_bind_btHeightfieldTerrainShape_getMargin_0=function(){return s.asm._k.apply(null,arguments)},Ju=s._emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=function(){return s.asm.$k.apply(null,arguments)},Qu=s._emscripten_bind_btHeightfieldTerrainShape_setMargin_1=function(){return s.asm.al.apply(null,arguments)},Ku=s._emscripten_bind_btHingeConstraint___destroy___0=function(){return s.asm.bl.apply(null,arguments)},$u=s._emscripten_bind_btHingeConstraint_btHingeConstraint_2=function(){return s.asm.cl.apply(null,arguments)},th=s._emscripten_bind_btHingeConstraint_btHingeConstraint_3=function(){return s.asm.dl.apply(null,arguments)},eh=s._emscripten_bind_btHingeConstraint_btHingeConstraint_4=function(){return s.asm.el.apply(null,arguments)},nh=s._emscripten_bind_btHingeConstraint_btHingeConstraint_5=function(){return s.asm.fl.apply(null,arguments)},rh=s._emscripten_bind_btHingeConstraint_btHingeConstraint_6=function(){return s.asm.gl.apply(null,arguments)},ih=s._emscripten_bind_btHingeConstraint_btHingeConstraint_7=function(){return s.asm.hl.apply(null,arguments)},oh=s._emscripten_bind_btHingeConstraint_enableAngularMotor_3=function(){return s.asm.il.apply(null,arguments)},sh=s._emscripten_bind_btHingeConstraint_enableFeedback_1=function(){return s.asm.jl.apply(null,arguments)},ah=s._emscripten_bind_btHingeConstraint_enableMotor_1=function(){return s.asm.kl.apply(null,arguments)},ch=s._emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=function(){return s.asm.ll.apply(null,arguments)},lh=s._emscripten_bind_btHingeConstraint_getParam_2=function(){return s.asm.ml.apply(null,arguments)},ph=s._emscripten_bind_btHingeConstraint_setAngularOnly_1=function(){return s.asm.nl.apply(null,arguments)},uh=s._emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=function(){return s.asm.ol.apply(null,arguments)},hh=s._emscripten_bind_btHingeConstraint_setLimit_4=function(){return s.asm.pl.apply(null,arguments)},dh=s._emscripten_bind_btHingeConstraint_setLimit_5=function(){return s.asm.ql.apply(null,arguments)},fh=s._emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=function(){return s.asm.rl.apply(null,arguments)},mh=s._emscripten_bind_btHingeConstraint_setMotorTarget_2=function(){return s.asm.sl.apply(null,arguments)},_h=s._emscripten_bind_btHingeConstraint_setParam_3=function(){return s.asm.tl.apply(null,arguments)},yh=s._emscripten_bind_btIDebugDraw___destroy___0=function(){return s.asm.ul.apply(null,arguments)},gh=s._emscripten_bind_btIDebugDraw_draw3dText_2=function(){return s.asm.vl.apply(null,arguments)},bh=s._emscripten_bind_btIDebugDraw_drawContactPoint_5=function(){return s.asm.wl.apply(null,arguments)},vh=s._emscripten_bind_btIDebugDraw_drawLine_3=function(){return s.asm.xl.apply(null,arguments)},xh=s._emscripten_bind_btIDebugDraw_getDebugMode_0=function(){return s.asm.yl.apply(null,arguments)},wh=s._emscripten_bind_btIDebugDraw_reportErrorWarning_1=function(){return s.asm.zl.apply(null,arguments)},Sh=s._emscripten_bind_btIDebugDraw_setDebugMode_1=function(){return s.asm.Al.apply(null,arguments)},Mh=s._emscripten_bind_btIndexedMeshArray___destroy___0=function(){return s.asm.Bl.apply(null,arguments)},Th=s._emscripten_bind_btIndexedMeshArray_at_1=function(){return s.asm.Cl.apply(null,arguments)},Ch=s._emscripten_bind_btIndexedMeshArray_size_0=function(){return s.asm.Dl.apply(null,arguments)},zh=s._emscripten_bind_btIndexedMesh___destroy___0=function(){return s.asm.El.apply(null,arguments)},Ah=s._emscripten_bind_btIndexedMesh_get_m_numTriangles_0=function(){return s.asm.Fl.apply(null,arguments)},Eh=s._emscripten_bind_btIndexedMesh_set_m_numTriangles_1=function(){return s.asm.Gl.apply(null,arguments)},Lh=s._emscripten_bind_btIntArray___destroy___0=function(){return s.asm.Hl.apply(null,arguments)},Ph=s._emscripten_bind_btIntArray_at_1=function(){return s.asm.Il.apply(null,arguments)},Rh=s._emscripten_bind_btIntArray_size_0=function(){return s.asm.Jl.apply(null,arguments)},Dh=s._emscripten_bind_btKinematicCharacterController___destroy___0=function(){return s.asm.Kl.apply(null,arguments)},Ih=s._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=function(){return s.asm.Ll.apply(null,arguments)},Oh=s._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=function(){return s.asm.Ml.apply(null,arguments)},jh=s._emscripten_bind_btKinematicCharacterController_canJump_0=function(){return s.asm.Nl.apply(null,arguments)},Bh=s._emscripten_bind_btKinematicCharacterController_getGhostObject_0=function(){return s.asm.Ol.apply(null,arguments)},Fh=s._emscripten_bind_btKinematicCharacterController_getGravity_0=function(){return s.asm.Pl.apply(null,arguments)},Nh=s._emscripten_bind_btKinematicCharacterController_getMaxSlope_0=function(){return s.asm.Ql.apply(null,arguments)},Hh=s._emscripten_bind_btKinematicCharacterController_jump_0=function(){return s.asm.Rl.apply(null,arguments)},Gh=s._emscripten_bind_btKinematicCharacterController_onGround_0=function(){return s.asm.Sl.apply(null,arguments)},Uh=s._emscripten_bind_btKinematicCharacterController_playerStep_2=function(){return s.asm.Tl.apply(null,arguments)},kh=s._emscripten_bind_btKinematicCharacterController_preStep_1=function(){return s.asm.Ul.apply(null,arguments)},Vh=s._emscripten_bind_btKinematicCharacterController_setFallSpeed_1=function(){return s.asm.Vl.apply(null,arguments)},Wh=s._emscripten_bind_btKinematicCharacterController_setGravity_1=function(){return s.asm.Wl.apply(null,arguments)},qh=s._emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=function(){return s.asm.Xl.apply(null,arguments)},Yh=s._emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=function(){return s.asm.Yl.apply(null,arguments)},Xh=s._emscripten_bind_btKinematicCharacterController_setMaxSlope_1=function(){return s.asm.Zl.apply(null,arguments)},Zh=s._emscripten_bind_btKinematicCharacterController_setUpAxis_1=function(){return s.asm._l.apply(null,arguments)},Jh=s._emscripten_bind_btKinematicCharacterController_setUpInterpolate_1=function(){return s.asm.$l.apply(null,arguments)},Qh=s._emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=function(){return s.asm.am.apply(null,arguments)},Kh=s._emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=function(){return s.asm.bm.apply(null,arguments)},$h=s._emscripten_bind_btKinematicCharacterController_setWalkDirection_1=function(){return s.asm.cm.apply(null,arguments)},td=s._emscripten_bind_btKinematicCharacterController_updateAction_2=function(){return s.asm.dm.apply(null,arguments)},ed=s._emscripten_bind_btKinematicCharacterController_warp_1=function(){return s.asm.em.apply(null,arguments)},nd=s._emscripten_bind_btManifoldPoint___destroy___0=function(){return s.asm.fm.apply(null,arguments)},rd=s._emscripten_bind_btManifoldPoint_getAppliedImpulse_0=function(){return s.asm.gm.apply(null,arguments)},id=s._emscripten_bind_btManifoldPoint_getDistance_0=function(){return s.asm.hm.apply(null,arguments)},od=s._emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=function(){return s.asm.im.apply(null,arguments)},sd=s._emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=function(){return s.asm.jm.apply(null,arguments)},ad=s._emscripten_bind_btManifoldPoint_get_m_localPointA_0=function(){return s.asm.km.apply(null,arguments)},cd=s._emscripten_bind_btManifoldPoint_get_m_localPointB_0=function(){return s.asm.lm.apply(null,arguments)},ld=s._emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=function(){return s.asm.mm.apply(null,arguments)},pd=s._emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=function(){return s.asm.nm.apply(null,arguments)},ud=s._emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=function(){return s.asm.om.apply(null,arguments)},hd=s._emscripten_bind_btManifoldPoint_get_m_userPersistentData_0=function(){return s.asm.pm.apply(null,arguments)},dd=s._emscripten_bind_btManifoldPoint_set_m_localPointA_1=function(){return s.asm.qm.apply(null,arguments)},fd=s._emscripten_bind_btManifoldPoint_set_m_localPointB_1=function(){return s.asm.rm.apply(null,arguments)},md=s._emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=function(){return s.asm.sm.apply(null,arguments)},_d=s._emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=function(){return s.asm.tm.apply(null,arguments)},yd=s._emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=function(){return s.asm.um.apply(null,arguments)},gd=s._emscripten_bind_btManifoldPoint_set_m_userPersistentData_1=function(){return s.asm.vm.apply(null,arguments)},bd=s._emscripten_bind_btMatrix3x3___destroy___0=function(){return s.asm.wm.apply(null,arguments)},vd=s._emscripten_bind_btMatrix3x3_getRotation_1=function(){return s.asm.xm.apply(null,arguments)},xd=s._emscripten_bind_btMatrix3x3_getRow_1=function(){return s.asm.ym.apply(null,arguments)},wd=s._emscripten_bind_btMatrix3x3_setEulerZYX_3=function(){return s.asm.zm.apply(null,arguments)},Sd=s._emscripten_bind_btMotionState___destroy___0=function(){return s.asm.Am.apply(null,arguments)},Md=s._emscripten_bind_btMotionState_getWorldTransform_1=function(){return s.asm.Bm.apply(null,arguments)},Td=s._emscripten_bind_btMotionState_setWorldTransform_1=function(){return s.asm.Cm.apply(null,arguments)},Cd=s._emscripten_bind_btMultiSphereShape___destroy___0=function(){return s.asm.Dm.apply(null,arguments)},zd=s._emscripten_bind_btMultiSphereShape_btMultiSphereShape_3=function(){return s.asm.Em.apply(null,arguments)},Ad=s._emscripten_bind_btMultiSphereShape_calculateLocalInertia_2=function(){return s.asm.Fm.apply(null,arguments)},Ed=s._emscripten_bind_btMultiSphereShape_getLocalScaling_0=function(){return s.asm.Gm.apply(null,arguments)},Ld=s._emscripten_bind_btMultiSphereShape_setLocalScaling_1=function(){return s.asm.Hm.apply(null,arguments)},Pd=s._emscripten_bind_btOverlappingPairCache___destroy___0=function(){return s.asm.Im.apply(null,arguments)},Rd=s._emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0=function(){return s.asm.Jm.apply(null,arguments)},Dd=s._emscripten_bind_btOverlappingPairCache_removeOverlappingPairsContainingProxy_2=function(){return s.asm.Km.apply(null,arguments)},Id=s._emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=function(){return s.asm.Lm.apply(null,arguments)},Od=s._emscripten_bind_btOverlappingPairCallback___destroy___0=function(){return s.asm.Mm.apply(null,arguments)},jd=s._emscripten_bind_btPairCachingGhostObject___destroy___0=function(){return s.asm.Nm.apply(null,arguments)},Bd=s._emscripten_bind_btPairCachingGhostObject_activate_0=function(){return s.asm.Om.apply(null,arguments)},Fd=s._emscripten_bind_btPairCachingGhostObject_activate_1=function(){return s.asm.Pm.apply(null,arguments)},Nd=s._emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=function(){return s.asm.Qm.apply(null,arguments)},Hd=s._emscripten_bind_btPairCachingGhostObject_forceActivationState_1=function(){return s.asm.Rm.apply(null,arguments)},Gd=s._emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0=function(){return s.asm.Sm.apply(null,arguments)},Ud=s._emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=function(){return s.asm.Tm.apply(null,arguments)},kd=s._emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=function(){return s.asm.Um.apply(null,arguments)},Vd=s._emscripten_bind_btPairCachingGhostObject_getFriction_0=function(){return s.asm.Vm.apply(null,arguments)},Wd=s._emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=function(){return s.asm.Wm.apply(null,arguments)},qd=s._emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=function(){return s.asm.Xm.apply(null,arguments)},Yd=s._emscripten_bind_btPairCachingGhostObject_getRestitution_0=function(){return s.asm.Ym.apply(null,arguments)},Xd=s._emscripten_bind_btPairCachingGhostObject_getRollingFriction_0=function(){return s.asm.Zm.apply(null,arguments)},Zd=s._emscripten_bind_btPairCachingGhostObject_getUserIndex_0=function(){return s.asm._m.apply(null,arguments)},Jd=s._emscripten_bind_btPairCachingGhostObject_getUserPointer_0=function(){return s.asm.$m.apply(null,arguments)},Qd=s._emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=function(){return s.asm.an.apply(null,arguments)},Kd=s._emscripten_bind_btPairCachingGhostObject_isActive_0=function(){return s.asm.bn.apply(null,arguments)},$d=s._emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=function(){return s.asm.cn.apply(null,arguments)},tf=s._emscripten_bind_btPairCachingGhostObject_isStaticObject_0=function(){return s.asm.dn.apply(null,arguments)},ef=s._emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0=function(){return s.asm.en.apply(null,arguments)},nf=s._emscripten_bind_btPairCachingGhostObject_setActivationState_1=function(){return s.asm.fn.apply(null,arguments)},rf=s._emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=function(){return s.asm.gn.apply(null,arguments)},of=s._emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=function(){return s.asm.hn.apply(null,arguments)},sf=s._emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=function(){return s.asm.jn.apply(null,arguments)},af=s._emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=function(){return s.asm.kn.apply(null,arguments)},cf=s._emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=function(){return s.asm.ln.apply(null,arguments)},lf=s._emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=function(){return s.asm.mn.apply(null,arguments)},pf=s._emscripten_bind_btPairCachingGhostObject_setFriction_1=function(){return s.asm.nn.apply(null,arguments)},uf=s._emscripten_bind_btPairCachingGhostObject_setRestitution_1=function(){return s.asm.on.apply(null,arguments)},hf=s._emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=function(){return s.asm.pn.apply(null,arguments)},df=s._emscripten_bind_btPairCachingGhostObject_setUserIndex_1=function(){return s.asm.qn.apply(null,arguments)},ff=s._emscripten_bind_btPairCachingGhostObject_setUserPointer_1=function(){return s.asm.rn.apply(null,arguments)},mf=s._emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=function(){return s.asm.sn.apply(null,arguments)},_f=s._emscripten_bind_btPersistentManifold___destroy___0=function(){return s.asm.tn.apply(null,arguments)},yf=s._emscripten_bind_btPersistentManifold_btPersistentManifold_0=function(){return s.asm.un.apply(null,arguments)},gf=s._emscripten_bind_btPersistentManifold_getBody0_0=function(){return s.asm.vn.apply(null,arguments)},bf=s._emscripten_bind_btPersistentManifold_getBody1_0=function(){return s.asm.wn.apply(null,arguments)},vf=s._emscripten_bind_btPersistentManifold_getContactPoint_1=function(){return s.asm.xn.apply(null,arguments)},xf=s._emscripten_bind_btPersistentManifold_getNumContacts_0=function(){return s.asm.yn.apply(null,arguments)},wf=s._emscripten_bind_btPoint2PointConstraint___destroy___0=function(){return s.asm.zn.apply(null,arguments)},Sf=s._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=function(){return s.asm.An.apply(null,arguments)},Mf=s._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=function(){return s.asm.Bn.apply(null,arguments)},Tf=s._emscripten_bind_btPoint2PointConstraint_enableFeedback_1=function(){return s.asm.Cn.apply(null,arguments)},Cf=s._emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=function(){return s.asm.Dn.apply(null,arguments)},zf=s._emscripten_bind_btPoint2PointConstraint_getParam_2=function(){return s.asm.En.apply(null,arguments)},Af=s._emscripten_bind_btPoint2PointConstraint_getPivotInA_0=function(){return s.asm.Fn.apply(null,arguments)},Ef=s._emscripten_bind_btPoint2PointConstraint_getPivotInB_0=function(){return s.asm.Gn.apply(null,arguments)},Lf=s._emscripten_bind_btPoint2PointConstraint_get_m_setting_0=function(){return s.asm.Hn.apply(null,arguments)},Pf=s._emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=function(){return s.asm.In.apply(null,arguments)},Rf=s._emscripten_bind_btPoint2PointConstraint_setParam_3=function(){return s.asm.Jn.apply(null,arguments)},Df=s._emscripten_bind_btPoint2PointConstraint_setPivotA_1=function(){return s.asm.Kn.apply(null,arguments)},If=s._emscripten_bind_btPoint2PointConstraint_setPivotB_1=function(){return s.asm.Ln.apply(null,arguments)},Of=s._emscripten_bind_btPoint2PointConstraint_set_m_setting_1=function(){return s.asm.Mn.apply(null,arguments)},jf=s._emscripten_bind_btQuadWord___destroy___0=function(){return s.asm.Nn.apply(null,arguments)},Bf=s._emscripten_bind_btQuadWord_setW_1=function(){return s.asm.On.apply(null,arguments)},Ff=s._emscripten_bind_btQuadWord_setX_1=function(){return s.asm.Pn.apply(null,arguments)},Nf=s._emscripten_bind_btQuadWord_setY_1=function(){return s.asm.Qn.apply(null,arguments)},Hf=s._emscripten_bind_btQuadWord_setZ_1=function(){return s.asm.Rn.apply(null,arguments)},Gf=s._emscripten_bind_btQuadWord_w_0=function(){return s.asm.Sn.apply(null,arguments)},Uf=s._emscripten_bind_btQuadWord_x_0=function(){return s.asm.Tn.apply(null,arguments)},kf=s._emscripten_bind_btQuadWord_y_0=function(){return s.asm.Un.apply(null,arguments)},Vf=s._emscripten_bind_btQuadWord_z_0=function(){return s.asm.Vn.apply(null,arguments)},Wf=s._emscripten_bind_btQuaternion___destroy___0=function(){return s.asm.Wn.apply(null,arguments)},qf=s._emscripten_bind_btQuaternion_angleShortestPath_1=function(){return s.asm.Xn.apply(null,arguments)},Yf=s._emscripten_bind_btQuaternion_angle_1=function(){return s.asm.Yn.apply(null,arguments)},Xf=s._emscripten_bind_btQuaternion_btQuaternion_4=function(){return s.asm.Zn.apply(null,arguments)},Zf=s._emscripten_bind_btQuaternion_dot_1=function(){return s.asm._n.apply(null,arguments)},Jf=s._emscripten_bind_btQuaternion_getAngleShortestPath_0=function(){return s.asm.$n.apply(null,arguments)},Qf=s._emscripten_bind_btQuaternion_getAngle_0=function(){return s.asm.ao.apply(null,arguments)},Kf=s._emscripten_bind_btQuaternion_getAxis_0=function(){return s.asm.bo.apply(null,arguments)},$f=s._emscripten_bind_btQuaternion_inverse_0=function(){return s.asm.co.apply(null,arguments)},tm=s._emscripten_bind_btQuaternion_length2_0=function(){return s.asm.eo.apply(null,arguments)},em=s._emscripten_bind_btQuaternion_length_0=function(){return s.asm.fo.apply(null,arguments)},nm=s._emscripten_bind_btQuaternion_normalize_0=function(){return s.asm.go.apply(null,arguments)},rm=s._emscripten_bind_btQuaternion_normalized_0=function(){return s.asm.ho.apply(null,arguments)},im=s._emscripten_bind_btQuaternion_op_add_1=function(){return s.asm.io.apply(null,arguments)},om=s._emscripten_bind_btQuaternion_op_div_1=function(){return s.asm.jo.apply(null,arguments)},sm=s._emscripten_bind_btQuaternion_op_mul_1=function(){return s.asm.ko.apply(null,arguments)},am=s._emscripten_bind_btQuaternion_op_mulq_1=function(){return s.asm.lo.apply(null,arguments)},cm=s._emscripten_bind_btQuaternion_op_sub_1=function(){return s.asm.mo.apply(null,arguments)},lm=s._emscripten_bind_btQuaternion_setEulerZYX_3=function(){return s.asm.no.apply(null,arguments)},pm=s._emscripten_bind_btQuaternion_setRotation_2=function(){return s.asm.oo.apply(null,arguments)},um=s._emscripten_bind_btQuaternion_setValue_4=function(){return s.asm.po.apply(null,arguments)},hm=s._emscripten_bind_btQuaternion_setW_1=function(){return s.asm.qo.apply(null,arguments)},dm=s._emscripten_bind_btQuaternion_setX_1=function(){return s.asm.ro.apply(null,arguments)},fm=s._emscripten_bind_btQuaternion_setY_1=function(){return s.asm.so.apply(null,arguments)},mm=s._emscripten_bind_btQuaternion_setZ_1=function(){return s.asm.to.apply(null,arguments)},_m=s._emscripten_bind_btQuaternion_w_0=function(){return s.asm.uo.apply(null,arguments)},ym=s._emscripten_bind_btQuaternion_x_0=function(){return s.asm.vo.apply(null,arguments)},gm=s._emscripten_bind_btQuaternion_y_0=function(){return s.asm.wo.apply(null,arguments)},bm=s._emscripten_bind_btQuaternion_z_0=function(){return s.asm.xo.apply(null,arguments)},vm=s._emscripten_bind_btRigidBodyConstructionInfo___destroy___0=function(){return s.asm.yo.apply(null,arguments)},xm=s._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=function(){return s.asm.zo.apply(null,arguments)},wm=s._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=function(){return s.asm.Ao.apply(null,arguments)},Sm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=function(){return s.asm.Bo.apply(null,arguments)},Mm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=function(){return s.asm.Co.apply(null,arguments)},Tm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=function(){return s.asm.Do.apply(null,arguments)},Cm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=function(){return s.asm.Eo.apply(null,arguments)},zm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=function(){return s.asm.Fo.apply(null,arguments)},Am=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=function(){return s.asm.Go.apply(null,arguments)},Em=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=function(){return s.asm.Ho.apply(null,arguments)},Lm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=function(){return s.asm.Io.apply(null,arguments)},Pm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=function(){return s.asm.Jo.apply(null,arguments)},Rm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=function(){return s.asm.Ko.apply(null,arguments)},Dm=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=function(){return s.asm.Lo.apply(null,arguments)},Im=s._emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=function(){return s.asm.Mo.apply(null,arguments)},Om=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=function(){return s.asm.No.apply(null,arguments)},jm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=function(){return s.asm.Oo.apply(null,arguments)},Bm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=function(){return s.asm.Po.apply(null,arguments)},Fm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=function(){return s.asm.Qo.apply(null,arguments)},Nm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=function(){return s.asm.Ro.apply(null,arguments)},Hm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=function(){return s.asm.So.apply(null,arguments)},Gm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=function(){return s.asm.To.apply(null,arguments)},Um=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=function(){return s.asm.Uo.apply(null,arguments)},km=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=function(){return s.asm.Vo.apply(null,arguments)},Vm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=function(){return s.asm.Wo.apply(null,arguments)},Wm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=function(){return s.asm.Xo.apply(null,arguments)},qm=s._emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=function(){return s.asm.Yo.apply(null,arguments)},Ym=s._emscripten_bind_btRigidBody___destroy___0=function(){return s.asm.Zo.apply(null,arguments)},Xm=s._emscripten_bind_btRigidBody_activate_0=function(){return s.asm._o.apply(null,arguments)},Zm=s._emscripten_bind_btRigidBody_activate_1=function(){return s.asm.$o.apply(null,arguments)},Jm=s._emscripten_bind_btRigidBody_applyCentralForce_1=function(){return s.asm.ap.apply(null,arguments)},Qm=s._emscripten_bind_btRigidBody_applyCentralImpulse_1=function(){return s.asm.bp.apply(null,arguments)},Km=s._emscripten_bind_btRigidBody_applyCentralLocalForce_1=function(){return s.asm.cp.apply(null,arguments)},$m=s._emscripten_bind_btRigidBody_applyForce_2=function(){return s.asm.dp.apply(null,arguments)},t_=s._emscripten_bind_btRigidBody_applyGravity_0=function(){return s.asm.ep.apply(null,arguments)},e_=s._emscripten_bind_btRigidBody_applyImpulse_2=function(){return s.asm.fp.apply(null,arguments)},n_=s._emscripten_bind_btRigidBody_applyLocalTorque_1=function(){return s.asm.gp.apply(null,arguments)},r_=s._emscripten_bind_btRigidBody_applyTorqueImpulse_1=function(){return s.asm.hp.apply(null,arguments)},i_=s._emscripten_bind_btRigidBody_applyTorque_1=function(){return s.asm.ip.apply(null,arguments)},o_=s._emscripten_bind_btRigidBody_btRigidBody_1=function(){return s.asm.jp.apply(null,arguments)},s_=s._emscripten_bind_btRigidBody_forceActivationState_1=function(){return s.asm.kp.apply(null,arguments)},a_=s._emscripten_bind_btRigidBody_getAabb_2=function(){return s.asm.lp.apply(null,arguments)},c_=s._emscripten_bind_btRigidBody_getAngularDamping_0=function(){return s.asm.mp.apply(null,arguments)},l_=s._emscripten_bind_btRigidBody_getAngularFactor_0=function(){return s.asm.np.apply(null,arguments)},p_=s._emscripten_bind_btRigidBody_getAngularVelocity_0=function(){return s.asm.op.apply(null,arguments)},u_=s._emscripten_bind_btRigidBody_getBroadphaseHandle_0=function(){return s.asm.pp.apply(null,arguments)},h_=s._emscripten_bind_btRigidBody_getBroadphaseProxy_0=function(){return s.asm.qp.apply(null,arguments)},d_=s._emscripten_bind_btRigidBody_getCenterOfMassTransform_0=function(){return s.asm.rp.apply(null,arguments)},f_=s._emscripten_bind_btRigidBody_getCollisionFlags_0=function(){return s.asm.sp.apply(null,arguments)},m_=s._emscripten_bind_btRigidBody_getCollisionShape_0=function(){return s.asm.tp.apply(null,arguments)},__=s._emscripten_bind_btRigidBody_getFlags_0=function(){return s.asm.up.apply(null,arguments)},y_=s._emscripten_bind_btRigidBody_getFriction_0=function(){return s.asm.vp.apply(null,arguments)},g_=s._emscripten_bind_btRigidBody_getGravity_0=function(){return s.asm.wp.apply(null,arguments)},b_=s._emscripten_bind_btRigidBody_getLinearDamping_0=function(){return s.asm.xp.apply(null,arguments)},v_=s._emscripten_bind_btRigidBody_getLinearFactor_0=function(){return s.asm.yp.apply(null,arguments)},x_=s._emscripten_bind_btRigidBody_getLinearVelocity_0=function(){return s.asm.zp.apply(null,arguments)},w_=s._emscripten_bind_btRigidBody_getMotionState_0=function(){return s.asm.Ap.apply(null,arguments)},S_=s._emscripten_bind_btRigidBody_getRestitution_0=function(){return s.asm.Bp.apply(null,arguments)},M_=s._emscripten_bind_btRigidBody_getRollingFriction_0=function(){return s.asm.Cp.apply(null,arguments)},T_=s._emscripten_bind_btRigidBody_getUserIndex_0=function(){return s.asm.Dp.apply(null,arguments)},C_=s._emscripten_bind_btRigidBody_getUserPointer_0=function(){return s.asm.Ep.apply(null,arguments)},z_=s._emscripten_bind_btRigidBody_getWorldTransform_0=function(){return s.asm.Fp.apply(null,arguments)},A_=s._emscripten_bind_btRigidBody_isActive_0=function(){return s.asm.Gp.apply(null,arguments)},E_=s._emscripten_bind_btRigidBody_isKinematicObject_0=function(){return s.asm.Hp.apply(null,arguments)},L_=s._emscripten_bind_btRigidBody_isStaticObject_0=function(){return s.asm.Ip.apply(null,arguments)},P_=s._emscripten_bind_btRigidBody_isStaticOrKinematicObject_0=function(){return s.asm.Jp.apply(null,arguments)},R_=s._emscripten_bind_btRigidBody_setActivationState_1=function(){return s.asm.Kp.apply(null,arguments)},D_=s._emscripten_bind_btRigidBody_setAngularFactor_1=function(){return s.asm.Lp.apply(null,arguments)},I_=s._emscripten_bind_btRigidBody_setAngularVelocity_1=function(){return s.asm.Mp.apply(null,arguments)},O_=s._emscripten_bind_btRigidBody_setAnisotropicFriction_2=function(){return s.asm.Np.apply(null,arguments)},j_=s._emscripten_bind_btRigidBody_setCcdMotionThreshold_1=function(){return s.asm.Op.apply(null,arguments)},B_=s._emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=function(){return s.asm.Pp.apply(null,arguments)},F_=s._emscripten_bind_btRigidBody_setCenterOfMassTransform_1=function(){return s.asm.Qp.apply(null,arguments)},N_=s._emscripten_bind_btRigidBody_setCollisionFlags_1=function(){return s.asm.Rp.apply(null,arguments)},H_=s._emscripten_bind_btRigidBody_setCollisionShape_1=function(){return s.asm.Sp.apply(null,arguments)},G_=s._emscripten_bind_btRigidBody_setContactProcessingThreshold_1=function(){return s.asm.Tp.apply(null,arguments)},U_=s._emscripten_bind_btRigidBody_setDamping_2=function(){return s.asm.Up.apply(null,arguments)},k_=s._emscripten_bind_btRigidBody_setFlags_1=function(){return s.asm.Vp.apply(null,arguments)},V_=s._emscripten_bind_btRigidBody_setFriction_1=function(){return s.asm.Wp.apply(null,arguments)},W_=s._emscripten_bind_btRigidBody_setGravity_1=function(){return s.asm.Xp.apply(null,arguments)},q_=s._emscripten_bind_btRigidBody_setLinearFactor_1=function(){return s.asm.Yp.apply(null,arguments)},Y_=s._emscripten_bind_btRigidBody_setLinearVelocity_1=function(){return s.asm.Zp.apply(null,arguments)},X_=s._emscripten_bind_btRigidBody_setMassProps_2=function(){return s.asm._p.apply(null,arguments)},Z_=s._emscripten_bind_btRigidBody_setMotionState_1=function(){return s.asm.$p.apply(null,arguments)},J_=s._emscripten_bind_btRigidBody_setRestitution_1=function(){return s.asm.aq.apply(null,arguments)},Q_=s._emscripten_bind_btRigidBody_setRollingFriction_1=function(){return s.asm.bq.apply(null,arguments)},K_=s._emscripten_bind_btRigidBody_setSleepingThresholds_2=function(){return s.asm.cq.apply(null,arguments)},$_=s._emscripten_bind_btRigidBody_setUserIndex_1=function(){return s.asm.dq.apply(null,arguments)},ty=s._emscripten_bind_btRigidBody_setUserPointer_1=function(){return s.asm.eq.apply(null,arguments)},ey=s._emscripten_bind_btRigidBody_setWorldTransform_1=function(){return s.asm.fq.apply(null,arguments)},ny=s._emscripten_bind_btRigidBody_upcast_1=function(){return s.asm.gq.apply(null,arguments)},ry=s._emscripten_bind_btRigidBody_updateInertiaTensor_0=function(){return s.asm.hq.apply(null,arguments)},iy=s._emscripten_bind_btScalarArray___destroy___0=function(){return s.asm.iq.apply(null,arguments)},oy=s._emscripten_bind_btScalarArray_at_1=function(){return s.asm.jq.apply(null,arguments)},sy=s._emscripten_bind_btScalarArray_size_0=function(){return s.asm.kq.apply(null,arguments)},ay=s._emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=function(){return s.asm.lq.apply(null,arguments)},cy=s._emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=function(){return s.asm.mq.apply(null,arguments)},ly=s._emscripten_bind_btShapeHull___destroy___0=function(){return s.asm.nq.apply(null,arguments)},py=s._emscripten_bind_btShapeHull_btShapeHull_1=function(){return s.asm.oq.apply(null,arguments)},uy=s._emscripten_bind_btShapeHull_buildHull_1=function(){return s.asm.pq.apply(null,arguments)},hy=s._emscripten_bind_btShapeHull_getVertexPointer_0=function(){return s.asm.qq.apply(null,arguments)},dy=s._emscripten_bind_btShapeHull_numVertices_0=function(){return s.asm.rq.apply(null,arguments)},fy=s._emscripten_bind_btSliderConstraint___destroy___0=function(){return s.asm.sq.apply(null,arguments)},my=s._emscripten_bind_btSliderConstraint_btSliderConstraint_3=function(){return s.asm.tq.apply(null,arguments)},_y=s._emscripten_bind_btSliderConstraint_btSliderConstraint_5=function(){return s.asm.uq.apply(null,arguments)},yy=s._emscripten_bind_btSliderConstraint_enableFeedback_1=function(){return s.asm.vq.apply(null,arguments)},gy=s._emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=function(){return s.asm.wq.apply(null,arguments)},by=s._emscripten_bind_btSliderConstraint_getParam_2=function(){return s.asm.xq.apply(null,arguments)},vy=s._emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=function(){return s.asm.yq.apply(null,arguments)},xy=s._emscripten_bind_btSliderConstraint_setLowerAngLimit_1=function(){return s.asm.zq.apply(null,arguments)},wy=s._emscripten_bind_btSliderConstraint_setLowerLinLimit_1=function(){return s.asm.Aq.apply(null,arguments)},Sy=s._emscripten_bind_btSliderConstraint_setParam_3=function(){return s.asm.Bq.apply(null,arguments)},My=s._emscripten_bind_btSliderConstraint_setUpperAngLimit_1=function(){return s.asm.Cq.apply(null,arguments)},Ty=s._emscripten_bind_btSliderConstraint_setUpperLinLimit_1=function(){return s.asm.Dq.apply(null,arguments)},Cy=s._emscripten_bind_btSphereShape___destroy___0=function(){return s.asm.Eq.apply(null,arguments)},zy=s._emscripten_bind_btSphereShape_btSphereShape_1=function(){return s.asm.Fq.apply(null,arguments)},Ay=s._emscripten_bind_btSphereShape_calculateLocalInertia_2=function(){return s.asm.Gq.apply(null,arguments)},Ey=s._emscripten_bind_btSphereShape_getLocalScaling_0=function(){return s.asm.Hq.apply(null,arguments)},Ly=s._emscripten_bind_btSphereShape_getMargin_0=function(){return s.asm.Iq.apply(null,arguments)},Py=s._emscripten_bind_btSphereShape_setLocalScaling_1=function(){return s.asm.Jq.apply(null,arguments)},Ry=s._emscripten_bind_btSphereShape_setMargin_1=function(){return s.asm.Kq.apply(null,arguments)},Dy=s._emscripten_bind_btStaticPlaneShape___destroy___0=function(){return s.asm.Lq.apply(null,arguments)},Iy=s._emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=function(){return s.asm.Mq.apply(null,arguments)},Oy=s._emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=function(){return s.asm.Nq.apply(null,arguments)},jy=s._emscripten_bind_btStaticPlaneShape_getLocalScaling_0=function(){return s.asm.Oq.apply(null,arguments)},By=s._emscripten_bind_btStaticPlaneShape_setLocalScaling_1=function(){return s.asm.Pq.apply(null,arguments)},Fy=s._emscripten_bind_btStridingMeshInterface___destroy___0=function(){return s.asm.Qq.apply(null,arguments)},Ny=s._emscripten_bind_btStridingMeshInterface_setScaling_1=function(){return s.asm.Rq.apply(null,arguments)},Hy=s._emscripten_bind_btTransform___destroy___0=function(){return s.asm.Sq.apply(null,arguments)},Gy=s._emscripten_bind_btTransform_btTransform_0=function(){return s.asm.Tq.apply(null,arguments)},Uy=s._emscripten_bind_btTransform_btTransform_2=function(){return s.asm.Uq.apply(null,arguments)},ky=s._emscripten_bind_btTransform_getBasis_0=function(){return s.asm.Vq.apply(null,arguments)},Vy=s._emscripten_bind_btTransform_getOrigin_0=function(){return s.asm.Wq.apply(null,arguments)},Wy=s._emscripten_bind_btTransform_getRotation_0=function(){return s.asm.Xq.apply(null,arguments)},qy=s._emscripten_bind_btTransform_inverse_0=function(){return s.asm.Yq.apply(null,arguments)},Yy=s._emscripten_bind_btTransform_op_mul_1=function(){return s.asm.Zq.apply(null,arguments)},Xy=s._emscripten_bind_btTransform_setFromOpenGLMatrix_1=function(){return s.asm._q.apply(null,arguments)},Zy=s._emscripten_bind_btTransform_setIdentity_0=function(){return s.asm.$q.apply(null,arguments)},Jy=s._emscripten_bind_btTransform_setOrigin_1=function(){return s.asm.ar.apply(null,arguments)},Qy=s._emscripten_bind_btTransform_setRotation_1=function(){return s.asm.br.apply(null,arguments)},Ky=s._emscripten_bind_btTriangleMeshShape___destroy___0=function(){return s.asm.cr.apply(null,arguments)},$y=s._emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=function(){return s.asm.dr.apply(null,arguments)},tg=s._emscripten_bind_btTriangleMeshShape_getLocalScaling_0=function(){return s.asm.er.apply(null,arguments)},eg=s._emscripten_bind_btTriangleMeshShape_setLocalScaling_1=function(){return s.asm.fr.apply(null,arguments)},ng=s._emscripten_bind_btTriangleMesh___destroy___0=function(){return s.asm.gr.apply(null,arguments)},rg=s._emscripten_bind_btTriangleMesh_addIndex_1=function(){return s.asm.hr.apply(null,arguments)},ig=s._emscripten_bind_btTriangleMesh_addTriangle_3=function(){return s.asm.ir.apply(null,arguments)},og=s._emscripten_bind_btTriangleMesh_addTriangle_4=function(){return s.asm.jr.apply(null,arguments)},sg=s._emscripten_bind_btTriangleMesh_btTriangleMesh_0=function(){return s.asm.kr.apply(null,arguments)},ag=s._emscripten_bind_btTriangleMesh_btTriangleMesh_1=function(){return s.asm.lr.apply(null,arguments)},cg=s._emscripten_bind_btTriangleMesh_btTriangleMesh_2=function(){return s.asm.mr.apply(null,arguments)},lg=s._emscripten_bind_btTriangleMesh_findOrAddVertex_2=function(){return s.asm.nr.apply(null,arguments)},pg=s._emscripten_bind_btTriangleMesh_getIndexedMeshArray_0=function(){return s.asm.or.apply(null,arguments)},ug=s._emscripten_bind_btTriangleMesh_setScaling_1=function(){return s.asm.pr.apply(null,arguments)},hg=s._emscripten_bind_btTypedConstraint___destroy___0=function(){return s.asm.qr.apply(null,arguments)},dg=s._emscripten_bind_btTypedConstraint_enableFeedback_1=function(){return s.asm.rr.apply(null,arguments)},fg=s._emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=function(){return s.asm.sr.apply(null,arguments)},mg=s._emscripten_bind_btTypedConstraint_getParam_2=function(){return s.asm.tr.apply(null,arguments)},_g=s._emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=function(){return s.asm.ur.apply(null,arguments)},yg=s._emscripten_bind_btTypedConstraint_setParam_3=function(){return s.asm.vr.apply(null,arguments)},gg=s._emscripten_bind_btVector3Array___destroy___0=function(){return s.asm.wr.apply(null,arguments)},bg=s._emscripten_bind_btVector3Array_at_1=function(){return s.asm.xr.apply(null,arguments)},vg=s._emscripten_bind_btVector3Array_size_0=function(){return s.asm.yr.apply(null,arguments)},xg=s._emscripten_bind_btVector3___destroy___0=function(){return s.asm.zr.apply(null,arguments)},wg=s._emscripten_bind_btVector3_btVector3_0=function(){return s.asm.Ar.apply(null,arguments)},Sg=s._emscripten_bind_btVector3_btVector3_3=function(){return s.asm.Br.apply(null,arguments)},Mg=s._emscripten_bind_btVector3_dot_1=function(){return s.asm.Cr.apply(null,arguments)},Tg=s._emscripten_bind_btVector3_length2_0=function(){return s.asm.Dr.apply(null,arguments)},Cg=s._emscripten_bind_btVector3_length_0=function(){return s.asm.Er.apply(null,arguments)},zg=s._emscripten_bind_btVector3_normalize_0=function(){return s.asm.Fr.apply(null,arguments)},Ag=s._emscripten_bind_btVector3_op_add_1=function(){return s.asm.Gr.apply(null,arguments)},Eg=s._emscripten_bind_btVector3_op_mul_1=function(){return s.asm.Hr.apply(null,arguments)},Lg=s._emscripten_bind_btVector3_op_sub_1=function(){return s.asm.Ir.apply(null,arguments)},Pg=s._emscripten_bind_btVector3_rotate_2=function(){return s.asm.Jr.apply(null,arguments)},Rg=s._emscripten_bind_btVector3_setValue_3=function(){return s.asm.Kr.apply(null,arguments)},Dg=s._emscripten_bind_btVector3_setX_1=function(){return s.asm.Lr.apply(null,arguments)},Ig=s._emscripten_bind_btVector3_setY_1=function(){return s.asm.Mr.apply(null,arguments)},Og=s._emscripten_bind_btVector3_setZ_1=function(){return s.asm.Nr.apply(null,arguments)},jg=s._emscripten_bind_btVector3_x_0=function(){return s.asm.Or.apply(null,arguments)},Bg=s._emscripten_bind_btVector3_y_0=function(){return s.asm.Pr.apply(null,arguments)},Fg=s._emscripten_bind_btVector3_z_0=function(){return s.asm.Qr.apply(null,arguments)},Ng=s._emscripten_bind_btVector4___destroy___0=function(){return s.asm.Rr.apply(null,arguments)},Hg=s._emscripten_bind_btVector4_btVector4_0=function(){return s.asm.Sr.apply(null,arguments)},Gg=s._emscripten_bind_btVector4_btVector4_4=function(){return s.asm.Tr.apply(null,arguments)},Ug=s._emscripten_bind_btVector4_dot_1=function(){return s.asm.Ur.apply(null,arguments)},kg=s._emscripten_bind_btVector4_length2_0=function(){return s.asm.Vr.apply(null,arguments)},Vg=s._emscripten_bind_btVector4_length_0=function(){return s.asm.Wr.apply(null,arguments)},Wg=s._emscripten_bind_btVector4_normalize_0=function(){return s.asm.Xr.apply(null,arguments)},qg=s._emscripten_bind_btVector4_op_add_1=function(){return s.asm.Yr.apply(null,arguments)},Yg=s._emscripten_bind_btVector4_op_mul_1=function(){return s.asm.Zr.apply(null,arguments)},Xg=s._emscripten_bind_btVector4_op_sub_1=function(){return s.asm._r.apply(null,arguments)},Zg=s._emscripten_bind_btVector4_rotate_2=function(){return s.asm.$r.apply(null,arguments)},Jg=s._emscripten_bind_btVector4_setValue_4=function(){return s.asm.as.apply(null,arguments)},Qg=s._emscripten_bind_btVector4_setX_1=function(){return s.asm.bs.apply(null,arguments)},Kg=s._emscripten_bind_btVector4_setY_1=function(){return s.asm.cs.apply(null,arguments)},$g=s._emscripten_bind_btVector4_setZ_1=function(){return s.asm.ds.apply(null,arguments)},tb=s._emscripten_bind_btVector4_w_0=function(){return s.asm.es.apply(null,arguments)},eb=s._emscripten_bind_btVector4_x_0=function(){return s.asm.fs.apply(null,arguments)},nb=s._emscripten_bind_btVector4_y_0=function(){return s.asm.gs.apply(null,arguments)},rb=s._emscripten_bind_btVector4_z_0=function(){return s.asm.hs.apply(null,arguments)},ib=s._emscripten_enum_PHY_ScalarType_PHY_DOUBLE=function(){return s.asm.is.apply(null,arguments)},ob=s._emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=function(){return s.asm.js.apply(null,arguments)},sb=s._emscripten_enum_PHY_ScalarType_PHY_FLOAT=function(){return s.asm.ks.apply(null,arguments)},ab=s._emscripten_enum_PHY_ScalarType_PHY_INTEGER=function(){return s.asm.ls.apply(null,arguments)},cb=s._emscripten_enum_PHY_ScalarType_PHY_SHORT=function(){return s.asm.ms.apply(null,arguments)},lb=s._emscripten_enum_PHY_ScalarType_PHY_UCHAR=function(){return s.asm.ns.apply(null,arguments)},pb=s._emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM=function(){return s.asm.os.apply(null,arguments)},ub=s._emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP=function(){return s.asm.ps.apply(null,arguments)},hb=s._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM=function(){return s.asm.qs.apply(null,arguments)},db=s._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP=function(){return s.asm.rs.apply(null,arguments)},fb=s._free=function(){return s.asm.ss.apply(null,arguments)},mb=s._malloc=function(){return s.asm.ts.apply(null,arguments)},_b=s.globalCtors=function(){return s.asm.ws.apply(null,arguments)},yb=s.stackRestore=function(){return s.asm.xs.apply(null,arguments)},gb=s.stackSave=function(){return s.asm.ys.apply(null,arguments)};function bb(){function t(){if(!Tt&&(Tt=!0,!M)){if(W=!0,H(U),H(k),s.onRuntimeInitialized&&s.onRuntimeInitialized(),s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;){var t=s.postRun.shift();V.unshift(t)}H(V)}}if(!(0<Z)){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)q();H(G),0<Z||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),t()}),1)):t())}}if(s.dynCall_v=function(){return s.asm.us.apply(null,arguments)},s.dynCall_vi=function(){return s.asm.vs.apply(null,arguments)},s.asm=Mt,s.UTF8ToString=I,s.then=function(t){if(Tt)t(s);else{var e=s.onRuntimeInitialized;s.onRuntimeInitialized=function(){e&&e(),t(s)}}return s},Q=function t(){Tt||bb(),Tt||(Q=t)},s.run=bb,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();function vb(){}function xb(t){return(t||vb).Bs}function wb(t,e){var n=xb(e),r=n[t];return r||((r=Object.create((e||vb).prototype)).zs=t,n[t]=r)}function Sb(t){if("string"==typeof t){t=wt(t);var e=o.Vs(t,z);return o.copy(t,z,e),e}return t}function Mb(t){if("object"==typeof t){var e=o.Vs(t,L);return o.copy(t,L,e),e}return t}function Tb(){throw"cannot construct a btCollisionShape, no constructor in IDL"}function Cb(){throw"cannot construct a btCollisionObject, no constructor in IDL"}function zb(){throw"cannot construct a btTypedConstraint, no constructor in IDL"}function Ab(){throw"cannot construct a btCollisionWorld, no constructor in IDL"}function Eb(){throw"cannot construct a btConcaveShape, no constructor in IDL"}function Lb(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=Fi(t,e),xb(Lb)[this.zs]=this}function Pb(){throw"cannot construct a btIDebugDraw, no constructor in IDL"}function Rb(){throw"cannot construct a btDynamicsWorld, no constructor in IDL"}function Db(){throw"cannot construct a btTriangleMeshShape, no constructor in IDL"}function Ib(){this.zs=du(),xb(Ib)[this.zs]=this}function Ob(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=Ds(t,e),xb(Ob)[this.zs]=this}function jb(){throw"cannot construct a btActionInterface, no constructor in IDL"}function Bb(t,e,n){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),this.zs=void 0===t?wg():void 0===e?_emscripten_bind_btVector3_btVector3_1(t):void 0===n?_emscripten_bind_btVector3_btVector3_2(t,e):Sg(t,e,n),xb(Bb)[this.zs]=this}function Fb(){throw"cannot construct a btQuadWord, no constructor in IDL"}function Nb(t){t&&"object"==typeof t&&(t=t.zs),this.zs=dc(t),xb(Nb)[this.zs]=this}function Hb(){throw"cannot construct a btConvexShape, no constructor in IDL"}function Gb(){throw"cannot construct a btDispatcher, no constructor in IDL"}function Ub(t,e,n,r,i){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),this.zs=void 0===r?Dp(t,e,n):void 0===i?_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(t,e,n,r):Ip(t,e,n,r,i),xb(Ub)[this.zs]=this}function kb(){throw"cannot construct a btStridingMeshInterface, no constructor in IDL"}function Vb(){throw"cannot construct a btMotionState, no constructor in IDL"}function Wb(){throw"cannot construct a ConvexResultCallback, no constructor in IDL"}function qb(){throw"cannot construct a ContactResultCallback, no constructor in IDL"}function Yb(){throw"cannot construct a RayResultCallback, no constructor in IDL"}function Xb(){throw"cannot construct a btMatrix3x3, no constructor in IDL"}function Zb(){throw"cannot construct a btScalarArray, no constructor in IDL"}function Jb(){throw"cannot construct a btDispatcherInfo, no constructor in IDL"}function Qb(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=void 0===e?Wa(t):qa(t,e),xb(Qb)[this.zs]=this}function Kb(){throw"cannot construct a btBroadphaseInterface, no constructor in IDL"}function $b(t){t&&"object"==typeof t&&(t=t.zs),this.zs=void 0===t?Sc():Mc(t),xb($b)[this.zs]=this}function tv(t,e,n,r){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),this.zs=void 0===r?xm(t,e,n):wm(t,e,n,r),xb(tv)[this.zs]=this}function ev(){throw"cannot construct a btCollisionConfiguration, no constructor in IDL"}function nv(){this.zs=yf(),xb(nv)[this.zs]=this}function rv(t){t&&"object"==typeof t&&(t=t.zs),this.zs=void 0===t?os():ss(t),xb(rv)[this.zs]=this}function iv(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=Jt(t,e),xb(iv)[this.zs]=this}function ov(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=zt(t,e),xb(ov)[this.zs]=this}function sv(){this.zs=Pr(),xb(sv)[this.zs]=this}function av(){this.zs=dp(),xb(av)[this.zs]=this}function cv(){this.zs=ra(),xb(cv)[this.zs]=this}function lv(){throw"cannot construct a LocalShapeInfo, no constructor in IDL"}function pv(t){t&&"object"==typeof t&&(t=t.zs),this.zs=o_(t),xb(pv)[this.zs]=this}function uv(){throw"cannot construct a btIndexedMeshArray, no constructor in IDL"}function hv(){this.zs=vc(),xb(hv)[this.zs]=this}function dv(t,e,n,r,i,o,s,a,c){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),o&&"object"==typeof o&&(o=o.zs),s&&"object"==typeof s&&(s=s.zs),a&&"object"==typeof a&&(a=a.zs),c&&"object"==typeof c&&(c=c.zs),this.zs=qu(t,e,n,r,i,o,s,a,c),xb(dv)[this.zs]=this}function fv(){this.zs=Nn(),xb(fv)[this.zs]=this}function mv(t){t&&"object"==typeof t&&(t=t.zs),this.zs=Zi(t),xb(mv)[this.zs]=this}function _v(t,e,n,r,i){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),this.zs=void 0===n?Yr(t,e):void 0===r?Xr(t,e,n):void 0===i?Zr(t,e,n,r):Jr(t,e,n,r,i),xb(_v)[this.zs]=this}function yv(){this.zs=un(),xb(yv)[this.zs]=this}function gv(){throw"cannot construct a VoidPtr, no constructor in IDL"}function bv(t,e,n,r){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),this.zs=void 0===n?Fs(t,e):void 0===r?_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(t,e,n):Ns(t,e,n,r),xb(bv)[this.zs]=this}function vv(t,e,n,r,i,o,s){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),o&&"object"==typeof o&&(o=o.zs),s&&"object"==typeof s&&(s=s.zs),this.zs=void 0===n?$u(t,e):void 0===r?th(t,e,n):void 0===i?eh(t,e,n,r):void 0===o?nh(t,e,n,r,i):void 0===s?rh(t,e,n,r,i,o):ih(t,e,n,r,i,o,s),xb(vv)[this.zs]=this}function xv(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=As(t,e),xb(xv)[this.zs]=this}function wv(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=Ss(t,e),xb(wv)[this.zs]=this}function Sv(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=void 0===t?sg():void 0===e?ag(t):cg(t,e),xb(Sv)[this.zs]=this}function Mv(t,e){o.Is(),"object"==typeof t&&(t=Mb(t)),e&&"object"==typeof e&&(e=e.zs),this.zs=void 0===t?xa():void 0===e?wa(t):Sa(t,e),xb(Mv)[this.zs]=this}function Tv(){throw"cannot construct a btCollisionObjectWrapper, no constructor in IDL"}function Cv(t){t&&"object"==typeof t&&(t=t.zs),this.zs=py(t),xb(Cv)[this.zs]=this}function zv(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=void 0===t?Ac():void 0===e?Ec(t):Lc(t,e),xb(zv)[this.zs]=this}function Av(t,e,n,r){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),this.zs=void 0===t?Hg():void 0===e?_emscripten_bind_btVector4_btVector4_1(t):void 0===n?_emscripten_bind_btVector4_btVector4_2(t,e):void 0===r?_emscripten_bind_btVector4_btVector4_3(t,e,n):Gg(t,e,n,r),xb(Av)[this.zs]=this}function Ev(){this.zs=Cc(),xb(Ev)[this.zs]=this}function Lv(){throw"cannot construct a btVector3Array, no constructor in IDL"}function Pv(){throw"cannot construct a btConstraintSolver, no constructor in IDL"}function Rv(t){t&&"object"==typeof t&&(t=t.zs),this.zs=$a(t),xb(Rv)[this.zs]=this}function Dv(t){t&&"object"==typeof t&&(t=t.zs),this.zs=sc(t),xb(Dv)[this.zs]=this}function Iv(){throw"cannot construct a btConvexPolyhedron, no constructor in IDL"}function Ov(){this.zs=cy(),xb(Ov)[this.zs]=this}function jv(t,e,n){o.Is(),t&&"object"==typeof t&&(t=t.zs),"object"==typeof e&&(e=Mb(e)),n&&"object"==typeof n&&(n=n.zs),this.zs=zd(t,e,n),xb(jv)[this.zs]=this}function Bv(){throw"cannot construct a btIntArray, no constructor in IDL"}function Fv(t,e,n,r){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),this.zs=Vc(t,e,n,r),xb(Fv)[this.zs]=this}function Nv(){this.zs=Vu(),xb(Nv)[this.zs]=this}function Hv(){throw"cannot construct a btOverlappingPairCallback, no constructor in IDL"}function Gv(t,e,n,r){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),this.zs=void 0===r?Ih(t,e,n):Oh(t,e,n,r),xb(Gv)[this.zs]=this}function Uv(){throw"cannot construct a btFaceArray, no constructor in IDL"}function kv(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=Iy(t,e),xb(kv)[this.zs]=this}function Vv(){throw"cannot construct a btOverlappingPairCache, no constructor in IDL"}function Wv(){throw"cannot construct a btIndexedMesh, no constructor in IDL"}function qv(t,e,n){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),this.zs=Fr(t,e,n),xb(qv)[this.zs]=this}function Yv(t,e,n,r){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),this.zs=Cp(t,e,n,r),xb(Yv)[this.zs]=this}function Xv(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=void 0===t?Gy():void 0===e?_emscripten_bind_btTransform_btTransform_1(t):Uy(t,e),xb(Xv)[this.zs]=this}function Zv(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=de(t,e),xb(Zv)[this.zs]=this}function Jv(){this.zs=Re(),xb(Jv)[this.zs]=this}function Qv(t,e,n){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),this.zs=void 0===n?hi(t,e):di(t,e,n),xb(Qv)[this.zs]=this}function Kv(t,e,n){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),this.zs=Dr(t,e,n),xb(Kv)[this.zs]=this}function $v(){throw"cannot construct a btConstCollisionObjectArray, no constructor in IDL"}function tx(t,e,n,r,i){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),this.zs=void 0===r?my(t,e,n):void 0===i?_emscripten_bind_btSliderConstraint_btSliderConstraint_4(t,e,n,r):_y(t,e,n,r,i),xb(tx)[this.zs]=this}function ex(){this.zs=Nd(),xb(ex)[this.zs]=this}function nx(){throw"cannot construct a btManifoldPoint, no constructor in IDL"}function rx(t,e,n,r){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),this.zs=void 0===n?Sf(t,e):void 0===r?_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(t,e,n):Mf(t,e,n,r),xb(rx)[this.zs]=this}function ix(){throw"cannot construct a btBroadphaseProxy, no constructor in IDL"}function ox(t){t&&"object"==typeof t&&(t=t.zs),this.zs=Kr(t),xb(ox)[this.zs]=this}function sx(){throw"cannot construct a btFace, no constructor in IDL"}function ax(){this.zs=Qe(),xb(ax)[this.zs]=this}function cx(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=gi(t,e),xb(cx)[this.zs]=this}function lx(t,e,n,r){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),this.zs=Xf(t,e,n,r),xb(lx)[this.zs]=this}function px(t,e){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),this.zs=Ai(t,e),xb(px)[this.zs]=this}function ux(){throw"cannot construct a btContactSolverInfo, no constructor in IDL"}function hx(t,e,n,r,i){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),this.zs=void 0===r?qp(t,e,n):void 0===i?_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(t,e,n,r):Yp(t,e,n,r,i),xb(hx)[this.zs]=this}function dx(t){t&&"object"==typeof t&&(t=t.zs),this.zs=zy(t),xb(dx)[this.zs]=this}function fx(){this.zs=Be(),xb(fx)[this.zs]=this}function mx(t,e,n,r,i){t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),this.zs=wn(t,e,n,r,i),xb(mx)[this.zs]=this}return bb(),vb.prototype=Object.create(vb.prototype),vb.prototype.constructor=vb,vb.prototype.As=vb,vb.Bs={},s.WrapperObject=vb,s.getCache=xb,s.wrapPointer=wb,s.castObject=function(t,e){return wb(t.zs,e)},s.NULL=wb(0),s.destroy=function(t){if(!t.__destroy__)throw"Error: Cannot destroy object. (Did you create it yourself?)";t.__destroy__(),delete xb(t.As)[t.zs]},s.compare=function(t,e){return t.zs===e.zs},s.getPointer=function(t){return t.zs},s.getClass=function(t){return t.As},o={buffer:0,size:0,Qs:0,Ws:[],Ps:0,Is:function(){if(o.Ps){for(var t=0;t<o.Ws.length;t++)s._free(o.Ws[t]);o.Ws.length=0,s._free(o.buffer),o.buffer=0,o.size+=o.Ps,o.Ps=0}o.buffer||(o.size+=128,o.buffer=s._malloc(o.size),T(o.buffer)),o.Qs=0},Vs:function(t,e){return T(o.buffer),t=7+(t=t.length*e.BYTES_PER_ELEMENT)&-8,o.Qs+t>=o.size?(T(0<t),o.Ps+=t,e=s._malloc(t),o.Ws.push(e)):(e=o.buffer+o.Qs,o.Qs+=t),e},copy:function(t,e,n){switch(e.BYTES_PER_ELEMENT){case 2:n>>=1;break;case 4:n>>=2;break;case 8:n>>=3}for(var r=0;r<t.length;r++)e[n+r]=t[r]}},Tb.prototype=Object.create(vb.prototype),Tb.prototype.constructor=Tb,Tb.prototype.As=Tb,Tb.Bs={},s.btCollisionShape=Tb,Tb.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),jo(e,t)},Tb.prototype.getLocalScaling=function(){return wb(Io(this.zs),Bb)},Tb.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Do(n,t,e)},Tb.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Bo(e,t)},Tb.prototype.getMargin=function(){return Oo(this.zs)},Tb.prototype.__destroy__=function(){Ro(this.zs)},Cb.prototype=Object.create(vb.prototype),Cb.prototype.constructor=Cb,Cb.prototype.As=Cb,Cb.Bs={},s.btCollisionObject=Cb,Cb.prototype.setAnisotropicFriction=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),vo(n,t,e)},Cb.prototype.getCollisionShape=function(){return wb(ao(this.zs),Tb)},Cb.prototype.setContactProcessingThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),To(e,t)},Cb.prototype.setActivationState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),bo(e,t)},Cb.prototype.forceActivationState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),io(e,t)},Cb.prototype.activate=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),void 0===t?no(e):ro(e,t)},Cb.prototype.isActive=function(){return!!mo(this.zs)},Cb.prototype.isKinematicObject=function(){return!!_o(this.zs)},Cb.prototype.isStaticObject=function(){return!!yo(this.zs)},Cb.prototype.isStaticOrKinematicObject=function(){return!!go(this.zs)},Cb.prototype.getRestitution=function(){return lo(this.zs)},Cb.prototype.getFriction=function(){return co(this.zs)},Cb.prototype.getRollingFriction=function(){return po(this.zs)},Cb.prototype.setRestitution=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),zo(e,t)},Cb.prototype.setFriction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Co(e,t)},Cb.prototype.setRollingFriction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ao(e,t)},Cb.prototype.getWorldTransform=function(){return wb(fo(this.zs),Xv)},Cb.prototype.getCollisionFlags=function(){return so(this.zs)},Cb.prototype.setCollisionFlags=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),So(e,t)},Cb.prototype.setWorldTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Po(e,t)},Cb.prototype.setCollisionShape=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Mo(e,t)},Cb.prototype.setCcdMotionThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),xo(e,t)},Cb.prototype.setCcdSweptSphereRadius=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),wo(e,t)},Cb.prototype.getUserIndex=function(){return uo(this.zs)},Cb.prototype.setUserIndex=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Eo(e,t)},Cb.prototype.getUserPointer=function(){return wb(ho(this.zs),gv)},Cb.prototype.setUserPointer=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Lo(e,t)},Cb.prototype.getBroadphaseHandle=function(){return wb(oo(this.zs),ix)},Cb.prototype.__destroy__=function(){eo(this.zs)},zb.prototype=Object.create(vb.prototype),zb.prototype.constructor=zb,zb.prototype.As=zb,zb.Bs={},s.btTypedConstraint=zb,zb.prototype.enableFeedback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),dg(e,t)},zb.prototype.getBreakingImpulseThreshold=function(){return fg(this.zs)},zb.prototype.setBreakingImpulseThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),_g(e,t)},zb.prototype.getParam=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),mg(n,t,e)},zb.prototype.setParam=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),yg(r,t,e,n)},zb.prototype.__destroy__=function(){hg(this.zs)},Ab.prototype=Object.create(vb.prototype),Ab.prototype.constructor=Ab,Ab.prototype.As=Ab,Ab.Bs={},s.btCollisionWorld=Ab,Ab.prototype.getDispatcher=function(){return wb(Jo(this.zs),Gb)},Ab.prototype.rayTest=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Ko(r,t,e,n)},Ab.prototype.getPairCache=function(){return wb(Qo(this.zs),Vv)},Ab.prototype.getDispatchInfo=function(){return wb(Zo(this.zs),Jb)},Ab.prototype.addCollisionObject=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),void 0===e?No(r,t):void 0===n?Ho(r,t,e):Go(r,t,e,n)},Ab.prototype.removeCollisionObject=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),$o(e,t)},Ab.prototype.getBroadphase=function(){return wb(Yo(this.zs),Kb)},Ab.prototype.convexSweepTest=function(t,e,n,r,i){var o=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),Vo(o,t,e,n,r,i)},Ab.prototype.contactPairTest=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Uo(r,t,e,n)},Ab.prototype.contactTest=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),ko(n,t,e)},Ab.prototype.setForceUpdateAllAabbs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),es(e,t)},Ab.prototype.updateSingleAabb=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ns(e,t)},Ab.prototype.setDebugDrawer=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ts(e,t)},Ab.prototype.getDebugDrawer=function(){return wb(Xo(this.zs),Pb)},Ab.prototype.debugDrawWorld=function(){qo(this.zs)},Ab.prototype.debugDrawObject=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Wo(r,t,e,n)},Ab.prototype.__destroy__=function(){Fo(this.zs)},Eb.prototype=Object.create(Tb.prototype),Eb.prototype.constructor=Eb,Eb.prototype.As=Eb,Eb.Bs={},s.btConcaveShape=Eb,Eb.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),xs(e,t)},Eb.prototype.getLocalScaling=function(){return wb(vs(this.zs),Bb)},Eb.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),bs(n,t,e)},Eb.prototype.__destroy__=function(){gs(this.zs)},Lb.prototype=Object.create(Tb.prototype),Lb.prototype.constructor=Lb,Lb.prototype.As=Lb,Lb.Bs={},s.btCapsuleShape=Lb,Lb.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),qi(e,t)},Lb.prototype.getMargin=function(){return Ui(this.zs)},Lb.prototype.getUpAxis=function(){return Vi(this.zs)},Lb.prototype.getRadius=function(){return ki(this.zs)},Lb.prototype.getHalfHeight=function(){return Hi(this.zs)},Lb.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Wi(e,t)},Lb.prototype.getLocalScaling=function(){return wb(Gi(this.zs),Bb)},Lb.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ni(n,t,e)},Lb.prototype.__destroy__=function(){Bi(this.zs)},Pb.prototype=Object.create(vb.prototype),Pb.prototype.constructor=Pb,Pb.prototype.As=Pb,Pb.Bs={},s.btIDebugDraw=Pb,Pb.prototype.drawLine=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),vh(r,t,e,n)},Pb.prototype.drawContactPoint=function(t,e,n,r,i){var o=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),bh(o,t,e,n,r,i)},Pb.prototype.reportErrorWarning=function(t){var e=this.zs;o.Is(),t=t&&"object"==typeof t?t.zs:Sb(t),wh(e,t)},Pb.prototype.draw3dText=function(t,e){var n=this.zs;o.Is(),t&&"object"==typeof t&&(t=t.zs),e=e&&"object"==typeof e?e.zs:Sb(e),gh(n,t,e)},Pb.prototype.setDebugMode=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Sh(e,t)},Pb.prototype.getDebugMode=function(){return xh(this.zs)},Pb.prototype.__destroy__=function(){yh(this.zs)},Rb.prototype=Object.create(Ab.prototype),Rb.prototype.constructor=Rb,Rb.prototype.As=Rb,Rb.Bs={},s.btDynamicsWorld=Rb,Rb.prototype.addAction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Wl(e,t)},Rb.prototype.removeAction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ap(e,t)},Rb.prototype.getSolverInfo=function(){return wb(op(this.zs),ux)},Rb.prototype.getDispatcher=function(){return wb(rp(this.zs),Gb)},Rb.prototype.rayTest=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),sp(r,t,e,n)},Rb.prototype.getPairCache=function(){return wb(ip(this.zs),Vv)},Rb.prototype.getDispatchInfo=function(){return wb(np(this.zs),Jb)},Rb.prototype.addCollisionObject=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),void 0===e?ql(r,t):void 0===n?Yl(r,t,e):Xl(r,t,e,n)},Rb.prototype.removeCollisionObject=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),cp(e,t)},Rb.prototype.getBroadphase=function(){return wb(tp(this.zs),Kb)},Rb.prototype.convexSweepTest=function(t,e,n,r,i){var o=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),Ql(o,t,e,n,r,i)},Rb.prototype.contactPairTest=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Zl(r,t,e,n)},Rb.prototype.contactTest=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Jl(n,t,e)},Rb.prototype.setForceUpdateAllAabbs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),pp(e,t)},Rb.prototype.updateSingleAabb=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),up(e,t)},Rb.prototype.setDebugDrawer=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),lp(e,t)},Rb.prototype.getDebugDrawer=function(){return wb(ep(this.zs),Pb)},Rb.prototype.debugDrawWorld=function(){$l(this.zs)},Rb.prototype.debugDrawObject=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Kl(r,t,e,n)},Rb.prototype.__destroy__=function(){Vl(this.zs)},Db.prototype=Object.create(Eb.prototype),Db.prototype.constructor=Db,Db.prototype.As=Db,Db.Bs={},s.btTriangleMeshShape=Db,Db.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),eg(e,t)},Db.prototype.getLocalScaling=function(){return wb(tg(this.zs),Bb)},Db.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),$y(n,t,e)},Db.prototype.__destroy__=function(){Ky(this.zs)},Ib.prototype=Object.create(Cb.prototype),Ib.prototype.constructor=Ib,Ib.prototype.As=Ib,Ib.Bs={},s.btGhostObject=Ib,Ib.prototype.getNumOverlappingObjects=function(){return bu(this.zs)},Ib.prototype.getOverlappingObject=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(vu(e,t),Cb)},Ib.prototype.setAnisotropicFriction=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Pu(n,t,e)},Ib.prototype.getCollisionShape=function(){return wb(yu(this.zs),Tb)},Ib.prototype.setContactProcessingThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ju(e,t)},Ib.prototype.setActivationState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Lu(e,t)},Ib.prototype.forceActivationState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),fu(e,t)},Ib.prototype.activate=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),void 0===t?uu(e):hu(e,t)},Ib.prototype.isActive=function(){return!!Cu(this.zs)},Ib.prototype.isKinematicObject=function(){return!!zu(this.zs)},Ib.prototype.isStaticObject=function(){return!!Au(this.zs)},Ib.prototype.isStaticOrKinematicObject=function(){return!!Eu(this.zs)},Ib.prototype.getRestitution=function(){return xu(this.zs)},Ib.prototype.getFriction=function(){return gu(this.zs)},Ib.prototype.getRollingFriction=function(){return wu(this.zs)},Ib.prototype.setRestitution=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Fu(e,t)},Ib.prototype.setFriction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Bu(e,t)},Ib.prototype.setRollingFriction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Nu(e,t)},Ib.prototype.getWorldTransform=function(){return wb(Tu(this.zs),Xv)},Ib.prototype.getCollisionFlags=function(){return _u(this.zs)},Ib.prototype.setCollisionFlags=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Iu(e,t)},Ib.prototype.setWorldTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Uu(e,t)},Ib.prototype.setCollisionShape=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ou(e,t)},Ib.prototype.setCcdMotionThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ru(e,t)},Ib.prototype.setCcdSweptSphereRadius=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Du(e,t)},Ib.prototype.getUserIndex=function(){return Su(this.zs)},Ib.prototype.setUserIndex=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Hu(e,t)},Ib.prototype.getUserPointer=function(){return wb(Mu(this.zs),gv)},Ib.prototype.setUserPointer=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Gu(e,t)},Ib.prototype.getBroadphaseHandle=function(){return wb(mu(this.zs),ix)},Ib.prototype.__destroy__=function(){pu(this.zs)},Ob.prototype=Object.create(Tb.prototype),Ob.prototype.constructor=Ob,Ob.prototype.As=Ob,Ob.Bs={},s.btConeShape=Ob,Ob.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),js(e,t)},Ob.prototype.getLocalScaling=function(){return wb(Os(this.zs),Bb)},Ob.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Is(n,t,e)},Ob.prototype.__destroy__=function(){Rs(this.zs)},jb.prototype=Object.create(vb.prototype),jb.prototype.constructor=jb,jb.prototype.As=jb,jb.Bs={},s.btActionInterface=jb,jb.prototype.updateAction=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Wr(n,t,e)},jb.prototype.__destroy__=function(){Vr(this.zs)},Bb.prototype=Object.create(vb.prototype),Bb.prototype.constructor=Bb,Bb.prototype.As=Bb,Bb.Bs={},s.btVector3=Bb,Bb.prototype.length=Bb.prototype.length=function(){return Cg(this.zs)},Bb.prototype.length2=function(){return Tg(this.zs)},Bb.prototype.x=Bb.prototype.x=function(){return jg(this.zs)},Bb.prototype.y=Bb.prototype.y=function(){return Bg(this.zs)},Bb.prototype.z=Bb.prototype.z=function(){return Fg(this.zs)},Bb.prototype.setX=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Dg(e,t)},Bb.prototype.setY=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ig(e,t)},Bb.prototype.setZ=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Og(e,t)},Bb.prototype.setValue=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Rg(r,t,e,n)},Bb.prototype.normalize=Bb.prototype.normalize=function(){zg(this.zs)},Bb.prototype.rotate=Bb.prototype.rotate=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),wb(Pg(n,t,e),Bb)},Bb.prototype.dot=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),Mg(e,t)},Bb.prototype.op_mul=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Eg(e,t),Bb)},Bb.prototype.op_add=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Ag(e,t),Bb)},Bb.prototype.op_sub=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Lg(e,t),Bb)},Bb.prototype.__destroy__=function(){xg(this.zs)},Fb.prototype=Object.create(vb.prototype),Fb.prototype.constructor=Fb,Fb.prototype.As=Fb,Fb.Bs={},s.btQuadWord=Fb,Fb.prototype.x=Fb.prototype.x=function(){return Uf(this.zs)},Fb.prototype.y=Fb.prototype.y=function(){return kf(this.zs)},Fb.prototype.z=Fb.prototype.z=function(){return Vf(this.zs)},Fb.prototype.w=Fb.prototype.ht=function(){return Gf(this.zs)},Fb.prototype.setX=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ff(e,t)},Fb.prototype.setY=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Nf(e,t)},Fb.prototype.setZ=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Hf(e,t)},Fb.prototype.setW=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Bf(e,t)},Fb.prototype.__destroy__=function(){jf(this.zs)},Nb.prototype=Object.create(Tb.prototype),Nb.prototype.constructor=Nb,Nb.prototype.As=Nb,Nb.Bs={},s.btCylinderShape=Nb,Nb.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),gc(e,t)},Nb.prototype.getMargin=function(){return _c(this.zs)},Nb.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),yc(e,t)},Nb.prototype.getLocalScaling=function(){return wb(mc(this.zs),Bb)},Nb.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),fc(n,t,e)},Nb.prototype.__destroy__=function(){hc(this.zs)},Hb.prototype=Object.create(Tb.prototype),Hb.prototype.constructor=Hb,Hb.prototype.As=Hb,Hb.Bs={},s.btConvexShape=Hb,Hb.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ua(e,t)},Hb.prototype.getLocalScaling=function(){return wb(Ha(this.zs),Bb)},Hb.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Na(n,t,e)},Hb.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ka(e,t)},Hb.prototype.getMargin=function(){return Ga(this.zs)},Hb.prototype.__destroy__=function(){Fa(this.zs)},Gb.prototype=Object.create(vb.prototype),Gb.prototype.constructor=Gb,Gb.prototype.As=Gb,Gb.Bs={},s.btDispatcher=Gb,Gb.prototype.getNumManifolds=function(){return kl(this.zs)},Gb.prototype.getManifoldByIndexInternal=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Ul(e,t),nv)},Gb.prototype.__destroy__=function(){Gl(this.zs)},Ub.prototype=Object.create(zb.prototype),Ub.prototype.constructor=Ub,Ub.prototype.As=Ub,Ub.Bs={},s.btGeneric6DofConstraint=Ub,Ub.prototype.setLinearLowerLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Up(e,t)},Ub.prototype.setLinearUpperLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),kp(e,t)},Ub.prototype.setAngularLowerLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Np(e,t)},Ub.prototype.setAngularUpperLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Hp(e,t)},Ub.prototype.getFrameOffsetA=function(){return wb(Bp(this.zs),Xv)},Ub.prototype.enableFeedback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Op(e,t)},Ub.prototype.getBreakingImpulseThreshold=function(){return jp(this.zs)},Ub.prototype.setBreakingImpulseThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Gp(e,t)},Ub.prototype.getParam=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Fp(n,t,e)},Ub.prototype.setParam=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Vp(r,t,e,n)},Ub.prototype.__destroy__=function(){Rp(this.zs)},kb.prototype=Object.create(vb.prototype),kb.prototype.constructor=kb,kb.prototype.As=kb,kb.Bs={},s.btStridingMeshInterface=kb,kb.prototype.setScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ny(e,t)},kb.prototype.__destroy__=function(){Fy(this.zs)},Vb.prototype=Object.create(vb.prototype),Vb.prototype.constructor=Vb,Vb.prototype.As=Vb,Vb.Bs={},s.btMotionState=Vb,Vb.prototype.getWorldTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Md(e,t)},Vb.prototype.setWorldTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Td(e,t)},Vb.prototype.__destroy__=function(){Sd(this.zs)},Wb.prototype=Object.create(vb.prototype),Wb.prototype.constructor=Wb,Wb.prototype.As=Wb,Wb.Bs={},s.ConvexResultCallback=Wb,Wb.prototype.hasHit=function(){return!!Ye(this.zs)},Wb.prototype.get_m_collisionFilterGroup=Wb.prototype.Ds=function(){return We(this.zs)},Wb.prototype.set_m_collisionFilterGroup=Wb.prototype.Fs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ze(e,t)},Object.defineProperty(Wb.prototype,"m_collisionFilterGroup",{get:Wb.prototype.Ds,set:Wb.prototype.Fs}),Wb.prototype.get_m_collisionFilterMask=Wb.prototype.Es=function(){return qe(this.zs)},Wb.prototype.set_m_collisionFilterMask=Wb.prototype.Gs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Je(e,t)},Object.defineProperty(Wb.prototype,"m_collisionFilterMask",{get:Wb.prototype.Es,set:Wb.prototype.Gs}),Wb.prototype.get_m_closestHitFraction=Wb.prototype.Hs=function(){return Ve(this.zs)},Wb.prototype.set_m_closestHitFraction=Wb.prototype.Js=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Xe(e,t)},Object.defineProperty(Wb.prototype,"m_closestHitFraction",{get:Wb.prototype.Hs,set:Wb.prototype.Js}),Wb.prototype.__destroy__=function(){ke(this.zs)},qb.prototype=Object.create(vb.prototype),qb.prototype.constructor=qb,qb.prototype.As=qb,qb.Bs={},s.ContactResultCallback=qb,qb.prototype.addSingleResult=function(t,e,n,r,i,o,s){var a=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),o&&"object"==typeof o&&(o=o.zs),s&&"object"==typeof s&&(s=s.zs),je(a,t,e,n,r,i,o,s)},qb.prototype.__destroy__=function(){Oe(this.zs)},Yb.prototype=Object.create(vb.prototype),Yb.prototype.constructor=Yb,Yb.prototype.As=Yb,Yb.Bs={},s.RayResultCallback=Yb,Yb.prototype.hasHit=function(){return!!vr(this.zs)},Yb.prototype.get_m_collisionFilterGroup=Yb.prototype.Ds=function(){return yr(this.zs)},Yb.prototype.set_m_collisionFilterGroup=Yb.prototype.Fs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),wr(e,t)},Object.defineProperty(Yb.prototype,"m_collisionFilterGroup",{get:Yb.prototype.Ds,set:Yb.prototype.Fs}),Yb.prototype.get_m_collisionFilterMask=Yb.prototype.Es=function(){return gr(this.zs)},Yb.prototype.set_m_collisionFilterMask=Yb.prototype.Gs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Sr(e,t)},Object.defineProperty(Yb.prototype,"m_collisionFilterMask",{get:Yb.prototype.Es,set:Yb.prototype.Gs}),Yb.prototype.get_m_closestHitFraction=Yb.prototype.Hs=function(){return _r(this.zs)},Yb.prototype.set_m_closestHitFraction=Yb.prototype.Js=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),xr(e,t)},Object.defineProperty(Yb.prototype,"m_closestHitFraction",{get:Yb.prototype.Hs,set:Yb.prototype.Js}),Yb.prototype.get_m_collisionObject=Yb.prototype.Ms=function(){return wb(br(this.zs),Cb)},Yb.prototype.set_m_collisionObject=Yb.prototype.Rs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Mr(e,t)},Object.defineProperty(Yb.prototype,"m_collisionObject",{get:Yb.prototype.Ms,set:Yb.prototype.Rs}),Yb.prototype.__destroy__=function(){mr(this.zs)},Xb.prototype=Object.create(vb.prototype),Xb.prototype.constructor=Xb,Xb.prototype.As=Xb,Xb.Bs={},s.btMatrix3x3=Xb,Xb.prototype.setEulerZYX=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),wd(r,t,e,n)},Xb.prototype.getRotation=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),vd(e,t)},Xb.prototype.getRow=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(xd(e,t),Bb)},Xb.prototype.__destroy__=function(){bd(this.zs)},Zb.prototype=Object.create(vb.prototype),Zb.prototype.constructor=Zb,Zb.prototype.As=Zb,Zb.Bs={},s.btScalarArray=Zb,Zb.prototype.size=Zb.prototype.size=function(){return sy(this.zs)},Zb.prototype.at=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),oy(e,t)},Zb.prototype.__destroy__=function(){iy(this.zs)},Jb.prototype=Object.create(vb.prototype),Jb.prototype.constructor=Jb,Jb.prototype.As=Jb,Jb.Bs={},s.btDispatcherInfo=Jb,Jb.prototype.get_m_timeStep=Jb.prototype.tu=function(){return Cl(this.zs)},Jb.prototype.set_m_timeStep=Jb.prototype.Jv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Bl(e,t)},Object.defineProperty(Jb.prototype,"m_timeStep",{get:Jb.prototype.tu,set:Jb.prototype.Jv}),Jb.prototype.get_m_stepCount=Jb.prototype.qu=function(){return Ml(this.zs)},Jb.prototype.set_m_stepCount=Jb.prototype.Gv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ol(e,t)},Object.defineProperty(Jb.prototype,"m_stepCount",{get:Jb.prototype.qu,set:Jb.prototype.Gv}),Jb.prototype.get_m_dispatchFunc=Jb.prototype.Ct=function(){return xl(this.zs)},Jb.prototype.set_m_dispatchFunc=Jb.prototype.Vu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Rl(e,t)},Object.defineProperty(Jb.prototype,"m_dispatchFunc",{get:Jb.prototype.Ct,set:Jb.prototype.Vu}),Jb.prototype.get_m_timeOfImpact=Jb.prototype.su=function(){return Tl(this.zs)},Jb.prototype.set_m_timeOfImpact=Jb.prototype.Iv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),jl(e,t)},Object.defineProperty(Jb.prototype,"m_timeOfImpact",{get:Jb.prototype.su,set:Jb.prototype.Iv}),Jb.prototype.get_m_useContinuous=Jb.prototype.wu=function(){return!!zl(this.zs)},Jb.prototype.set_m_useContinuous=Jb.prototype.Lv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Fl(e,t)},Object.defineProperty(Jb.prototype,"m_useContinuous",{get:Jb.prototype.wu,set:Jb.prototype.Lv}),Jb.prototype.get_m_enableSatConvex=Jb.prototype.Et=function(){return!!Sl(this.zs)},Jb.prototype.set_m_enableSatConvex=Jb.prototype.Xu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Il(e,t)},Object.defineProperty(Jb.prototype,"m_enableSatConvex",{get:Jb.prototype.Et,set:Jb.prototype.Xu}),Jb.prototype.get_m_enableSPU=Jb.prototype.Dt=function(){return!!wl(this.zs)},Jb.prototype.set_m_enableSPU=Jb.prototype.Wu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Dl(e,t)},Object.defineProperty(Jb.prototype,"m_enableSPU",{get:Jb.prototype.Dt,set:Jb.prototype.Wu}),Jb.prototype.get_m_useEpa=Jb.prototype.yu=function(){return!!El(this.zs)},Jb.prototype.set_m_useEpa=Jb.prototype.Nv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Hl(e,t)},Object.defineProperty(Jb.prototype,"m_useEpa",{get:Jb.prototype.yu,set:Jb.prototype.Nv}),Jb.prototype.get_m_allowedCcdPenetration=Jb.prototype.ot=function(){return bl(this.zs)},Jb.prototype.set_m_allowedCcdPenetration=Jb.prototype.Hu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ll(e,t)},Object.defineProperty(Jb.prototype,"m_allowedCcdPenetration",{get:Jb.prototype.ot,set:Jb.prototype.Hu}),Jb.prototype.get_m_useConvexConservativeDistanceUtil=Jb.prototype.xu=function(){return!!Al(this.zs)},Jb.prototype.set_m_useConvexConservativeDistanceUtil=Jb.prototype.Mv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Nl(e,t)},Object.defineProperty(Jb.prototype,"m_useConvexConservativeDistanceUtil",{get:Jb.prototype.xu,set:Jb.prototype.Mv}),Jb.prototype.get_m_convexConservativeDistanceThreshold=Jb.prototype.vt=function(){return vl(this.zs)},Jb.prototype.set_m_convexConservativeDistanceThreshold=Jb.prototype.Ou=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Pl(e,t)},Object.defineProperty(Jb.prototype,"m_convexConservativeDistanceThreshold",{get:Jb.prototype.vt,set:Jb.prototype.Ou}),Jb.prototype.__destroy__=function(){gl(this.zs)},Qb.prototype=Object.create(Hb.prototype),Qb.prototype.constructor=Qb,Qb.prototype.As=Qb,Qb.Bs={},s.btConvexTriangleMeshShape=Qb,Qb.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ja(e,t)},Qb.prototype.getLocalScaling=function(){return wb(Xa(this.zs),Bb)},Qb.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ya(n,t,e)},Qb.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Qa(e,t)},Qb.prototype.getMargin=function(){return Za(this.zs)},Qb.prototype.__destroy__=function(){Va(this.zs)},Kb.prototype=Object.create(vb.prototype),Kb.prototype.constructor=Kb,Kb.prototype.As=Kb,Kb.Bs={},s.btBroadphaseInterface=Kb,Kb.prototype.getOverlappingPairCache=function(){return wb(oi(this.zs),Vv)},Kb.prototype.__destroy__=function(){ii(this.zs)},$b.prototype=Object.create(vb.prototype),$b.prototype.constructor=$b,$b.prototype.As=$b,$b.Bs={},s.btDefaultCollisionConfiguration=$b,$b.prototype.__destroy__=function(){wc(this.zs)},tv.prototype=Object.create(vb.prototype),tv.prototype.constructor=tv,tv.prototype.As=tv,tv.Bs={},s.btRigidBodyConstructionInfo=tv,tv.prototype.get_m_linearDamping=tv.prototype.Qt=function(){return Pm(this.zs)},tv.prototype.set_m_linearDamping=tv.prototype.iv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),km(e,t)},Object.defineProperty(tv.prototype,"m_linearDamping",{get:tv.prototype.Qt,set:tv.prototype.iv}),tv.prototype.get_m_angularDamping=tv.prototype.qt=function(){return Am(this.zs)},tv.prototype.set_m_angularDamping=tv.prototype.Ju=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Hm(e,t)},Object.defineProperty(tv.prototype,"m_angularDamping",{get:tv.prototype.qt,set:tv.prototype.Ju}),tv.prototype.get_m_friction=tv.prototype.Gt=function(){return Lm(this.zs)},tv.prototype.set_m_friction=tv.prototype.Zu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Um(e,t)},Object.defineProperty(tv.prototype,"m_friction",{get:tv.prototype.Gt,set:tv.prototype.Zu}),tv.prototype.get_m_rollingFriction=tv.prototype.lu=function(){return Im(this.zs)},tv.prototype.set_m_rollingFriction=tv.prototype.Bv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),qm(e,t)},Object.defineProperty(tv.prototype,"m_rollingFriction",{get:tv.prototype.lu,set:tv.prototype.Bv}),tv.prototype.get_m_restitution=tv.prototype.ku=function(){return Dm(this.zs)},tv.prototype.set_m_restitution=tv.prototype.Av=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Wm(e,t)},Object.defineProperty(tv.prototype,"m_restitution",{get:tv.prototype.ku,set:tv.prototype.Av}),tv.prototype.get_m_linearSleepingThreshold=tv.prototype.Rt=function(){return Rm(this.zs)},tv.prototype.set_m_linearSleepingThreshold=tv.prototype.jv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Vm(e,t)},Object.defineProperty(tv.prototype,"m_linearSleepingThreshold",{get:tv.prototype.Rt,set:tv.prototype.jv}),tv.prototype.get_m_angularSleepingThreshold=tv.prototype.rt=function(){return Em(this.zs)},tv.prototype.set_m_angularSleepingThreshold=tv.prototype.Ku=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Gm(e,t)},Object.defineProperty(tv.prototype,"m_angularSleepingThreshold",{get:tv.prototype.rt,set:tv.prototype.Ku}),tv.prototype.get_m_additionalDamping=tv.prototype.lt=function(){return!!Cm(this.zs)},tv.prototype.set_m_additionalDamping=tv.prototype.Eu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Fm(e,t)},Object.defineProperty(tv.prototype,"m_additionalDamping",{get:tv.prototype.lt,set:tv.prototype.Eu}),tv.prototype.get_m_additionalDampingFactor=tv.prototype.mt=function(){return Tm(this.zs)},tv.prototype.set_m_additionalDampingFactor=tv.prototype.Fu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Bm(e,t)},Object.defineProperty(tv.prototype,"m_additionalDampingFactor",{get:tv.prototype.mt,set:tv.prototype.Fu}),tv.prototype.get_m_additionalLinearDampingThresholdSqr=tv.prototype.nt=function(){return zm(this.zs)},tv.prototype.set_m_additionalLinearDampingThresholdSqr=tv.prototype.Gu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Nm(e,t)},Object.defineProperty(tv.prototype,"m_additionalLinearDampingThresholdSqr",{get:tv.prototype.nt,set:tv.prototype.Gu}),tv.prototype.get_m_additionalAngularDampingThresholdSqr=tv.prototype.kt=function(){return Mm(this.zs)},tv.prototype.set_m_additionalAngularDampingThresholdSqr=tv.prototype.Du=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),jm(e,t)},Object.defineProperty(tv.prototype,"m_additionalAngularDampingThresholdSqr",{get:tv.prototype.kt,set:tv.prototype.Du}),tv.prototype.get_m_additionalAngularDampingFactor=tv.prototype.jt=function(){return Sm(this.zs)},tv.prototype.set_m_additionalAngularDampingFactor=tv.prototype.Cu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Om(e,t)},Object.defineProperty(tv.prototype,"m_additionalAngularDampingFactor",{get:tv.prototype.jt,set:tv.prototype.Cu}),tv.prototype.__destroy__=function(){vm(this.zs)},ev.prototype=Object.create(vb.prototype),ev.prototype.constructor=ev,ev.prototype.As=ev,ev.Bs={},s.btCollisionConfiguration=ev,ev.prototype.__destroy__=function(){Yi(this.zs)},nv.prototype=Object.create(vb.prototype),nv.prototype.constructor=nv,nv.prototype.As=nv,nv.Bs={},s.btPersistentManifold=nv,nv.prototype.getBody0=function(){return wb(gf(this.zs),Cb)},nv.prototype.getBody1=function(){return wb(bf(this.zs),Cb)},nv.prototype.getNumContacts=function(){return xf(this.zs)},nv.prototype.getContactPoint=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(vf(e,t),nx)},nv.prototype.__destroy__=function(){_f(this.zs)},rv.prototype=Object.create(Tb.prototype),rv.prototype.constructor=rv,rv.prototype.As=rv,rv.Bs={},s.btCompoundShape=rv,rv.prototype.addChildShape=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),is(n,t,e)},rv.prototype.removeChildShape=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ds(e,t)},rv.prototype.removeChildShapeByIndex=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),hs(e,t)},rv.prototype.getNumChildShapes=function(){return us(this.zs)},rv.prototype.getChildShape=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(cs(e,t),Tb)},rv.prototype.updateChildTransform=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),void 0===n?_s(r,t,e):ys(r,t,e,n)},rv.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ms(e,t)},rv.prototype.getMargin=function(){return ps(this.zs)},rv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),fs(e,t)},rv.prototype.getLocalScaling=function(){return wb(ls(this.zs),Bb)},rv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),as(n,t,e)},rv.prototype.__destroy__=function(){rs(this.zs)},iv.prototype=Object.create(Wb.prototype),iv.prototype.constructor=iv,iv.prototype.As=iv,iv.Bs={},s.ClosestConvexResultCallback=iv,iv.prototype.hasHit=function(){return!!oe(this.zs)},iv.prototype.get_m_convexFromWorld=iv.prototype.wt=function(){return wb(ee(this.zs),Bb)},iv.prototype.set_m_convexFromWorld=iv.prototype.Pu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),le(e,t)},Object.defineProperty(iv.prototype,"m_convexFromWorld",{get:iv.prototype.wt,set:iv.prototype.Pu}),iv.prototype.get_m_convexToWorld=iv.prototype.xt=function(){return wb(ne(this.zs),Bb)},iv.prototype.set_m_convexToWorld=iv.prototype.Qu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),pe(e,t)},Object.defineProperty(iv.prototype,"m_convexToWorld",{get:iv.prototype.xt,set:iv.prototype.Qu}),iv.prototype.get_m_hitNormalWorld=iv.prototype.Ns=function(){return wb(re(this.zs),Bb)},iv.prototype.set_m_hitNormalWorld=iv.prototype.Ss=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ue(e,t)},Object.defineProperty(iv.prototype,"m_hitNormalWorld",{get:iv.prototype.Ns,set:iv.prototype.Ss}),iv.prototype.get_m_hitPointWorld=iv.prototype.Os=function(){return wb(ie(this.zs),Bb)},iv.prototype.set_m_hitPointWorld=iv.prototype.Ts=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),he(e,t)},Object.defineProperty(iv.prototype,"m_hitPointWorld",{get:iv.prototype.Os,set:iv.prototype.Ts}),iv.prototype.get_m_collisionFilterGroup=iv.prototype.Ds=function(){return $t(this.zs)},iv.prototype.set_m_collisionFilterGroup=iv.prototype.Fs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ae(e,t)},Object.defineProperty(iv.prototype,"m_collisionFilterGroup",{get:iv.prototype.Ds,set:iv.prototype.Fs}),iv.prototype.get_m_collisionFilterMask=iv.prototype.Es=function(){return te(this.zs)},iv.prototype.set_m_collisionFilterMask=iv.prototype.Gs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ce(e,t)},Object.defineProperty(iv.prototype,"m_collisionFilterMask",{get:iv.prototype.Es,set:iv.prototype.Gs}),iv.prototype.get_m_closestHitFraction=iv.prototype.Hs=function(){return Kt(this.zs)},iv.prototype.set_m_closestHitFraction=iv.prototype.Js=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),se(e,t)},Object.defineProperty(iv.prototype,"m_closestHitFraction",{get:iv.prototype.Hs,set:iv.prototype.Js}),iv.prototype.__destroy__=function(){Qt(this.zs)},ov.prototype=Object.create(Yb.prototype),ov.prototype.constructor=ov,ov.prototype.As=ov,ov.Bs={},s.AllHitsRayResultCallback=ov,ov.prototype.hasHit=function(){return!!Nt(this.zs)},ov.prototype.get_m_collisionObjects=ov.prototype.tt=function(){return wb(Dt(this.zs),$v)},ov.prototype.set_m_collisionObjects=ov.prototype.Mu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Vt(e,t)},Object.defineProperty(ov.prototype,"m_collisionObjects",{get:ov.prototype.tt,set:ov.prototype.Mu}),ov.prototype.get_m_rayFromWorld=ov.prototype.bt=function(){return wb(Bt(this.zs),Bb)},ov.prototype.set_m_rayFromWorld=ov.prototype.et=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Xt(e,t)},Object.defineProperty(ov.prototype,"m_rayFromWorld",{get:ov.prototype.bt,set:ov.prototype.et}),ov.prototype.get_m_rayToWorld=ov.prototype.ct=function(){return wb(Ft(this.zs),Bb)},ov.prototype.set_m_rayToWorld=ov.prototype.ft=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Zt(e,t)},Object.defineProperty(ov.prototype,"m_rayToWorld",{get:ov.prototype.ct,set:ov.prototype.ft}),ov.prototype.get_m_hitNormalWorld=ov.prototype.Ns=function(){return wb(Ot(this.zs),Lv)},ov.prototype.set_m_hitNormalWorld=ov.prototype.Ss=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),qt(e,t)},Object.defineProperty(ov.prototype,"m_hitNormalWorld",{get:ov.prototype.Ns,set:ov.prototype.Ss}),ov.prototype.get_m_hitPointWorld=ov.prototype.Os=function(){return wb(jt(this.zs),Lv)},ov.prototype.set_m_hitPointWorld=ov.prototype.Ts=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Yt(e,t)},Object.defineProperty(ov.prototype,"m_hitPointWorld",{get:ov.prototype.Os,set:ov.prototype.Ts}),ov.prototype.get_m_hitFractions=ov.prototype.Lt=function(){return wb(It(this.zs),Zb)},ov.prototype.set_m_hitFractions=ov.prototype.dv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Wt(e,t)},Object.defineProperty(ov.prototype,"m_hitFractions",{get:ov.prototype.Lt,set:ov.prototype.dv}),ov.prototype.get_m_collisionFilterGroup=ov.prototype.Ds=function(){return Lt(this.zs)},ov.prototype.set_m_collisionFilterGroup=ov.prototype.Fs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Gt(e,t)},Object.defineProperty(ov.prototype,"m_collisionFilterGroup",{get:ov.prototype.Ds,set:ov.prototype.Fs}),ov.prototype.get_m_collisionFilterMask=ov.prototype.Es=function(){return Pt(this.zs)},ov.prototype.set_m_collisionFilterMask=ov.prototype.Gs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ut(e,t)},Object.defineProperty(ov.prototype,"m_collisionFilterMask",{get:ov.prototype.Es,set:ov.prototype.Gs}),ov.prototype.get_m_closestHitFraction=ov.prototype.Hs=function(){return Et(this.zs)},ov.prototype.set_m_closestHitFraction=ov.prototype.Js=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ht(e,t)},Object.defineProperty(ov.prototype,"m_closestHitFraction",{get:ov.prototype.Hs,set:ov.prototype.Js}),ov.prototype.get_m_collisionObject=ov.prototype.Ms=function(){return wb(Rt(this.zs),Cb)},ov.prototype.set_m_collisionObject=ov.prototype.Rs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),kt(e,t)},Object.defineProperty(ov.prototype,"m_collisionObject",{get:ov.prototype.Ms,set:ov.prototype.Rs}),ov.prototype.__destroy__=function(){At(this.zs)},sv.prototype=Object.create(vb.prototype),sv.prototype.constructor=sv,sv.prototype.As=sv,sv.Bs={},s.VHACD=sv,sv.prototype.Compute=function(t,e,n,r,i,s,a){var c=this.zs;if(o.Is(),"object"==typeof t&&"object"==typeof t){var l=o.Vs(t,P);o.copy(t,P,l),t=l}return e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),"object"==typeof r&&"object"==typeof r&&(l=o.Vs(r,E),o.copy(r,E,l),r=l),i&&"object"==typeof i&&(i=i.zs),s&&"object"==typeof s&&(s=s.zs),a&&"object"==typeof a&&(a=a.zs),!!zr(c,t,e,n,r,i,s,a)},sv.prototype.GetNConvexHulls=function(){return Er(this.zs)},sv.prototype.GetConvexHull=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ar(n,t,e)},sv.prototype.Cancel=function(){Tr(this.zs)},sv.prototype.Clean=function(){Cr(this.zs)},sv.prototype.Release=function(){Lr(this.zs)},sv.prototype.__destroy__=function(){Rr(this.zs)},av.prototype=Object.create(Eb.prototype),av.prototype.constructor=av,av.prototype.As=av,av.Bs={},s.btEmptyShape=av,av.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),_p(e,t)},av.prototype.getLocalScaling=function(){return wb(mp(this.zs),Bb)},av.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),fp(n,t,e)},av.prototype.__destroy__=function(){hp(this.zs)},cv.prototype=Object.create(vb.prototype),cv.prototype.constructor=cv,cv.prototype.As=cv,cv.Bs={},s.btConstraintSetting=cv,cv.prototype.get_m_tau=cv.prototype.ru=function(){return sa(this.zs)},cv.prototype.set_m_tau=cv.prototype.Hv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),la(e,t)},Object.defineProperty(cv.prototype,"m_tau",{get:cv.prototype.ru,set:cv.prototype.Hv}),cv.prototype.get_m_damping=cv.prototype.At=function(){return ia(this.zs)},cv.prototype.set_m_damping=cv.prototype.Tu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),aa(e,t)},Object.defineProperty(cv.prototype,"m_damping",{get:cv.prototype.At,set:cv.prototype.Tu}),cv.prototype.get_m_impulseClamp=cv.prototype.Ot=function(){return oa(this.zs)},cv.prototype.set_m_impulseClamp=cv.prototype.gv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ca(e,t)},Object.defineProperty(cv.prototype,"m_impulseClamp",{get:cv.prototype.Ot,set:cv.prototype.gv}),cv.prototype.__destroy__=function(){na(this.zs)},lv.prototype=Object.create(vb.prototype),lv.prototype.constructor=lv,lv.prototype.As=lv,lv.Bs={},s.LocalShapeInfo=lv,lv.prototype.get_m_shapePart=lv.prototype.nu=function(){return On(this.zs)},lv.prototype.set_m_shapePart=lv.prototype.Dv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Bn(e,t)},Object.defineProperty(lv.prototype,"m_shapePart",{get:lv.prototype.nu,set:lv.prototype.Dv}),lv.prototype.get_m_triangleIndex=lv.prototype.uu=function(){return jn(this.zs)},lv.prototype.set_m_triangleIndex=lv.prototype.Kv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Fn(e,t)},Object.defineProperty(lv.prototype,"m_triangleIndex",{get:lv.prototype.uu,set:lv.prototype.Kv}),lv.prototype.__destroy__=function(){In(this.zs)},pv.prototype=Object.create(Cb.prototype),pv.prototype.constructor=pv,pv.prototype.As=pv,pv.Bs={},s.btRigidBody=pv,pv.prototype.getCenterOfMassTransform=function(){return wb(d_(this.zs),Xv)},pv.prototype.setCenterOfMassTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),F_(e,t)},pv.prototype.setSleepingThresholds=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),K_(n,t,e)},pv.prototype.getLinearDamping=function(){return b_(this.zs)},pv.prototype.getAngularDamping=function(){return c_(this.zs)},pv.prototype.setDamping=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),U_(n,t,e)},pv.prototype.setMassProps=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),X_(n,t,e)},pv.prototype.getLinearFactor=function(){return wb(v_(this.zs),Bb)},pv.prototype.setLinearFactor=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),q_(e,t)},pv.prototype.applyTorque=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),i_(e,t)},pv.prototype.applyLocalTorque=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),n_(e,t)},pv.prototype.applyForce=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),$m(n,t,e)},pv.prototype.applyCentralForce=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Jm(e,t)},pv.prototype.applyCentralLocalForce=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Km(e,t)},pv.prototype.applyTorqueImpulse=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),r_(e,t)},pv.prototype.applyImpulse=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),e_(n,t,e)},pv.prototype.applyCentralImpulse=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Qm(e,t)},pv.prototype.updateInertiaTensor=function(){ry(this.zs)},pv.prototype.getLinearVelocity=function(){return wb(x_(this.zs),Bb)},pv.prototype.getAngularVelocity=function(){return wb(p_(this.zs),Bb)},pv.prototype.setLinearVelocity=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Y_(e,t)},pv.prototype.setAngularVelocity=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),I_(e,t)},pv.prototype.getMotionState=function(){return wb(w_(this.zs),Vb)},pv.prototype.setMotionState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Z_(e,t)},pv.prototype.getAngularFactor=function(){return wb(l_(this.zs),Bb)},pv.prototype.setAngularFactor=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),D_(e,t)},pv.prototype.upcast=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(ny(e,t),pv)},pv.prototype.getAabb=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),a_(n,t,e)},pv.prototype.applyGravity=function(){t_(this.zs)},pv.prototype.getGravity=function(){return wb(g_(this.zs),Bb)},pv.prototype.setGravity=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),W_(e,t)},pv.prototype.getBroadphaseProxy=function(){return wb(h_(this.zs),ix)},pv.prototype.getFlags=function(){return __(this.zs)},pv.prototype.setFlags=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),k_(e,t)},pv.prototype.setAnisotropicFriction=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),O_(n,t,e)},pv.prototype.getCollisionShape=function(){return wb(m_(this.zs),Tb)},pv.prototype.setContactProcessingThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),G_(e,t)},pv.prototype.setActivationState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),R_(e,t)},pv.prototype.forceActivationState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),s_(e,t)},pv.prototype.activate=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),void 0===t?Xm(e):Zm(e,t)},pv.prototype.isActive=function(){return!!A_(this.zs)},pv.prototype.isKinematicObject=function(){return!!E_(this.zs)},pv.prototype.isStaticObject=function(){return!!L_(this.zs)},pv.prototype.isStaticOrKinematicObject=function(){return!!P_(this.zs)},pv.prototype.getRestitution=function(){return S_(this.zs)},pv.prototype.getFriction=function(){return y_(this.zs)},pv.prototype.getRollingFriction=function(){return M_(this.zs)},pv.prototype.setRestitution=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),J_(e,t)},pv.prototype.setFriction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),V_(e,t)},pv.prototype.setRollingFriction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Q_(e,t)},pv.prototype.getWorldTransform=function(){return wb(z_(this.zs),Xv)},pv.prototype.getCollisionFlags=function(){return f_(this.zs)},pv.prototype.setCollisionFlags=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),N_(e,t)},pv.prototype.setWorldTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ey(e,t)},pv.prototype.setCollisionShape=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),H_(e,t)},pv.prototype.setCcdMotionThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),j_(e,t)},pv.prototype.setCcdSweptSphereRadius=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),B_(e,t)},pv.prototype.getUserIndex=function(){return T_(this.zs)},pv.prototype.setUserIndex=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),$_(e,t)},pv.prototype.getUserPointer=function(){return wb(C_(this.zs),gv)},pv.prototype.setUserPointer=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ty(e,t)},pv.prototype.getBroadphaseHandle=function(){return wb(u_(this.zs),ix)},pv.prototype.__destroy__=function(){Ym(this.zs)},uv.prototype=Object.create(vb.prototype),uv.prototype.constructor=uv,uv.prototype.As=uv,uv.Bs={},s.btIndexedMeshArray=uv,uv.prototype.size=uv.prototype.size=function(){return Ch(this.zs)},uv.prototype.at=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Th(e,t),Wv)},uv.prototype.__destroy__=function(){Mh(this.zs)},hv.prototype=Object.create(vb.prototype),hv.prototype.constructor=hv,hv.prototype.As=hv,hv.Bs={},s.btDbvtBroadphase=hv,hv.prototype.getOverlappingPairCache=function(){return wb(xc(this.zs),Vv)},hv.prototype.__destroy__=function(){bc(this.zs)},dv.prototype=Object.create(Eb.prototype),dv.prototype.constructor=dv,dv.prototype.As=dv,dv.Bs={},s.btHeightfieldTerrainShape=dv,dv.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Qu(e,t)},dv.prototype.getMargin=function(){return Zu(this.zs)},dv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ju(e,t)},dv.prototype.getLocalScaling=function(){return wb(Xu(this.zs),Bb)},dv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Yu(n,t,e)},dv.prototype.__destroy__=function(){Wu(this.zs)},fv.prototype=Object.create(vb.prototype),fv.prototype.constructor=fv,fv.prototype.As=fv,fv.Bs={},s.Parameters=fv,fv.prototype.get_m_concavity=fv.prototype.ut=function(){return kn(this.zs)},fv.prototype.set_m_concavity=fv.prototype.Nu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),rr(e,t)},Object.defineProperty(fv.prototype,"m_concavity",{get:fv.prototype.ut,set:fv.prototype.Nu}),fv.prototype.get_m_alpha=fv.prototype.pt=function(){return Gn(this.zs)},fv.prototype.set_m_alpha=fv.prototype.Iu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),er(e,t)},Object.defineProperty(fv.prototype,"m_alpha",{get:fv.prototype.pt,set:fv.prototype.Iu}),fv.prototype.get_m_beta=fv.prototype.st=function(){return Un(this.zs)},fv.prototype.set_m_beta=fv.prototype.Lu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),nr(e,t)},Object.defineProperty(fv.prototype,"m_beta",{get:fv.prototype.st,set:fv.prototype.Lu}),fv.prototype.get_m_gamma=fv.prototype.Ht=function(){return Yn(this.zs)},fv.prototype.set_m_gamma=fv.prototype.$u=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ar(e,t)},Object.defineProperty(fv.prototype,"m_gamma",{get:fv.prototype.Ht,set:fv.prototype.$u}),fv.prototype.get_m_minVolumePerCH=fv.prototype.Wt=function(){return Zn(this.zs)},fv.prototype.set_m_minVolumePerCH=fv.prototype.ov=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),lr(e,t)},Object.defineProperty(fv.prototype,"m_minVolumePerCH",{get:fv.prototype.Wt,set:fv.prototype.ov}),fv.prototype.get_m_resolution=fv.prototype.ju=function(){return tr(this.zs)},fv.prototype.set_m_resolution=fv.prototype.zv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),fr(e,t)},Object.defineProperty(fv.prototype,"m_resolution",{get:fv.prototype.ju,set:fv.prototype.zv}),fv.prototype.get_m_maxNumVerticesPerCH=fv.prototype.Vt=function(){return Xn(this.zs)},fv.prototype.set_m_maxNumVerticesPerCH=fv.prototype.nv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),cr(e,t)},Object.defineProperty(fv.prototype,"m_maxNumVerticesPerCH",{get:fv.prototype.Vt,set:fv.prototype.nv}),fv.prototype.get_m_depth=fv.prototype.Bt=function(){return qn(this.zs)},fv.prototype.set_m_depth=fv.prototype.Uu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),sr(e,t)},Object.defineProperty(fv.prototype,"m_depth",{get:fv.prototype.Bt,set:fv.prototype.Uu}),fv.prototype.get_m_planeDownsampling=fv.prototype.fu=function(){return $n(this.zs)},fv.prototype.set_m_planeDownsampling=fv.prototype.wv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),dr(e,t)},Object.defineProperty(fv.prototype,"m_planeDownsampling",{get:fv.prototype.fu,set:fv.prototype.wv}),fv.prototype.get_m_convexhullDownsampling=fv.prototype.zt=function(){return Wn(this.zs)},fv.prototype.set_m_convexhullDownsampling=fv.prototype.Su=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),or(e,t)},Object.defineProperty(fv.prototype,"m_convexhullDownsampling",{get:fv.prototype.zt,set:fv.prototype.Su}),fv.prototype.get_m_pca=fv.prototype.du=function(){return Kn(this.zs)},fv.prototype.set_m_pca=fv.prototype.uv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),hr(e,t)},Object.defineProperty(fv.prototype,"m_pca",{get:fv.prototype.du,set:fv.prototype.uv}),fv.prototype.get_m_mode=fv.prototype.Xt=function(){return Jn(this.zs)},fv.prototype.set_m_mode=fv.prototype.pv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),pr(e,t)},Object.defineProperty(fv.prototype,"m_mode",{get:fv.prototype.Xt,set:fv.prototype.pv}),fv.prototype.get_m_convexhullApproximation=fv.prototype.yt=function(){return Vn(this.zs)},fv.prototype.set_m_convexhullApproximation=fv.prototype.Ru=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ir(e,t)},Object.defineProperty(fv.prototype,"m_convexhullApproximation",{get:fv.prototype.yt,set:fv.prototype.Ru}),fv.prototype.get_m_oclAcceleration=fv.prototype.cu=function(){return Qn(this.zs)},fv.prototype.set_m_oclAcceleration=fv.prototype.tv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ur(e,t)},Object.defineProperty(fv.prototype,"m_oclAcceleration",{get:fv.prototype.cu,set:fv.prototype.tv}),fv.prototype.__destroy__=function(){Hn(this.zs)},mv.prototype=Object.create(Gb.prototype),mv.prototype.constructor=mv,mv.prototype.As=mv,mv.Bs={},s.btCollisionDispatcher=mv,mv.prototype.getNumManifolds=function(){return Qi(this.zs)},mv.prototype.getManifoldByIndexInternal=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Ji(e,t),nv)},mv.prototype.__destroy__=function(){Xi(this.zs)},_v.prototype=Object.create(vb.prototype),_v.prototype.constructor=_v,_v.prototype.As=_v,_v.Bs={},s.btAxisSweep3=_v,_v.prototype.__destroy__=function(){qr(this.zs)},yv.prototype=Object.create(vb.prototype),yv.prototype.constructor=yv,yv.prototype.As=yv,yv.Bs={},s.HACD=yv,yv.prototype.SetCompacityWeight=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),hn(e,t)},yv.prototype.SetVolumeWeight=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),vn(e,t)},yv.prototype.SetConcavity=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),dn(e,t)},yv.prototype.SetNClusters=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),fn(e,t)},yv.prototype.SetNVerticesPerCH=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),yn(e,t)},yv.prototype.SetPoints=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),gn(e,t)},yv.prototype.SetNPoints=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),mn(e,t)},yv.prototype.SetTriangles=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),bn(e,t)},yv.prototype.SetNTriangles=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),_n(e,t)},yv.prototype.Compute=function(){sn(this.zs)},yv.prototype.GetNClusters=function(){return cn(this.zs)},yv.prototype.GetNPointsCH=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),ln(e,t)},yv.prototype.GetNTrianglesCH=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),pn(e,t)},yv.prototype.GetCH=function(t,e,n){var r=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),an(r,t,e,n)},yv.prototype.__destroy__=function(){xn(this.zs)},gv.prototype=Object.create(vb.prototype),gv.prototype.constructor=gv,gv.prototype.As=gv,gv.Bs={},s.VoidPtr=gv,gv.prototype.__destroy__=function(){kr(this.zs)},bv.prototype=Object.create(zb.prototype),bv.prototype.constructor=bv,bv.prototype.As=bv,bv.Bs={},s.btConeTwistConstraint=bv,bv.prototype.setLimit=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ys(n,t,e)},bv.prototype.setAngularOnly=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Vs(e,t)},bv.prototype.setDamping=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),qs(e,t)},bv.prototype.enableMotor=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Gs(e,t)},bv.prototype.setMaxMotorImpulse=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Zs(e,t)},bv.prototype.setMaxMotorImpulseNormalized=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Xs(e,t)},bv.prototype.setMotorTarget=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Qs(e,t)},bv.prototype.setMotorTargetInConstraintSpace=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Js(e,t)},bv.prototype.enableFeedback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Hs(e,t)},bv.prototype.getBreakingImpulseThreshold=function(){return Us(this.zs)},bv.prototype.setBreakingImpulseThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ws(e,t)},bv.prototype.getParam=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),ks(n,t,e)},bv.prototype.setParam=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Ks(r,t,e,n)},bv.prototype.__destroy__=function(){Bs(this.zs)},vv.prototype=Object.create(zb.prototype),vv.prototype.constructor=vv,vv.prototype.As=vv,vv.Bs={},s.btHingeConstraint=vv,vv.prototype.setLimit=function(t,e,n,r,i){var o=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),void 0===i?hh(o,t,e,n,r):dh(o,t,e,n,r,i)},vv.prototype.enableAngularMotor=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),oh(r,t,e,n)},vv.prototype.setAngularOnly=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ph(e,t)},vv.prototype.enableMotor=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ah(e,t)},vv.prototype.setMaxMotorImpulse=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),fh(e,t)},vv.prototype.setMotorTarget=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),mh(n,t,e)},vv.prototype.enableFeedback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),sh(e,t)},vv.prototype.getBreakingImpulseThreshold=function(){return ch(this.zs)},vv.prototype.setBreakingImpulseThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),uh(e,t)},vv.prototype.getParam=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),lh(n,t,e)},vv.prototype.setParam=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),_h(r,t,e,n)},vv.prototype.__destroy__=function(){Ku(this.zs)},xv.prototype=Object.create(Ob.prototype),xv.prototype.constructor=xv,xv.prototype.As=xv,xv.Bs={},s.btConeShapeZ=xv,xv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ps(e,t)},xv.prototype.getLocalScaling=function(){return wb(Ls(this.zs),Bb)},xv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Es(n,t,e)},xv.prototype.__destroy__=function(){zs(this.zs)},wv.prototype=Object.create(Ob.prototype),wv.prototype.constructor=wv,wv.prototype.As=wv,wv.Bs={},s.btConeShapeX=wv,wv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Cs(e,t)},wv.prototype.getLocalScaling=function(){return wb(Ts(this.zs),Bb)},wv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ms(n,t,e)},wv.prototype.__destroy__=function(){ws(this.zs)},Sv.prototype=Object.create(kb.prototype),Sv.prototype.constructor=Sv,Sv.prototype.As=Sv,Sv.Bs={},s.btTriangleMesh=Sv,Sv.prototype.addTriangle=function(t,e,n,r){var i=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),void 0===r?ig(i,t,e,n):og(i,t,e,n,r)},Sv.prototype.findOrAddVertex=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),lg(n,t,e)},Sv.prototype.addIndex=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),rg(e,t)},Sv.prototype.getIndexedMeshArray=function(){return wb(pg(this.zs),uv)},Sv.prototype.setScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ug(e,t)},Sv.prototype.__destroy__=function(){ng(this.zs)},Mv.prototype=Object.create(Tb.prototype),Mv.prototype.constructor=Mv,Mv.prototype.As=Mv,Mv.Bs={},s.btConvexHullShape=Mv,Mv.prototype.addPoint=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),void 0===e?ba(n,t):va(n,t,e)},Mv.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ra(e,t)},Mv.prototype.getMargin=function(){return za(this.zs)},Mv.prototype.getNumVertices=function(){return Aa(this.zs)},Mv.prototype.initializePolyhedralFeatures=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),!!Ea(e,t)},Mv.prototype.recalcLocalAabb=function(){La(this.zs)},Mv.prototype.getConvexPolyhedron=function(){return wb(Ta(this.zs),Iv)},Mv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Pa(e,t)},Mv.prototype.getLocalScaling=function(){return wb(Ca(this.zs),Bb)},Mv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ma(n,t,e)},Mv.prototype.__destroy__=function(){ga(this.zs)},Tv.prototype=Object.create(vb.prototype),Tv.prototype.constructor=Tv,Tv.prototype.As=Tv,Tv.Bs={},s.btCollisionObjectWrapper=Tv,Tv.prototype.getWorldTransform=function(){return wb(to(this.zs),Xv)},Tv.prototype.getCollisionObject=function(){return wb(Ki(this.zs),Cb)},Tv.prototype.getCollisionShape=function(){return wb($i(this.zs),Tb)},Cv.prototype=Object.create(vb.prototype),Cv.prototype.constructor=Cv,Cv.prototype.As=Cv,Cv.Bs={},s.btShapeHull=Cv,Cv.prototype.buildHull=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),!!uy(e,t)},Cv.prototype.numVertices=function(){return dy(this.zs)},Cv.prototype.getVertexPointer=function(){return wb(hy(this.zs),Bb)},Cv.prototype.__destroy__=function(){ly(this.zs)},zv.prototype=Object.create(Vb.prototype),zv.prototype.constructor=zv,zv.prototype.As=zv,zv.Bs={},s.btDefaultMotionState=zv,zv.prototype.getWorldTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Pc(e,t)},zv.prototype.setWorldTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Dc(e,t)},zv.prototype.get_m_graphicsWorldTrans=zv.prototype.It=function(){return wb(Rc(this.zs),Xv)},zv.prototype.set_m_graphicsWorldTrans=zv.prototype.av=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ic(e,t)},Object.defineProperty(zv.prototype,"m_graphicsWorldTrans",{get:zv.prototype.It,set:zv.prototype.av}),zv.prototype.__destroy__=function(){zc(this.zs)},Av.prototype=Object.create(Bb.prototype),Av.prototype.constructor=Av,Av.prototype.As=Av,Av.Bs={},s.btVector4=Av,Av.prototype.w=Av.prototype.ht=function(){return tb(this.zs)},Av.prototype.setValue=function(t,e,n,r){var i=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),Jg(i,t,e,n,r)},Av.prototype.length=Av.prototype.length=function(){return Vg(this.zs)},Av.prototype.length2=function(){return kg(this.zs)},Av.prototype.x=Av.prototype.x=function(){return eb(this.zs)},Av.prototype.y=Av.prototype.y=function(){return nb(this.zs)},Av.prototype.z=Av.prototype.z=function(){return rb(this.zs)},Av.prototype.setX=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Qg(e,t)},Av.prototype.setY=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Kg(e,t)},Av.prototype.setZ=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),$g(e,t)},Av.prototype.normalize=Av.prototype.normalize=function(){Wg(this.zs)},Av.prototype.rotate=Av.prototype.rotate=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),wb(Zg(n,t,e),Bb)},Av.prototype.dot=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),Ug(e,t)},Av.prototype.op_mul=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Yg(e,t),Bb)},Av.prototype.op_add=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(qg(e,t),Bb)},Av.prototype.op_sub=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Xg(e,t),Bb)},Av.prototype.__destroy__=function(){Ng(this.zs)},Ev.prototype=Object.create(vb.prototype),Ev.prototype.constructor=Ev,Ev.prototype.As=Ev,Ev.Bs={},s.btDefaultCollisionConstructionInfo=Ev,Ev.prototype.__destroy__=function(){Tc(this.zs)},Lv.prototype=Object.create(vb.prototype),Lv.prototype.constructor=Lv,Lv.prototype.As=Lv,Lv.Bs={},s.btVector3Array=Lv,Lv.prototype.size=Lv.prototype.size=function(){return vg(this.zs)},Lv.prototype.at=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(bg(e,t),Bb)},Lv.prototype.__destroy__=function(){gg(this.zs)},Pv.prototype=Object.create(vb.prototype),Pv.prototype.constructor=Pv,Pv.prototype.As=Pv,Pv.Bs={},s.btConstraintSolver=Pv,Pv.prototype.__destroy__=function(){pa(this.zs)},Rv.prototype=Object.create(Nb.prototype),Rv.prototype.constructor=Rv,Rv.prototype.As=Rv,Rv.Bs={},s.btCylinderShapeX=Rv,Rv.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ic(e,t)},Rv.prototype.getMargin=function(){return nc(this.zs)},Rv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),rc(e,t)},Rv.prototype.getLocalScaling=function(){return wb(ec(this.zs),Bb)},Rv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),tc(n,t,e)},Rv.prototype.__destroy__=function(){Ka(this.zs)},Dv.prototype=Object.create(Nb.prototype),Dv.prototype.constructor=Dv,Dv.prototype.As=Dv,Dv.Bs={},s.btCylinderShapeZ=Dv,Dv.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),uc(e,t)},Dv.prototype.getMargin=function(){return lc(this.zs)},Dv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),pc(e,t)},Dv.prototype.getLocalScaling=function(){return wb(cc(this.zs),Bb)},Dv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),ac(n,t,e)},Dv.prototype.__destroy__=function(){oc(this.zs)},Iv.prototype=Object.create(vb.prototype),Iv.prototype.constructor=Iv,Iv.prototype.As=Iv,Iv.Bs={},s.btConvexPolyhedron=Iv,Iv.prototype.get_m_vertices=Iv.prototype.Au=function(){return wb(Oa(this.zs),Lv)},Iv.prototype.set_m_vertices=Iv.prototype.Pv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ba(e,t)},Object.defineProperty(Iv.prototype,"m_vertices",{get:Iv.prototype.Au,set:Iv.prototype.Pv}),Iv.prototype.get_m_faces=Iv.prototype.Ft=function(){return wb(Ia(this.zs),Uv)},Iv.prototype.set_m_faces=Iv.prototype.Yu=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ja(e,t)},Object.defineProperty(Iv.prototype,"m_faces",{get:Iv.prototype.Ft,set:Iv.prototype.Yu}),Iv.prototype.__destroy__=function(){Da(this.zs)},Ov.prototype=Object.create(vb.prototype),Ov.prototype.constructor=Ov,Ov.prototype.As=Ov,Ov.Bs={},s.btSequentialImpulseConstraintSolver=Ov,Ov.prototype.__destroy__=function(){ay(this.zs)},jv.prototype=Object.create(Tb.prototype),jv.prototype.constructor=jv,jv.prototype.As=jv,jv.Bs={},s.btMultiSphereShape=jv,jv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ld(e,t)},jv.prototype.getLocalScaling=function(){return wb(Ed(this.zs),Bb)},jv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ad(n,t,e)},jv.prototype.__destroy__=function(){Cd(this.zs)},Bv.prototype=Object.create(vb.prototype),Bv.prototype.constructor=Bv,Bv.prototype.As=Bv,Bv.Bs={},s.btIntArray=Bv,Bv.prototype.size=Bv.prototype.size=function(){return Rh(this.zs)},Bv.prototype.at=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),Ph(e,t)},Bv.prototype.__destroy__=function(){Lh(this.zs)},Fv.prototype=Object.create(Rb.prototype),Fv.prototype.constructor=Fv,Fv.prototype.As=Fv,Fv.Bs={},s.btDiscreteDynamicsWorld=Fv,Fv.prototype.setGravity=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),dl(e,t)},Fv.prototype.getGravity=function(){return wb(tl(this.zs),Bb)},Fv.prototype.addRigidBody=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),void 0===e?Uc(r,t):void 0===n?_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(r,t,e):kc(r,t,e,n)},Fv.prototype.removeRigidBody=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),al(e,t)},Fv.prototype.addConstraint=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),void 0===e?Hc(n,t):Gc(n,t,e)},Fv.prototype.removeConstraint=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),sl(e,t)},Fv.prototype.stepSimulation=function(t,e,n){var r=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),void 0===e?fl(r,t):void 0===n?ml(r,t,e):_l(r,t,e,n)},Fv.prototype.setContactAddedCallback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),cl(e,t)},Fv.prototype.setContactProcessedCallback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),pl(e,t)},Fv.prototype.setContactDestroyedCallback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ll(e,t)},Fv.prototype.getDispatcher=function(){return wb($c(this.zs),Gb)},Fv.prototype.rayTest=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),rl(r,t,e,n)},Fv.prototype.getPairCache=function(){return wb(el(this.zs),Vv)},Fv.prototype.getDispatchInfo=function(){return wb(Kc(this.zs),Jb)},Fv.prototype.addCollisionObject=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),void 0===e?Bc(r,t):void 0===n?Fc(r,t,e):Nc(r,t,e,n)},Fv.prototype.removeCollisionObject=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ol(e,t)},Fv.prototype.getBroadphase=function(){return wb(Jc(this.zs),Kb)},Fv.prototype.convexSweepTest=function(t,e,n,r,i){var o=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),Yc(o,t,e,n,r,i)},Fv.prototype.contactPairTest=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Wc(r,t,e,n)},Fv.prototype.contactTest=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),qc(n,t,e)},Fv.prototype.setForceUpdateAllAabbs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),hl(e,t)},Fv.prototype.updateSingleAabb=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),yl(e,t)},Fv.prototype.setDebugDrawer=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ul(e,t)},Fv.prototype.getDebugDrawer=function(){return wb(Qc(this.zs),Pb)},Fv.prototype.debugDrawWorld=function(){Zc(this.zs)},Fv.prototype.debugDrawObject=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Xc(r,t,e,n)},Fv.prototype.addAction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),jc(e,t)},Fv.prototype.removeAction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),il(e,t)},Fv.prototype.getSolverInfo=function(){return wb(nl(this.zs),ux)},Fv.prototype.__destroy__=function(){Oc(this.zs)},Nv.prototype=Object.create(vb.prototype),Nv.prototype.constructor=Nv,Nv.prototype.As=Nv,Nv.Bs={},s.btGhostPairCallback=Nv,Nv.prototype.__destroy__=function(){ku(this.zs)},Hv.prototype=Object.create(vb.prototype),Hv.prototype.constructor=Hv,Hv.prototype.As=Hv,Hv.Bs={},s.btOverlappingPairCallback=Hv,Hv.prototype.__destroy__=function(){Od(this.zs)},Gv.prototype=Object.create(jb.prototype),Gv.prototype.constructor=Gv,Gv.prototype.As=Gv,Gv.Bs={},s.btKinematicCharacterController=Gv,Gv.prototype.setUpAxis=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Zh(e,t)},Gv.prototype.setWalkDirection=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),$h(e,t)},Gv.prototype.setVelocityForTimeInterval=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Kh(n,t,e)},Gv.prototype.warp=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ed(e,t)},Gv.prototype.preStep=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),kh(e,t)},Gv.prototype.playerStep=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Uh(n,t,e)},Gv.prototype.setFallSpeed=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Vh(e,t)},Gv.prototype.setJumpSpeed=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),qh(e,t)},Gv.prototype.setMaxJumpHeight=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Yh(e,t)},Gv.prototype.canJump=function(){return!!jh(this.zs)},Gv.prototype.jump=function(){Hh(this.zs)},Gv.prototype.setGravity=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Wh(e,t)},Gv.prototype.getGravity=function(){return Fh(this.zs)},Gv.prototype.setMaxSlope=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Xh(e,t)},Gv.prototype.getMaxSlope=function(){return Nh(this.zs)},Gv.prototype.getGhostObject=function(){return wb(Bh(this.zs),ex)},Gv.prototype.setUseGhostSweepTest=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Qh(e,t)},Gv.prototype.onGround=function(){return!!Gh(this.zs)},Gv.prototype.setUpInterpolate=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Jh(e,t)},Gv.prototype.updateAction=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),td(n,t,e)},Gv.prototype.__destroy__=function(){Dh(this.zs)},Uv.prototype=Object.create(vb.prototype),Uv.prototype.constructor=Uv,Uv.prototype.As=Uv,Uv.Bs={},s.btFaceArray=Uv,Uv.prototype.size=Uv.prototype.size=function(){return bp(this.zs)},Uv.prototype.at=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(gp(e,t),sx)},Uv.prototype.__destroy__=function(){yp(this.zs)},kv.prototype=Object.create(Eb.prototype),kv.prototype.constructor=kv,kv.prototype.As=kv,kv.Bs={},s.btStaticPlaneShape=kv,kv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),By(e,t)},kv.prototype.getLocalScaling=function(){return wb(jy(this.zs),Bb)},kv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Oy(n,t,e)},kv.prototype.__destroy__=function(){Dy(this.zs)},Vv.prototype=Object.create(vb.prototype),Vv.prototype.constructor=Vv,Vv.prototype.As=Vv,Vv.Bs={},s.btOverlappingPairCache=Vv,Vv.prototype.setInternalGhostPairCallback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Id(e,t)},Vv.prototype.removeOverlappingPairsContainingProxy=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Dd(n,t,e)},Vv.prototype.getNumOverlappingPairs=function(){return Rd(this.zs)},Vv.prototype.__destroy__=function(){Pd(this.zs)},Wv.prototype=Object.create(vb.prototype),Wv.prototype.constructor=Wv,Wv.prototype.As=Wv,Wv.Bs={},s.btIndexedMesh=Wv,Wv.prototype.get_m_numTriangles=Wv.prototype.bu=function(){return Ah(this.zs)},Wv.prototype.set_m_numTriangles=Wv.prototype.sv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Eh(e,t)},Object.defineProperty(Wv.prototype,"m_numTriangles",{get:Wv.prototype.bu,set:Wv.prototype.sv}),Wv.prototype.__destroy__=function(){zh(this.zs)},qv.prototype=Object.create(vb.prototype),qv.prototype.constructor=qv,qv.prototype.As=qv,qv.Bs={},s.Vec3Real=qv,qv.prototype.X=function(){return Nr(this.zs)},qv.prototype.Y=function(){return Hr(this.zs)},qv.prototype.Z=function(){return Gr(this.zs)},qv.prototype.__destroy__=function(){Ur(this.zs)},Yv.prototype=Object.create(zb.prototype),Yv.prototype.constructor=Yv,Yv.prototype.As=Yv,Yv.Bs={},s.btFixedConstraint=Yv,Yv.prototype.enableFeedback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),zp(e,t)},Yv.prototype.getBreakingImpulseThreshold=function(){return Ap(this.zs)},Yv.prototype.setBreakingImpulseThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Lp(e,t)},Yv.prototype.getParam=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ep(n,t,e)},Yv.prototype.setParam=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Pp(r,t,e,n)},Yv.prototype.__destroy__=function(){Tp(this.zs)},Xv.prototype=Object.create(vb.prototype),Xv.prototype.constructor=Xv,Xv.prototype.As=Xv,Xv.Bs={},s.btTransform=Xv,Xv.prototype.setIdentity=function(){Zy(this.zs)},Xv.prototype.setOrigin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Jy(e,t)},Xv.prototype.setRotation=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Qy(e,t)},Xv.prototype.getOrigin=function(){return wb(Vy(this.zs),Bb)},Xv.prototype.getRotation=function(){return wb(Wy(this.zs),lx)},Xv.prototype.getBasis=function(){return wb(ky(this.zs),Xb)},Xv.prototype.setFromOpenGLMatrix=function(t){var e=this.zs;o.Is(),"object"==typeof t&&(t=Mb(t)),Xy(e,t)},Xv.prototype.inverse=Xv.prototype.inverse=function(){return wb(qy(this.zs),Xv)},Xv.prototype.op_mul=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(Yy(e,t),Xv)},Xv.prototype.__destroy__=function(){Hy(this.zs)},Zv.prototype=Object.create(Yb.prototype),Zv.prototype.constructor=Zv,Zv.prototype.As=Zv,Zv.Bs={},s.ClosestRayResultCallback=Zv,Zv.prototype.hasHit=function(){return!!Se(this.zs)},Zv.prototype.get_m_rayFromWorld=Zv.prototype.bt=function(){return wb(xe(this.zs),Bb)},Zv.prototype.set_m_rayFromWorld=Zv.prototype.et=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Le(e,t)},Object.defineProperty(Zv.prototype,"m_rayFromWorld",{get:Zv.prototype.bt,set:Zv.prototype.et}),Zv.prototype.get_m_rayToWorld=Zv.prototype.ct=function(){return wb(we(this.zs),Bb)},Zv.prototype.set_m_rayToWorld=Zv.prototype.ft=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Pe(e,t)},Object.defineProperty(Zv.prototype,"m_rayToWorld",{get:Zv.prototype.ct,set:Zv.prototype.ft}),Zv.prototype.get_m_hitNormalWorld=Zv.prototype.Ns=function(){return wb(be(this.zs),Bb)},Zv.prototype.set_m_hitNormalWorld=Zv.prototype.Ss=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ae(e,t)},Object.defineProperty(Zv.prototype,"m_hitNormalWorld",{get:Zv.prototype.Ns,set:Zv.prototype.Ss}),Zv.prototype.get_m_hitPointWorld=Zv.prototype.Os=function(){return wb(ve(this.zs),Bb)},Zv.prototype.set_m_hitPointWorld=Zv.prototype.Ts=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ee(e,t)},Object.defineProperty(Zv.prototype,"m_hitPointWorld",{get:Zv.prototype.Os,set:Zv.prototype.Ts}),Zv.prototype.get_m_collisionFilterGroup=Zv.prototype.Ds=function(){return _e(this.zs)},Zv.prototype.set_m_collisionFilterGroup=Zv.prototype.Fs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Te(e,t)},Object.defineProperty(Zv.prototype,"m_collisionFilterGroup",{get:Zv.prototype.Ds,set:Zv.prototype.Fs}),Zv.prototype.get_m_collisionFilterMask=Zv.prototype.Es=function(){return ye(this.zs)},Zv.prototype.set_m_collisionFilterMask=Zv.prototype.Gs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ce(e,t)},Object.defineProperty(Zv.prototype,"m_collisionFilterMask",{get:Zv.prototype.Es,set:Zv.prototype.Gs}),Zv.prototype.get_m_closestHitFraction=Zv.prototype.Hs=function(){return me(this.zs)},Zv.prototype.set_m_closestHitFraction=Zv.prototype.Js=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Me(e,t)},Object.defineProperty(Zv.prototype,"m_closestHitFraction",{get:Zv.prototype.Hs,set:Zv.prototype.Js}),Zv.prototype.get_m_collisionObject=Zv.prototype.Ms=function(){return wb(ge(this.zs),Cb)},Zv.prototype.set_m_collisionObject=Zv.prototype.Rs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ze(e,t)},Object.defineProperty(Zv.prototype,"m_collisionObject",{get:Zv.prototype.Ms,set:Zv.prototype.Rs}),Zv.prototype.__destroy__=function(){fe(this.zs)},Jv.prototype=Object.create(qb.prototype),Jv.prototype.constructor=Jv,Jv.prototype.As=Jv,Jv.Bs={},s.ConcreteContactResultCallback=Jv,Jv.prototype.addSingleResult=function(t,e,n,r,i,o,s){var a=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),o&&"object"==typeof o&&(o=o.zs),s&&"object"==typeof s&&(s=s.zs),Ie(a,t,e,n,r,i,o,s)},Jv.prototype.__destroy__=function(){De(this.zs)},Qv.prototype=Object.create(Db.prototype),Qv.prototype.constructor=Qv,Qv.prototype.As=Qv,Qv.Bs={},s.btBvhTriangleMeshShape=Qv,Qv.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),_i(e,t)},Qv.prototype.getLocalScaling=function(){return wb(mi(this.zs),Bb)},Qv.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),fi(n,t,e)},Qv.prototype.__destroy__=function(){ui(this.zs)},Kv.prototype=Object.create(vb.prototype),Kv.prototype.constructor=Kv,Kv.prototype.As=Kv,Kv.Bs={},s.Vec3Long=Kv,Kv.prototype.X=function(){return Ir(this.zs)},Kv.prototype.Y=function(){return Or(this.zs)},Kv.prototype.Z=function(){return jr(this.zs)},Kv.prototype.__destroy__=function(){Br(this.zs)},$v.prototype=Object.create(vb.prototype),$v.prototype.constructor=$v,$v.prototype.As=$v,$v.Bs={},s.btConstCollisionObjectArray=$v,$v.prototype.size=$v.prototype.size=function(){return ea(this.zs)},$v.prototype.at=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(ta(e,t),Cb)},$v.prototype.__destroy__=function(){$s(this.zs)},tx.prototype=Object.create(zb.prototype),tx.prototype.constructor=tx,tx.prototype.As=tx,tx.Bs={},s.btSliderConstraint=tx,tx.prototype.setLowerLinLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),wy(e,t)},tx.prototype.setUpperLinLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ty(e,t)},tx.prototype.setLowerAngLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),xy(e,t)},tx.prototype.setUpperAngLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),My(e,t)},tx.prototype.enableFeedback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),yy(e,t)},tx.prototype.getBreakingImpulseThreshold=function(){return gy(this.zs)},tx.prototype.setBreakingImpulseThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),vy(e,t)},tx.prototype.getParam=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),by(n,t,e)},tx.prototype.setParam=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Sy(r,t,e,n)},tx.prototype.__destroy__=function(){fy(this.zs)},ex.prototype=Object.create(Ib.prototype),ex.prototype.constructor=ex,ex.prototype.As=ex,ex.Bs={},s.btPairCachingGhostObject=ex,ex.prototype.setAnisotropicFriction=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),rf(n,t,e)},ex.prototype.getCollisionShape=function(){return wb(kd(this.zs),Tb)},ex.prototype.setContactProcessingThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),lf(e,t)},ex.prototype.setActivationState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),nf(e,t)},ex.prototype.forceActivationState=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Hd(e,t)},ex.prototype.activate=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),void 0===t?Bd(e):Fd(e,t)},ex.prototype.isActive=function(){return!!Kd(this.zs)},ex.prototype.isKinematicObject=function(){return!!$d(this.zs)},ex.prototype.isStaticObject=function(){return!!tf(this.zs)},ex.prototype.isStaticOrKinematicObject=function(){return!!ef(this.zs)},ex.prototype.getRestitution=function(){return Yd(this.zs)},ex.prototype.getFriction=function(){return Vd(this.zs)},ex.prototype.getRollingFriction=function(){return Xd(this.zs)},ex.prototype.setRestitution=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),uf(e,t)},ex.prototype.setFriction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),pf(e,t)},ex.prototype.setRollingFriction=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),hf(e,t)},ex.prototype.getWorldTransform=function(){return wb(Qd(this.zs),Xv)},ex.prototype.getCollisionFlags=function(){return Ud(this.zs)},ex.prototype.setCollisionFlags=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),af(e,t)},ex.prototype.setWorldTransform=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),mf(e,t)},ex.prototype.setCollisionShape=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),cf(e,t)},ex.prototype.setCcdMotionThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),of(e,t)},ex.prototype.setCcdSweptSphereRadius=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),sf(e,t)},ex.prototype.getUserIndex=function(){return Zd(this.zs)},ex.prototype.setUserIndex=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),df(e,t)},ex.prototype.getUserPointer=function(){return wb(Jd(this.zs),gv)},ex.prototype.setUserPointer=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ff(e,t)},ex.prototype.getBroadphaseHandle=function(){return wb(Gd(this.zs),ix)},ex.prototype.getNumOverlappingObjects=function(){return Wd(this.zs)},ex.prototype.getOverlappingObject=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(qd(e,t),Cb)},ex.prototype.__destroy__=function(){jd(this.zs)},nx.prototype=Object.create(vb.prototype),nx.prototype.constructor=nx,nx.prototype.As=nx,nx.Bs={},s.btManifoldPoint=nx,nx.prototype.getPositionWorldOnA=function(){return wb(od(this.zs),Bb)},nx.prototype.getPositionWorldOnB=function(){return wb(sd(this.zs),Bb)},nx.prototype.getAppliedImpulse=function(){return rd(this.zs)},nx.prototype.getDistance=function(){return id(this.zs)},nx.prototype.get_m_localPointA=nx.prototype.St=function(){return wb(ad(this.zs),Bb)},nx.prototype.set_m_localPointA=nx.prototype.kv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),dd(e,t)},Object.defineProperty(nx.prototype,"m_localPointA",{get:nx.prototype.St,set:nx.prototype.kv}),nx.prototype.get_m_localPointB=nx.prototype.Tt=function(){return wb(cd(this.zs),Bb)},nx.prototype.set_m_localPointB=nx.prototype.lv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),fd(e,t)},Object.defineProperty(nx.prototype,"m_localPointB",{get:nx.prototype.Tt,set:nx.prototype.lv}),nx.prototype.get_m_positionWorldOnB=nx.prototype.iu=function(){return wb(ud(this.zs),Bb)},nx.prototype.set_m_positionWorldOnB=nx.prototype.yv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),yd(e,t)},Object.defineProperty(nx.prototype,"m_positionWorldOnB",{get:nx.prototype.iu,set:nx.prototype.yv}),nx.prototype.get_m_positionWorldOnA=nx.prototype.hu=function(){return wb(pd(this.zs),Bb)},nx.prototype.set_m_positionWorldOnA=nx.prototype.xv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),_d(e,t)},Object.defineProperty(nx.prototype,"m_positionWorldOnA",{get:nx.prototype.hu,set:nx.prototype.xv}),nx.prototype.get_m_normalWorldOnB=nx.prototype.$t=function(){return wb(ld(this.zs),Bb)},nx.prototype.set_m_normalWorldOnB=nx.prototype.qv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),md(e,t)},Object.defineProperty(nx.prototype,"m_normalWorldOnB",{get:nx.prototype.$t,set:nx.prototype.qv}),nx.prototype.get_m_userPersistentData=nx.prototype.zu=function(){return hd(this.zs)},nx.prototype.set_m_userPersistentData=nx.prototype.Ov=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),gd(e,t)},Object.defineProperty(nx.prototype,"m_userPersistentData",{get:nx.prototype.zu,set:nx.prototype.Ov}),nx.prototype.__destroy__=function(){nd(this.zs)},rx.prototype=Object.create(zb.prototype),rx.prototype.constructor=rx,rx.prototype.As=rx,rx.Bs={},s.btPoint2PointConstraint=rx,rx.prototype.setPivotA=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Df(e,t)},rx.prototype.setPivotB=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),If(e,t)},rx.prototype.getPivotInA=function(){return wb(Af(this.zs),Bb)},rx.prototype.getPivotInB=function(){return wb(Ef(this.zs),Bb)},rx.prototype.enableFeedback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Tf(e,t)},rx.prototype.getBreakingImpulseThreshold=function(){return Cf(this.zs)},rx.prototype.setBreakingImpulseThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Pf(e,t)},rx.prototype.getParam=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),zf(n,t,e)},rx.prototype.setParam=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),Rf(r,t,e,n)},rx.prototype.get_m_setting=rx.prototype.mu=function(){return wb(Lf(this.zs),cv)},rx.prototype.set_m_setting=rx.prototype.Cv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Of(e,t)},Object.defineProperty(rx.prototype,"m_setting",{get:rx.prototype.mu,set:rx.prototype.Cv}),rx.prototype.__destroy__=function(){wf(this.zs)},ix.prototype=Object.create(vb.prototype),ix.prototype.constructor=ix,ix.prototype.As=ix,ix.Bs={},s.btBroadphaseProxy=ix,ix.prototype.get_m_collisionFilterGroup=ix.prototype.Ds=function(){return ai(this.zs)},ix.prototype.set_m_collisionFilterGroup=ix.prototype.Fs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),li(e,t)},Object.defineProperty(ix.prototype,"m_collisionFilterGroup",{get:ix.prototype.Ds,set:ix.prototype.Fs}),ix.prototype.get_m_collisionFilterMask=ix.prototype.Es=function(){return ci(this.zs)},ix.prototype.set_m_collisionFilterMask=ix.prototype.Gs=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),pi(e,t)},Object.defineProperty(ix.prototype,"m_collisionFilterMask",{get:ix.prototype.Es,set:ix.prototype.Gs}),ix.prototype.__destroy__=function(){si(this.zs)},ox.prototype=Object.create(Tb.prototype),ox.prototype.constructor=ox,ox.prototype.As=ox,ox.Bs={},s.btBoxShape=ox,ox.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ri(e,t)},ox.prototype.getMargin=function(){return ei(this.zs)},ox.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ni(e,t)},ox.prototype.getLocalScaling=function(){return wb(ti(this.zs),Bb)},ox.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),$r(n,t,e)},ox.prototype.__destroy__=function(){Qr(this.zs)},sx.prototype=Object.create(vb.prototype),sx.prototype.constructor=sx,sx.prototype.As=sx,sx.Bs={},s.btFace=sx,sx.prototype.get_m_indices=sx.prototype.Pt=function(){return wb(xp(this.zs),Bv)},sx.prototype.set_m_indices=sx.prototype.hv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Sp(e,t)},Object.defineProperty(sx.prototype,"m_indices",{get:sx.prototype.Pt,set:sx.prototype.hv}),sx.prototype.get_m_plane=sx.prototype.eu=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wp(e,t)},sx.prototype.set_m_plane=sx.prototype.vv=function(t,e){var n=this.zs;o.Is(),t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Mp(n,t,e)},Object.defineProperty(sx.prototype,"m_plane",{get:sx.prototype.eu,set:sx.prototype.vv}),sx.prototype.__destroy__=function(){vp(this.zs)},ax.prototype=Object.create(Pb.prototype),ax.prototype.constructor=ax,ax.prototype.As=ax,ax.Bs={},s.DebugDrawer=ax,ax.prototype.drawLine=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),en(r,t,e,n)},ax.prototype.drawContactPoint=function(t,e,n,r,i){var o=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),i&&"object"==typeof i&&(i=i.zs),tn(o,t,e,n,r,i)},ax.prototype.reportErrorWarning=function(t){var e=this.zs;o.Is(),t=t&&"object"==typeof t?t.zs:Sb(t),rn(e,t)},ax.prototype.draw3dText=function(t,e){var n=this.zs;o.Is(),t&&"object"==typeof t&&(t=t.zs),e=e&&"object"==typeof e?e.zs:Sb(e),$e(n,t,e)},ax.prototype.setDebugMode=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),on(e,t)},ax.prototype.getDebugMode=function(){return nn(this.zs)},ax.prototype.__destroy__=function(){Ke(this.zs)},cx.prototype=Object.create(Lb.prototype),cx.prototype.constructor=cx,cx.prototype.As=cx,cx.Bs={},s.btCapsuleShapeX=cx,cx.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ci(e,t)},cx.prototype.getMargin=function(){return wi(this.zs)},cx.prototype.getUpAxis=function(){return Mi(this.zs)},cx.prototype.getRadius=function(){return Si(this.zs)},cx.prototype.getHalfHeight=function(){return vi(this.zs)},cx.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ti(e,t)},cx.prototype.getLocalScaling=function(){return wb(xi(this.zs),Bb)},cx.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),bi(n,t,e)},cx.prototype.__destroy__=function(){yi(this.zs)},lx.prototype=Object.create(Fb.prototype),lx.prototype.constructor=lx,lx.prototype.As=lx,lx.Bs={},s.btQuaternion=lx,lx.prototype.setValue=function(t,e,n,r){var i=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),r&&"object"==typeof r&&(r=r.zs),um(i,t,e,n,r)},lx.prototype.setEulerZYX=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),lm(r,t,e,n)},lx.prototype.setRotation=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),pm(n,t,e)},lx.prototype.normalize=lx.prototype.normalize=function(){nm(this.zs)},lx.prototype.length2=function(){return tm(this.zs)},lx.prototype.length=lx.prototype.length=function(){return em(this.zs)},lx.prototype.dot=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),Zf(e,t)},lx.prototype.normalized=function(){return wb(rm(this.zs),lx)},lx.prototype.getAxis=function(){return wb(Kf(this.zs),Bb)},lx.prototype.inverse=lx.prototype.inverse=function(){return wb($f(this.zs),lx)},lx.prototype.getAngle=function(){return Qf(this.zs)},lx.prototype.getAngleShortestPath=function(){return Jf(this.zs)},lx.prototype.angle=lx.prototype.angle=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),Yf(e,t)},lx.prototype.angleShortestPath=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),qf(e,t)},lx.prototype.op_add=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(im(e,t),lx)},lx.prototype.op_sub=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(cm(e,t),lx)},lx.prototype.op_mul=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(sm(e,t),lx)},lx.prototype.op_mulq=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(am(e,t),lx)},lx.prototype.op_div=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),wb(om(e,t),lx)},lx.prototype.x=lx.prototype.x=function(){return ym(this.zs)},lx.prototype.y=lx.prototype.y=function(){return gm(this.zs)},lx.prototype.z=lx.prototype.z=function(){return bm(this.zs)},lx.prototype.w=lx.prototype.ht=function(){return _m(this.zs)},lx.prototype.setX=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),dm(e,t)},lx.prototype.setY=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),fm(e,t)},lx.prototype.setZ=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),mm(e,t)},lx.prototype.setW=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),hm(e,t)},lx.prototype.__destroy__=function(){Wf(this.zs)},px.prototype=Object.create(Lb.prototype),px.prototype.constructor=px,px.prototype.As=px,px.Bs={},s.btCapsuleShapeZ=px,px.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ji(e,t)},px.prototype.getMargin=function(){return Ri(this.zs)},px.prototype.getUpAxis=function(){return Ii(this.zs)},px.prototype.getRadius=function(){return Di(this.zs)},px.prototype.getHalfHeight=function(){return Li(this.zs)},px.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Oi(e,t)},px.prototype.getLocalScaling=function(){return wb(Pi(this.zs),Bb)},px.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ei(n,t,e)},px.prototype.__destroy__=function(){zi(this.zs)},ux.prototype=Object.create(vb.prototype),ux.prototype.constructor=ux,ux.prototype.As=ux,ux.Bs={},s.btContactSolverInfo=ux,ux.prototype.get_m_splitImpulse=ux.prototype.ou=function(){return!!fa(this.zs)},ux.prototype.set_m_splitImpulse=ux.prototype.Ev=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ya(e,t)},Object.defineProperty(ux.prototype,"m_splitImpulse",{get:ux.prototype.ou,set:ux.prototype.Ev}),ux.prototype.get_m_splitImpulsePenetrationThreshold=ux.prototype.pu=function(){return da(this.zs)},ux.prototype.set_m_splitImpulsePenetrationThreshold=ux.prototype.Fv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),_a(e,t)},Object.defineProperty(ux.prototype,"m_splitImpulsePenetrationThreshold",{get:ux.prototype.pu,set:ux.prototype.Fv}),ux.prototype.get_m_numIterations=ux.prototype.au=function(){return ha(this.zs)},ux.prototype.set_m_numIterations=ux.prototype.rv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),ma(e,t)},Object.defineProperty(ux.prototype,"m_numIterations",{get:ux.prototype.au,set:ux.prototype.rv}),ux.prototype.__destroy__=function(){ua(this.zs)},hx.prototype=Object.create(Ub.prototype),hx.prototype.constructor=hx,hx.prototype.As=hx,hx.Bs={},s.btGeneric6DofSpringConstraint=hx,hx.prototype.enableSpring=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Zp(n,t,e)},hx.prototype.setStiffness=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),lu(n,t,e)},hx.prototype.setDamping=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),nu(n,t,e)},hx.prototype.setEquilibriumPoint=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),void 0===t?ru(n):void 0===e?iu(n,t):ou(n,t,e)},hx.prototype.setLinearLowerLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),su(e,t)},hx.prototype.setLinearUpperLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),au(e,t)},hx.prototype.setAngularLowerLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),$p(e,t)},hx.prototype.setAngularUpperLimit=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),tu(e,t)},hx.prototype.getFrameOffsetA=function(){return wb(Qp(this.zs),Xv)},hx.prototype.enableFeedback=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Xp(e,t)},hx.prototype.getBreakingImpulseThreshold=function(){return Jp(this.zs)},hx.prototype.setBreakingImpulseThreshold=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),eu(e,t)},hx.prototype.getParam=function(t,e){var n=this.zs;return t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Kp(n,t,e)},hx.prototype.setParam=function(t,e,n){var r=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),n&&"object"==typeof n&&(n=n.zs),cu(r,t,e,n)},hx.prototype.__destroy__=function(){Wp(this.zs)},dx.prototype=Object.create(Tb.prototype),dx.prototype.constructor=dx,dx.prototype.As=dx,dx.Bs={},s.btSphereShape=dx,dx.prototype.setMargin=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ry(e,t)},dx.prototype.getMargin=function(){return Ly(this.zs)},dx.prototype.setLocalScaling=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Py(e,t)},dx.prototype.getLocalScaling=function(){return wb(Ey(this.zs),Bb)},dx.prototype.calculateLocalInertia=function(t,e){var n=this.zs;t&&"object"==typeof t&&(t=t.zs),e&&"object"==typeof e&&(e=e.zs),Ay(n,t,e)},dx.prototype.__destroy__=function(){Cy(this.zs)},fx.prototype=Object.create(vb.prototype),fx.prototype.constructor=fx,fx.prototype.As=fx,fx.Bs={},s.ConvexHull=fx,fx.prototype.get_m_points=fx.prototype.gu=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),Ge(e,t)},Object.defineProperty(fx.prototype,"m_points",{get:fx.prototype.gu}),fx.prototype.get_m_triangles=fx.prototype.vu=function(t){var e=this.zs;return t&&"object"==typeof t&&(t=t.zs),Ue(e,t)},Object.defineProperty(fx.prototype,"m_triangles",{get:fx.prototype.vu}),fx.prototype.get_m_nPoints=fx.prototype.Yt=function(){return Ne(this.zs)},Object.defineProperty(fx.prototype,"m_nPoints",{get:fx.prototype.Yt}),fx.prototype.get_m_nTriangles=fx.prototype.Zt=function(){return He(this.zs)},Object.defineProperty(fx.prototype,"m_nTriangles",{get:fx.prototype.Zt}),fx.prototype.__destroy__=function(){Fe(this.zs)},mx.prototype=Object.create(vb.prototype),mx.prototype.constructor=mx,mx.prototype.As=mx,mx.Bs={},s.LocalConvexResult=mx,mx.prototype.get_m_hitCollisionObject=mx.prototype.Jt=function(){return wb(Mn(this.zs),Cb)},mx.prototype.set_m_hitCollisionObject=mx.prototype.bv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),En(e,t)},Object.defineProperty(mx.prototype,"m_hitCollisionObject",{get:mx.prototype.Jt,set:mx.prototype.bv}),mx.prototype.get_m_localShapeInfo=mx.prototype.Ut=function(){return wb(An(this.zs),lv)},mx.prototype.set_m_localShapeInfo=mx.prototype.mv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Dn(e,t)},Object.defineProperty(mx.prototype,"m_localShapeInfo",{get:mx.prototype.Ut,set:mx.prototype.mv}),mx.prototype.get_m_hitNormalLocal=mx.prototype.Mt=function(){return wb(Cn(this.zs),Bb)},mx.prototype.set_m_hitNormalLocal=mx.prototype.ev=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Pn(e,t)},Object.defineProperty(mx.prototype,"m_hitNormalLocal",{get:mx.prototype.Mt,set:mx.prototype.ev}),mx.prototype.get_m_hitPointLocal=mx.prototype.Nt=function(){return wb(zn(this.zs),Bb)},mx.prototype.set_m_hitPointLocal=mx.prototype.fv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Rn(e,t)},Object.defineProperty(mx.prototype,"m_hitPointLocal",{get:mx.prototype.Nt,set:mx.prototype.fv}),mx.prototype.get_m_hitFraction=mx.prototype.Kt=function(){return Tn(this.zs)},mx.prototype.set_m_hitFraction=mx.prototype.cv=function(t){var e=this.zs;t&&"object"==typeof t&&(t=t.zs),Ln(e,t)},Object.defineProperty(mx.prototype,"m_hitFraction",{get:mx.prototype.Kt,set:mx.prototype.cv}),mx.prototype.__destroy__=function(){Sn(this.zs)},function(){function t(){s.BT_CONSTRAINT_ERP=ub(),s.BT_CONSTRAINT_STOP_ERP=db(),s.BT_CONSTRAINT_CFM=pb(),s.BT_CONSTRAINT_STOP_CFM=hb(),s.PHY_FLOAT=sb(),s.PHY_DOUBLE=ib(),s.PHY_INTEGER=ab(),s.PHY_SHORT=cb(),s.PHY_FIXEDPOINT88=ob(),s.PHY_UCHAR=lb()}W?t():k.unshift(t)}(),this.Ammo=s,t});t.exports=o}).call(this,n(2),"/")},function(t,e){},function(t,e,n){(function(t){function n(t,e){for(var n=0,r=t.length-1;r>=0;r--){var i=t[r];"."===i?t.splice(r,1):".."===i?(t.splice(r,1),n++):n&&(t.splice(r,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}function r(t,e){if(t.filter)return t.filter(e);for(var n=[],r=0;r<t.length;r++)e(t[r],r,t)&&n.push(t[r]);return n}e.resolve=function(){for(var e="",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s=o>=0?arguments[o]:t.cwd();if("string"!=typeof s)throw new TypeError("Arguments to path.resolve must be strings");s&&(e=s+"/"+e,i="/"===s.charAt(0))}return(i?"/":"")+(e=n(r(e.split("/"),(function(t){return!!t})),!i).join("/"))||"."},e.normalize=function(t){var o=e.isAbsolute(t),s="/"===i(t,-1);return(t=n(r(t.split("/"),(function(t){return!!t})),!o).join("/"))||o||(t="."),t&&s&&(t+="/"),(o?"/":"")+t},e.isAbsolute=function(t){return"/"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(r(t,(function(t,e){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t})).join("/"))},e.relative=function(t,n){function r(t){for(var e=0;e<t.length&&""===t[e];e++);for(var n=t.length-1;n>=0&&""===t[n];n--);return e>n?[]:t.slice(e,n-e+1)}t=e.resolve(t).substr(1),n=e.resolve(n).substr(1);for(var i=r(t.split("/")),o=r(n.split("/")),s=Math.min(i.length,o.length),a=s,c=0;c<s;c++)if(i[c]!==o[c]){a=c;break}var l=[];for(c=a;c<i.length;c++)l.push("..");return(l=l.concat(o.slice(a))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(t){if("string"!=typeof t&&(t+=""),0===t.length)return".";for(var e=t.charCodeAt(0),n=47===e,r=-1,i=!0,o=t.length-1;o>=1;--o)if(47===(e=t.charCodeAt(o))){if(!i){r=o;break}}else i=!1;return-1===r?n?"/":".":n&&1===r?"/":t.slice(0,r)},e.basename=function(t,e){var n=function(t){"string"!=typeof t&&(t+="");var e,n=0,r=-1,i=!0;for(e=t.length-1;e>=0;--e)if(47===t.charCodeAt(e)){if(!i){n=e+1;break}}else-1===r&&(i=!1,r=e+1);return-1===r?"":t.slice(n,r)}(t);return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},e.extname=function(t){"string"!=typeof t&&(t+="");for(var e=-1,n=0,r=-1,i=!0,o=0,s=t.length-1;s>=0;--s){var a=t.charCodeAt(s);if(47!==a)-1===r&&(i=!1,r=s+1),46===a?-1===e?e=s:1!==o&&(o=1):-1!==e&&(o=-1);else if(!i){n=s+1;break}}return-1===e||-1===r||0===o||1===o&&e===r-1&&e===n+1?"":t.slice(e,r)};var i="b"==="ab".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)}}).call(this,n(2))},function(t,e,n){"use strict";n.r(e);var r=n(1),i=n.n(r),o=n(0);const s=0,a=1,c=function(t,e,n,r,i){t[(e*=3)+0]=n,t[e+1]=r,t[e+2]=i},l=function(t,e,n,r,i){this.world=r,i=i||{},this.verticesArray=e,this.colorsArray=n,this.indexArray=t,this.debugDrawMode=i.debugDrawMode||a,this.index=0,this.indexArray&&Atomics.store(this.indexArray,0,this.index),this.enabled=!1,this.debugDrawer=new Ammo.DebugDrawer,this.debugDrawer.drawLine=this.drawLine.bind(this),this.debugDrawer.drawContactPoint=this.drawContactPoint.bind(this),this.debugDrawer.reportErrorWarning=this.reportErrorWarning.bind(this),this.debugDrawer.draw3dText=this.draw3dText.bind(this),this.debugDrawer.setDebugMode=this.setDebugMode.bind(this),this.debugDrawer.getDebugMode=this.getDebugMode.bind(this),this.debugDrawer.enable=this.enable.bind(this),this.debugDrawer.disable=this.disable.bind(this),this.debugDrawer.update=this.update.bind(this),this.world.setDebugDrawer(this.debugDrawer)};(l.prototype=function(){return this.debugDrawer}).enable=function(){this.enabled=!0},l.prototype.disable=function(){this.enabled=!1},l.prototype.update=function(){this.enabled&&(this.indexArray?0===Atomics.load(this.indexArray,0)&&(this.index=0,this.world.debugDrawWorld(),Atomics.store(this.indexArray,0,this.index)):(this.index=0,this.world.debugDrawWorld()))},l.prototype.drawLine=function(t,e,n){const r=Ammo.HEAPF32,i=r[(n+0)/4],o=r[(n+4)/4],s=r[(n+8)/4],a=r[(t+0)/4],l=r[(t+4)/4],p=r[(t+8)/4];c(this.verticesArray,this.index,a,l,p),c(this.colorsArray,this.index++,i,o,s);const u=r[(e+0)/4],h=r[(e+4)/4],d=r[(e+8)/4];c(this.verticesArray,this.index,u,h,d),c(this.colorsArray,this.index++,i,o,s)},l.prototype.drawContactPoint=function(t,e,n,r,i){const o=Ammo.HEAPF32,s=o[(i+0)/4],a=o[(i+4)/4],l=o[(i+8)/4],p=o[(t+0)/4],u=o[(t+4)/4],h=o[(t+8)/4];c(this.verticesArray,this.index,p,u,h),c(this.colorsArray,this.index++,s,a,l);const d=o[(e+0)/4]*n,f=o[(e+4)/4]*n,m=o[(e+8)/4]*n;c(this.verticesArray,this.index,p+d,u+f,h+m),c(this.colorsArray,this.index++,s,a,l)},l.prototype.reportErrorWarning=function(t){Ammo.hasOwnProperty("UTF8ToString")?console.warn(Ammo.UTF8ToString(t)):this.warnedOnce||(this.warnedOnce=!0,console.warn("Cannot print warningString, please export UTF8ToString from Ammo.js in make.py"))},l.prototype.draw3dText=function(t,e){console.warn("TODO: draw3dText")},l.prototype.setDebugMode=function(t){this.debugDrawMode=t},l.prototype.getDebugMode=function(){return this.debugDrawMode};const p=function(t){this.collisionConfiguration=null,this.dispatcher=null,this.broadphase=null,this.solver=null,this.physicsWorld=null,this.debugDrawer=null,this.object3Ds=new Map,this.collisions=new Map,this.collisionKeys=[],this.epsilon=t.epsilon||1e-5,this.debugDrawMode=t.debugDrawMode||s,this.maxSubSteps=t.maxSubSteps||4,this.fixedTimeStep=t.fixedTimeStep||1/60,this.collisionConfiguration=new Ammo.btDefaultCollisionConfiguration,this.dispatcher=new Ammo.btCollisionDispatcher(this.collisionConfiguration),this.broadphase=new Ammo.btDbvtBroadphase,this.solver=new Ammo.btSequentialImpulseConstraintSolver,this.physicsWorld=new Ammo.btDiscreteDynamicsWorld(this.dispatcher,this.broadphase,this.solver,this.collisionConfiguration),this.physicsWorld.setForceUpdateAllAabbs(!1);const e=new Ammo.btVector3(0,i.a.GRAVITY,0);t.hasOwnProperty("gravity")&&e.setValue(t.gravity.x,t.gravity.y,t.gravity.z),this.physicsWorld.setGravity(e),Ammo.destroy(e),this.physicsWorld.getSolverInfo().set_m_numIterations(t.solverIterations||10)};p.prototype.isDebugEnabled=function(){return this.debugDrawMode!==s},p.prototype.addBody=function(t,e,n,r){this.physicsWorld.addRigidBody(t,n,r),this.object3Ds.set(Ammo.getPointer(t),e)},p.prototype.removeBody=function(t){this.physicsWorld.removeRigidBody(t);const e=Ammo.getPointer(t);this.object3Ds.delete(e),this.collisions.delete(e);const n=this.collisionKeys.indexOf(e);-1!==n&&this.collisionKeys.splice(n,1)},p.prototype.updateBody=function(t){this.object3Ds.has(Ammo.getPointer(t))&&this.physicsWorld.updateSingleAabb(t)},p.prototype.step=function(t){this.physicsWorld.stepSimulation(t,this.maxSubSteps,this.fixedTimeStep);for(let t=0;t<this.collisionKeys.length;t++)this.collisions.get(this.collisionKeys[t]).length=0;const e=this.dispatcher.getNumManifolds();for(let t=0;t<e;t++){const e=this.dispatcher.getManifoldByIndexInternal(t),n=e.getNumContacts(),r=Ammo.getPointer(e.getBody0()),i=Ammo.getPointer(e.getBody1());for(let t=0;t<n;t++){if(e.getContactPoint(t).getDistance()<=this.epsilon){this.collisions.has(r)||(this.collisions.set(r,[]),this.collisionKeys.push(r)),-1===this.collisions.get(r).indexOf(i)&&this.collisions.get(r).push(i),this.collisions.has(i)||(this.collisions.set(i,[]),this.collisionKeys.push(i)),-1===this.collisions.get(i).indexOf(r)&&this.collisions.get(i).push(r);break}}}this.debugDrawer&&this.debugDrawer.update()},p.prototype.destroy=function(){Ammo.destroy(this.collisionConfiguration),Ammo.destroy(this.dispatcher),Ammo.destroy(this.broadphase),Ammo.destroy(this.solver),Ammo.destroy(this.physicsWorld),Ammo.destroy(this.debugDrawer)},p.prototype.getDebugDrawer=function(t,e,n,r){return this.debugDrawer||((r=r||{}).debugDrawMode=r.debugDrawMode||this.debugDrawMode,this.debugDrawer=new l(t,e,n,this.physicsWorld,r)),this.debugDrawer};var u=p;const h=i.a.ACTIVATION_STATE,d=i.a.COLLISION_FLAG,f=i.a.SHAPE,m=i.a.TYPE,_=(i.a.FIT,[h.ACTIVE_TAG,h.ISLAND_SLEEPING,h.WANTS_DEACTIVATION,h.DISABLE_DEACTIVATION,h.DISABLE_SIMULATION]),y=0,g=1;function b(t,e,n){return Math.abs(e.x-n.x)<t&&Math.abs(e.y-n.y)<t&&Math.abs(e.z-n.z)<t}function v(t,e,n){return Math.abs(e.x()-n.x())<t&&Math.abs(e.y()-n.y())<t&&Math.abs(e.z()-n.z())<t}function x(t,e,n){this.loadedEvent=t.loadedEvent?t.loadedEvent:"",this.mass=t.hasOwnProperty("mass")?t.mass:1;const r=n.physicsWorld.getGravity();this.gravity=new Ammo.btVector3(r.x(),r.y(),r.z()),t.gravity&&this.gravity.setValue(t.gravity.x,t.gravity.y,t.gravity.z),this.linearDamping=t.hasOwnProperty("linearDamping")?t.linearDamping:.01,this.angularDamping=t.hasOwnProperty("angularDamping")?t.angularDamping:.01,this.linearSleepingThreshold=t.hasOwnProperty("linearSleepingThreshold")?t.linearSleepingThreshold:1.6,this.angularSleepingThreshold=t.hasOwnProperty("angularSleepingThreshold")?t.angularSleepingThreshold:2.5,this.angularFactor=new o.Vector3(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.linearFactor=new o.Vector3(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.activationState=t.activationState&&-1!==_.indexOf(t.activationState)?t.activationState:h.ACTIVE_TAG,this.type=t.type?t.type:m.DYNAMIC,this.emitCollisionEvents=!!t.hasOwnProperty("emitCollisionEvents")&&t.emitCollisionEvents,this.disableCollision=!!t.hasOwnProperty("disableCollision")&&t.disableCollision,this.collisionFilterGroup=t.hasOwnProperty("collisionFilterGroup")?t.collisionFilterGroup:1,this.collisionFilterMask=t.hasOwnProperty("collisionFilterMask")?t.collisionFilterMask:1,this.scaleAutoUpdate=!t.hasOwnProperty("scaleAutoUpdate")||t.scaleAutoUpdate,this.matrix=e,this.world=n,this.shapes=[],this._initBody()}x.prototype._initBody=function(){const t=new o.Vector3,e=new o.Quaternion,n=new o.Vector3;return function(){this.localScaling=new Ammo.btVector3,this.matrix.decompose(t,e,n),this.localScaling.setValue(n.x,n.y,n.z),this.prevScale=new o.Vector3(1,1,1),this.prevNumChildShapes=0,this.msTransform=new Ammo.btTransform,this.msTransform.setIdentity(),this.rotation=new Ammo.btQuaternion(e.x,e.y,e.z,e.w),this.msTransform.getOrigin().setValue(t.x,t.y,t.z),this.msTransform.setRotation(this.rotation),this.motionState=new Ammo.btDefaultMotionState(this.msTransform),this.localInertia=new Ammo.btVector3(0,0,0),this.compoundShape=new Ammo.btCompoundShape(!0),this.compoundShape.setLocalScaling(this.localScaling),this.rbInfo=new Ammo.btRigidBodyConstructionInfo(this.mass,this.motionState,this.compoundShape,this.localInertia),this.physicsBody=new Ammo.btRigidBody(this.rbInfo),this.physicsBody.setActivationState(_.indexOf(this.activationState)+1),this.physicsBody.setSleepingThresholds(this.linearSleepingThreshold,this.angularSleepingThreshold),this.physicsBody.setDamping(this.linearDamping,this.angularDamping);const r=new Ammo.btVector3(this.angularFactor.x,this.angularFactor.y,this.angularFactor.z);this.physicsBody.setAngularFactor(r),Ammo.destroy(r);const i=new Ammo.btVector3(this.linearFactor.x,this.linearFactor.y,this.linearFactor.z);this.physicsBody.setLinearFactor(i),Ammo.destroy(i),v(.001,this.gravity,this.world.physicsWorld.getGravity())||(this.physicsBody.setGravity(this.gravity),this.physicsBody.setFlags(g)),this.updateCollisionFlags(),this.world.addBody(this.physicsBody,this.matrix,this.collisionFilterGroup,this.collisionFilterMask),this.emitCollisionEvents&&this.world.addEventListener(this.physicsBody)}}(),x.prototype.updateShapes=function(){const t=[f.HULL,f.HACD,f.VHACD],e=new o.Vector3,n=new o.Quaternion,r=new o.Vector3;return function(){let i=!1;if(this.matrix.decompose(e,n,r),this.scaleAutoUpdate&&this.prevScale&&!b(.001,r,this.prevScale)&&(this.prevScale.copy(r),i=!0,this.localScaling.setValue(this.prevScale.x,this.prevScale.y,this.prevScale.z),this.compoundShape.setLocalScaling(this.localScaling)),this.shapesChanged&&(this.shapesChanged=!1,i=!0,this.type===m.DYNAMIC&&this.updateMass(),this.world.updateBody(this.physicsBody)),this.world.isDebugEnabled()&&(i||!this.polyHedralFeaturesInitialized)){for(let e=0;e<this.shapes.length;e++){const n=this.shapes[e];-1!==t.indexOf(n.type)&&n.initializePolyhedralFeatures(0)}this.polyHedralFeaturesInitialized=!0}}}(),x.prototype.update=function(t){if((t.type&&t.type!==this.type||t.disableCollision&&t.disableCollision!==this.disableCollision)&&(t.type&&(this.type=t.type),t.disableCollision&&(this.disableCollision=t.disableCollision),this.updateCollisionFlags()),t.activationState&&t.activationState!==this.activationState&&(this.activationState=t.activationState,this.physicsBody.forceActivationState(_.indexOf(this.activationState)+1),this.activationState===h.ACTIVE_TAG&&this.physicsBody.activate(!0)),t.collisionFilterGroup&&t.collisionFilterGroup!==this.collisionFilterGroup||t.collisionFilterMask&&t.collisionFilterMask!==this.collisionFilterMask){t.collisionFilterGroup&&(this.collisionFilterGroup=t.collisionFilterGroup),t.collisionFilterMask&&(this.collisionFilterMask=t.collisionFilterMask);const e=this.physicsBody.getBroadphaseProxy();e.set_m_collisionFilterGroup(this.collisionFilterGroup),e.set_m_collisionFilterMask(this.collisionFilterMask),this.world.broadphase.getOverlappingPairCache().removeOverlappingPairsContainingProxy(e,this.world.dispatcher)}if((t.linearDamping&&t.linearDamping!=this.linearDamping||t.angularDamping&&t.angularDamping!=this.angularDamping)&&(t.linearDamping&&(this.linearDamping=t.linearDamping),t.angularDamping&&(this.angularDamping=t.angularDamping),this.physicsBody.setDamping(this.linearDamping,this.angularDamping)),t.gravity&&(this.gravity.setValue(t.gravity.x,t.gravity.y,t.gravity.z),v(.001,this.gravity,this.physicsBody.getGravity())||(v(.001,this.gravity,this.world.physicsWorld.getGravity())?this.physicsBody.setFlags(y):this.physicsBody.setFlags(g),this.physicsBody.setGravity(this.gravity))),(t.linearSleepingThreshold&&t.linearSleepingThreshold!=this.linearSleepingThreshold||t.angularSleepingThreshold&&t.angularSleepingThreshold!=this.angularSleepingThreshold)&&(t.linearSleepingThreshold&&(this.linearSleepingThreshold=t.linearSleepingThreshold),t.angularSleepingThreshold&&(this.angularSleepingThreshold=t.angularSleepingThreshold),this.physicsBody.setSleepingThresholds(this.linearSleepingThreshold,this.angularSleepingThreshold)),t.angularFactor&&!b(.001,t.angularFactor,this.angularFactor)){this.angularFactor.copy(t.angularFactor);const e=new Ammo.btVector3(this.angularFactor.x,this.angularFactor.y,this.angularFactor.z);this.physicsBody.setAngularFactor(e),Ammo.destroy(e)}},x.prototype.destroy=function(){this.triMesh&&Ammo.destroy(this.triMesh),this.localScaling&&Ammo.destroy(this.localScaling);for(let t=0;t<this.shapes.length;t++)this.compoundShape.removeChildShape([t]);this.compoundShape&&Ammo.destroy(this.compoundShape),this.world.removeBody(this.physicsBody),Ammo.destroy(this.physicsBody),delete this.physicsBody,Ammo.destroy(this.rbInfo),Ammo.destroy(this.msTransform),Ammo.destroy(this.motionState),Ammo.destroy(this.localInertia),Ammo.destroy(this.rotation),Ammo.destroy(this.gravity)},x.prototype.syncToPhysics=function(){const t=new o.Vector3,e=new o.Quaternion,n=new o.Vector3,r=new o.Vector3,i=new o.Vector3;return function(o){if(!this.physicsBody)return;this.motionState.getWorldTransform(this.msTransform),this.matrix.decompose(t,e,n);const s=this.msTransform.getOrigin();i.set(s.x(),s.y(),s.z());const a=this.msTransform.getRotation();r.set(a.x(),a.y(),a.z(),a.w()),b(.001,t,i)&&function(t,e,n){return Math.abs(e.x-n.x)<t&&Math.abs(e.y-n.y)<t&&Math.abs(e.z-n.z)<t&&Math.abs(e.w-n.w)<t||Math.abs(e.x+n.x)<t&&Math.abs(e.y+n.y)<t&&Math.abs(e.z+n.z)<t&&Math.abs(e.w+n.w)<t}(.001,e,r)||(this.physicsBody.isActive()||this.physicsBody.activate(!0),this.msTransform.getOrigin().setValue(t.x,t.y,t.z),this.rotation.setValue(e.x,e.y,e.z,e.w),this.msTransform.setRotation(this.rotation),this.motionState.setWorldTransform(this.msTransform),(this.type===m.STATIC||o)&&this.physicsBody.setCenterOfMassTransform(this.msTransform))}}(),x.prototype.syncFromPhysics=function(){const t=new o.Vector3,e=new o.Quaternion,n=new o.Vector3;return function(){this.motionState.getWorldTransform(this.msTransform);const r=this.msTransform.getOrigin(),i=this.msTransform.getRotation();this.physicsBody&&(this.matrix.decompose(t,e,n),t.set(r.x(),r.y(),r.z()),e.set(i.x(),i.y(),i.z(),i.w()),this.matrix.compose(t,e,n))}}(),x.prototype.addShape=function(t){t.type!==f.MESH||this.type===m.STATIC?(this.shapes.push(t),this.compoundShape.addChildShape(t.localTransform,t),this.shapesChanged=!0,this.updateShapes()):console.warn("non-static mesh colliders not supported")},x.prototype.removeShape=function(t){const e=this.shapes.indexOf(t);this.compoundShape&&-1!==e&&(this.compoundShape.removeChildShape(this.shapes[e]),this.shapesChanged=!0,this.shapes.splice(e,1),this.updateShapes())},x.prototype.updateMass=function(){const t=this.type===m.STATIC?0:this.mass;this.compoundShape.calculateLocalInertia(t,this.localInertia),this.physicsBody.setMassProps(t,this.localInertia),this.physicsBody.updateInertiaTensor()},x.prototype.updateCollisionFlags=function(){let t=this.disableCollision?4:0;switch(this.type){case m.STATIC:t|=d.STATIC_OBJECT;break;case m.KINEMATIC:t|=d.KINEMATIC_OBJECT;break;default:this.physicsBody.applyGravity()}this.physicsBody.setCollisionFlags(t),this.updateMass(),this.world.updateBody(this.physicsBody)},x.prototype.getVelocity=function(){return this.physicsBody.getLinearVelocity()};var w=x;const S=i.a.CONSTRAINT,M=[S.LOCK,S.FIXED,S.SPRING,S.SLIDER,S.HINGE,S.CONE_TWIST,S.POINT_TO_POINT],T=function(t,e,n,r){this.physicsConstraint,this.world=r;const i=t.type&&M.indexOf(t.type)?t.type:S.LOCK,o=e.physicsBody.getCenterOfMassTransform().inverse().op_mul(n.physicsBody.getWorldTransform()),s=new Ammo.btTransform;switch(s.setIdentity(),i){case S.LOCK:{this.physicsConstraint=new Ammo.btGeneric6DofConstraint(e.physicsBody,n.physicsBody,o,s,!0);const t=new Ammo.btVector3(0,0,0);this.physicsConstraint.setLinearLowerLimit(t),this.physicsConstraint.setLinearUpperLimit(t),this.physicsConstraint.setAngularLowerLimit(t),this.physicsConstraint.setAngularUpperLimit(t),Ammo.destroy(t);break}case S.FIXED:o.setRotation(e.physicsBody.getWorldTransform().getRotation()),s.setRotation(n.physicsBody.getWorldTransform().getRotation()),this.physicsConstraint=new Ammo.btFixedConstraint(e.physicsBody,n.physicsBody,o,s);break;case S.SPRING:this.physicsConstraint=new Ammo.btGeneric6DofSpringConstraint(e.physicsBody,n.physicsBody,o,s,!0);break;case S.SLIDER:this.physicsConstraint=new Ammo.btSliderConstraint(e.physicsBody,n.physicsBody,o,s,!0),this.physicsConstraint.setLowerLinLimit(-1),this.physicsConstraint.setUpperLinLimit(1);break;case S.HINGE:{if(!t.pivot)throw new Error("pivot must be defined for type: hinge");if(!t.targetPivot)throw new Error("targetPivot must be defined for type: hinge");if(!t.axis)throw new Error("axis must be defined for type: hinge");if(!t.targetAxis)throw new Error("targetAxis must be defined for type: hinge");const r=new Ammo.btVector3(t.pivot.x,t.pivot.y,t.pivot.z),i=new Ammo.btVector3(t.targetPivot.x,t.targetPivot.y,t.targetPivot.z),o=new Ammo.btVector3(t.axis.x,t.axis.y,t.axis.z),s=new Ammo.btVector3(t.targetAxis.x,t.targetAxis.y,t.targetAxis.z);this.physicsConstraint=new Ammo.btHingeConstraint(e.physicsBody,n.physicsBody,r,i,o,s,!0),Ammo.destroy(r),Ammo.destroy(i),Ammo.destroy(o),Ammo.destroy(s);break}case S.CONE_TWIST:{if(!t.pivot)throw new Error("pivot must be defined for type: cone-twist");if(!t.targetPivot)throw new Error("targetPivot must be defined for type: cone-twist");const n=new Ammo.btTransform;n.setIdentity(),n.getOrigin().setValue(t.targetPivot.x,t.targetPivot.y,t.targetPivot.z),this.physicsConstraint=new Ammo.btConeTwistConstraint(e.physicsBody,n),Ammo.destroy(n);break}case S.POINT_TO_POINT:{if(!t.pivot)throw new Error("pivot must be defined for type: point-to-point");if(!t.targetPivot)throw new Error("targetPivot must be defined for type: point-to-point");const r=new Ammo.btVector3(t.pivot.x,t.pivot.y,t.pivot.z),i=new Ammo.btVector3(t.targetPivot.x,t.targetPivot.y,t.targetPivot.z);this.physicsConstraint=new Ammo.btPoint2PointConstraint(e.physicsBody,n.physicsBody,r,i),Ammo.destroy(r),Ammo.destroy(i);break}}Ammo.destroy(s),this.world.physicsWorld.addConstraint(this.physicsConstraint,!1)};T.prototype.destroy=function(){this.physicsConstraint&&(this.world.physicsWorld.removeConstraint(this.physicsConstraint),Ammo.destroy(this.physicsConstraint),this.physicsConstraint=null)};var C=T,z=n(3),A=n(4),E=n.n(A),L=n.p+"dist/ammo.wasm-8640fe8d5bf91d2e84ea56e0c1307ba9.wasm";const P=i.a.MESSAGE_TYPES,R=i.a.TYPE,D=i.a.SHAPE,I=i.a.CONSTRAINT,O=i.a.BUFFER_CONFIG,j=i.a.BUFFER_STATE;const B=[],F={},N={},H={},G={},U={},k={},V=[];let W,q,Y,X,Z,J,Q,K,$,tt=0,et=0,nt=!1;const rt=()=>{if(setTimeout(rt,W),nt?X&&Atomics.load(X,0)!==j.READY:J&&0!==J.buffer.byteLength){const t=performance.now(),e=t-K;for(Y.step(e/1e3),tt=performance.now()-t,K=t;V.length>0;){const t=V.shift();switch(t.type){case P.ADD_BODY:ot(t);break;case P.UPDATE_BODY:st(t);break;case P.REMOVE_BODY:at(t);break;case P.ADD_SHAPES:lt(t);break;case P.REMOVE_SHAPES:const e=t.bodyUuid,n=t.shapesUuid;if(F[e]&&N[n])for(let t=0;t<N[n].length;t++){const r=N[n][t];F[e].removeShape(r)}break;case P.ADD_CONSTRAINT:pt(t);break;case P.REMOVE_CONSTRAINT:const r=t.constraintId;H[r]&&(H[r].destroy(),delete H[r]);break;case P.ENABLE_DEBUG:const i=t.enable;Y.debugDrawer||it(t.debugSharedArrayBuffer,Y),Y.debugDrawer&&(i?Y.debugDrawer.enable():Y.debugDrawer.disable());break;case P.RESET_DYNAMIC_BODY:ut(t);break;case P.ACTIVATE_BODY:ht(t);break;case P.APPLY_FORCE:dt(t);break;case P.APPLY_IMPULSE:ft(t);break;case P.SET_LINEAR_VELOCITY:mt(t);break;case P.SET_ANGULAR_VELOCITY:_t(t);break;default:console.error("Unknown message in queue",t)}}for(let t=0;t<B.length;t++){const e=B[t],n=F[e],r=U[e],i=G[e];i.fromArray(J,r*O.BODY_DATA_SIZE+O.MATRIX_OFFSET),n.updateShapes(),n.type===R.DYNAMIC?n.syncFromPhysics():n.syncToPhysics(!1),J.set(i.elements,r*O.BODY_DATA_SIZE+O.MATRIX_OFFSET),J[r*O.BODY_DATA_SIZE+O.LINEAR_VELOCITY_OFFSET]=n.physicsBody.getLinearVelocity().length(),J[r*O.BODY_DATA_SIZE+O.ANGULAR_VELOCITY_OFFSET]=n.physicsBody.getAngularVelocity().length();const o=$(n.physicsBody),s=Y.collisions.get(o);for(let t=0;t<O.BODY_DATA_SIZE-O.COLLISIONS_OFFSET;t++)if(!s||t>=s.length)Q[r*O.BODY_DATA_SIZE+O.COLLISIONS_OFFSET+t]=-1;else{const e=s[t];k[e]&&(Q[r*O.BODY_DATA_SIZE+O.COLLISIONS_OFFSET+t]=k[e])}}nt?(Z[1]=tt,Atomics.store(X,0,j.READY)):postMessage({type:P.TRANSFER_DATA,objectMatricesFloatArray:J,stepDuration:tt},[J.buffer])}};function it(t,e){const n=new Uint32Array(t,0,1),r=new Float32Array(t,4,3e6),i=new Float32Array(t,4+3e6,3e6);e.getDebugDrawer(n,r,i)}function ot({uuid:t,matrix:e,options:n}){if(-1!==et){const r=q[et];q[et]=-1,U[t]=et,B.push(t);const i=new o.Matrix4;i.fromArray(e),G[t]=i,J.set(i.elements,et*O.BODY_DATA_SIZE),F[t]=new w(n||{},i,Y);const s=$(F[t].physicsBody);k[s]=et,postMessage({type:P.BODY_READY,uuid:t,index:et}),et=r}}function st({uuid:t,options:e}){F[t]&&(F[t].update(e),F[t].physicsBody.activate(!0))}function at({uuid:t}){delete k[$(F[t].physicsBody)],F[t].destroy(),delete F[t],delete G[t],delete N[t];const e=U[t];q[e]=et,et=e,delete U[t],B.splice(B.indexOf(t),1)}const ct=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function lt({bodyUuid:t,shapesUuid:e,vertices:n,matrices:r,indexes:i,matrixWorld:o,options:s}){if(!F[t])return;o||(o=ct);const a=Object(z.createCollisionShapes)(n,r,i,o,s||{type:D.BOX});for(let e=0;e<a.length;e++){const n=a[e];F[t].addShape(n)}N[e]=a}function pt({constraintId:t,bodyUuid:e,targetUuid:n,options:r}){if(F[e]&&F[n]){(r=r||{}).hasOwnProperty("type")||(r.type=I.LOCK);const i=new C(r,F[e],F[n],Y);H[t]=i}}function ut({uuid:t}){if(F[t]){const e=F[t],n=U[t];G[t].fromArray(J,n*O.BODY_DATA_SIZE),e.syncToPhysics(!0),e.physicsBody.getLinearVelocity().setValue(0,0,0),e.physicsBody.getAngularVelocity().setValue(0,0,0)}}function ht({uuid:t}){F[t]&&F[t].physicsBody.activate()}function dt({uuid:t,vec:e}){F[t]&&F[t].physicsBody.applyForce(e)}function ft({uuid:t,vec:e}){F[t]&&F[t].physicsBody.applyCentralImpulse(e)}function mt({uuid:t,vec:e}){F[t]&&F[t].physicsBody.getLinearVelocity().setValue(e.x,e.y,e.z)}function _t({uuid:t,vec:e}){F[t]&&F[t].physicsBody.getAngularVelocity().setValue(e.x,e.y,e.z)}onmessage=async t=>{if(t.data.type===P.INIT){(e=t.data.wasmUrl,E.a.bind(void 0,{locateFile:t=>t.endsWith(".wasm")?e||new URL(L,location.origin).href:t}))().then(e=>{$=e.getPointer;const n=t.data.maxBodies?t.data.maxBodies:O.MAX_BODIES;q=new Int32Array(n);for(let t=0;t<n-1;t++)q[t]=t+1;var r;q[n-1]=-1,t.data.sharedArrayBuffer?((t,e)=>{nt=!0,X=new Int32Array(t,0,O.HEADER_LENGTH),Z=new Float32Array(t,0,O.HEADER_LENGTH),J=new Float32Array(t,4*O.HEADER_LENGTH,O.BODY_DATA_SIZE*e),Q=new Int32Array(t,4*O.HEADER_LENGTH,O.BODY_DATA_SIZE*e)})(t.data.sharedArrayBuffer,n):t.data.arrayBuffer?(r=t.data.arrayBuffer,J=new Float32Array(r),Q=new Int32Array(r)):console.error("A valid ArrayBuffer or SharedArrayBuffer is required."),Y=new u(t.data.worldConfig||{}),K=performance.now(),W=void 0===t.data.simulationRate?i.a.SIMULATION_RATE:t.data.simulationRate,self.setTimeout(rt,W),postMessage({type:P.READY})})}else t.data.type===P.TRANSFER_DATA?(void 0!==t.data.simulationRate&&(W=t.data.simulationRate),J=t.data.objectMatricesFloatArray,Q=new Int32Array(J.buffer)):V.push(t.data);var e}}]);\n//# sourceMappingURL=ammo.worker-e3020893914dffc5c906.js.map',"/ammo.worker-e3020893914dffc5c906.js")}},function(t,e,n){"use strict";(function(t){const n=e.TYPE={BOX:"box",CYLINDER:"cylinder",SPHERE:"sphere",CAPSULE:"capsule",CONE:"cone",HULL:"hull",HACD:"hacd",VHACD:"vhacd",MESH:"mesh",HEIGHTFIELD:"heightfield"},r=e.FIT={ALL:"all",MANUAL:"manual"},i=(e.HEIGHTFIELD_DATA_TYPE={short:"short",float:"float"},t.Object3D.prototype.hasOwnProperty("updateMatrices"));function s(e){e.fit=e.hasOwnProperty("fit")?e.fit:r.ALL,e.type=e.type||n.HULL,e.minHalfExtent=e.hasOwnProperty("minHalfExtent")?e.minHalfExtent:0,e.maxHalfExtent=e.hasOwnProperty("maxHalfExtent")?e.maxHalfExtent:Number.POSITIVE_INFINITY,e.cylinderAxis=e.cylinderAxis||"y",e.margin=e.hasOwnProperty("margin")?e.margin:.01,e.includeInvisible=!!e.hasOwnProperty("includeInvisible")&&e.includeInvisible,e.offset||(e.offset=new t.Vector3),e.orientation||(e.orientation=new t.Quaternion)}e.createCollisionShapes=function(t,e){switch(e.type){case n.BOX:return[this.createBoxShape(t,e)];case n.CYLINDER:return[this.createCylinderShape(t,e)];case n.CAPSULE:return[this.createCapsuleShape(t,e)];case n.CONE:return[this.createConeShape(t,e)];case n.SPHERE:return[this.createSphereShape(t,e)];case n.HULL:return[this.createHullShape(t,e)];case n.HACD:return this.createHACDShapes(t,e);case n.VHACD:return this.createVHACDShapes(t,e);case n.MESH:return[this.createTriMeshShape(t,e)];case n.HEIGHTFIELD:return[this.createHeightfieldTerrainShape(t,e)];default:return console.warn(e.type+" is not currently supported"),[]}},e.createBoxShape=function(t,e){e.type=n.BOX,s(e),e.fit===r.ALL&&(e.halfExtents=u(t,p(t,e),e.minHalfExtent,e.maxHalfExtent));const i=new Ammo.btVector3(e.halfExtents.x,e.halfExtents.y,e.halfExtents.z),a=new Ammo.btBoxShape(i);return Ammo.destroy(i),o(a,e,l(t,e)),a},e.createCylinderShape=function(t,e){e.type=n.CYLINDER,s(e),e.fit===r.ALL&&(e.halfExtents=u(t,p(t,e),e.minHalfExtent,e.maxHalfExtent));const i=new Ammo.btVector3(e.halfExtents.x,e.halfExtents.y,e.halfExtents.z),a=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btCylinderShape(i);case"x":return new Ammo.btCylinderShapeX(i);case"z":return new Ammo.btCylinderShapeZ(i)}return null})();return Ammo.destroy(i),o(a,e,l(t,e)),a},e.createCapsuleShape=function(t,e){e.type=n.CAPSULE,s(e),e.fit===r.ALL&&(e.halfExtents=u(t,p(t,e),e.minHalfExtent,e.maxHalfExtent));const{x:i,y:a,z:c}=e.halfExtents,h=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btCapsuleShape(Math.max(i,c),2*a);case"x":return new Ammo.btCapsuleShapeX(Math.max(a,c),2*i);case"z":return new Ammo.btCapsuleShapeZ(Math.max(i,a),2*c)}return null})();return o(h,e,l(t,e)),h},e.createConeShape=function(t,e){e.type=n.CONE,s(e),e.fit===r.ALL&&(e.halfExtents=u(t,p(t,e),e.minHalfExtent,e.maxHalfExtent));const{x:i,y:a,z:c}=e.halfExtents,h=(()=>{switch(e.cylinderAxis){case"y":return new Ammo.btConeShape(Math.max(i,c),2*a);case"x":return new Ammo.btConeShapeX(Math.max(a,c),2*i);case"z":return new Ammo.btConeShapeZ(Math.max(i,a),2*c)}return null})();return o(h,e,l(t,e)),h},e.createSphereShape=function(t,e){let i;e.type=n.SPHERE,s(e),i=e.fit!==r.MANUAL||isNaN(e.sphereRadius)?c(t,e,p(t,e)):e.sphereRadius;const a=new Ammo.btSphereShape(i);return o(a,e,l(t,e)),a},e.createHullShape=function(){const e=new t.Vector3,i=new t.Vector3;return function(t,c){if(c.type=n.HULL,s(c),c.fit===r.MANUAL)return console.warn("cannot use fit: manual with type: hull"),null;const u=p(t,c),h=new Ammo.btVector3,d=new Ammo.btConvexHullShape;d.setMargin(c.margin),i.addVectors(u.max,u.min).multiplyScalar(.5);let m=0;a(t,c,t=>{m+=t.attributes.position.array.length/3});const f=c.hullMaxVertices||1e5;m>f&&console.warn(`too many vertices for hull shape; sampling ~${f} from ~${m} vertices`);const g=Math.min(1,f/m);a(t,c,(t,n)=>{const r=t.attributes.position.array;for(let t=0;t<r.length;t+=3)Math.random()<=g&&(e.set(r[t],r[t+1],r[t+2]).applyMatrix4(n).sub(i),h.setValue(e.x,e.y,e.z),d.addPoint(h,t===r.length-3))});let _=d;if(d.getNumVertices()>=100){const t=new Ammo.btShapeHull(d);t.buildHull(c.margin),Ammo.destroy(d),_=new Ammo.btConvexHullShape(Ammo.getPointer(t.getVertexPointer()),t.numVertices()),Ammo.destroy(t)}return Ammo.destroy(h),o(_,c,l(t,c)),_}}(),e.createHACDShapes=function(){const e=new t.Vector3,i=new t.Vector3;return function(t,c){if(c.type=n.HACD,s(c),c.fit===r.MANUAL)return console.warn("cannot use fit: manual with type: hacd"),[];if(!Ammo.hasOwnProperty("HACD"))return console.warn("HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version."),[];const u=p(t),h=l(t,c);let d=0,m=0;i.addVectors(u.max,u.min).multiplyScalar(.5),a(t,c,t=>{d+=t.attributes.position.array.length/3,t.index?m+=t.index.array.length/3:m+=t.attributes.position.array.length/9});const f=new Ammo.HACD;c.hasOwnProperty("compacityWeight")&&f.SetCompacityWeight(c.compacityWeight),c.hasOwnProperty("volumeWeight")&&f.SetVolumeWeight(c.volumeWeight),c.hasOwnProperty("nClusters")&&f.SetNClusters(c.nClusters),c.hasOwnProperty("nVerticesPerCH")&&f.SetNVerticesPerCH(c.nVerticesPerCH),c.hasOwnProperty("concavity")&&f.SetConcavity(c.concavity);const g=Ammo._malloc(3*d*8),_=Ammo._malloc(3*m*4);f.SetPoints(g),f.SetTriangles(_),f.SetNPoints(d),f.SetNTriangles(m);const y=g/8,v=_/4;a(t,c,(t,n)=>{const r=t.attributes.position.array,s=t.index?t.index.array:null;for(let t=0;t<r.length;t+=3)e.set(r[t+0],r[t+1],r[t+2]).applyMatrix4(n).sub(i),Ammo.HEAPF64[y+t+0]=e.x,Ammo.HEAPF64[y+t+1]=e.y,Ammo.HEAPF64[y+t+2]=e.z;if(s)for(let t=0;t<s.length;t++)Ammo.HEAP32[v+t]=s[t];else for(let t=0;t<r.length/3;t++)Ammo.HEAP32[v+t]=t}),f.Compute(),Ammo._free(g),Ammo._free(_);const b=f.GetNClusters(),x=[];for(let t=0;t<b;t++){const e=new Ammo.btConvexHullShape;e.setMargin(c.margin);const n=f.GetNPointsCH(t),r=f.GetNTrianglesCH(t),i=Ammo._malloc(3*n*8),s=Ammo._malloc(3*r*4);f.GetCH(t,i,s);const a=i/8;for(let t=0;t<n;t++){const r=new Ammo.btVector3,i=Ammo.HEAPF64[a+3*t+0],s=Ammo.HEAPF64[a+3*t+1],o=Ammo.HEAPF64[a+3*t+2];r.setValue(i,s,o),e.addPoint(r,t===n-1),Ammo.destroy(r)}o(e,c,h),x.push(e)}return x}}(),e.createVHACDShapes=function(){const e=new t.Vector3,i=new t.Vector3;return function(t,c){if(c.type=n.VHACD,s(c),c.fit===r.MANUAL)return console.warn("cannot use fit: manual with type: vhacd"),[];if(!Ammo.hasOwnProperty("VHACD"))return console.warn("VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version."),[];const u=p(t,c),h=l(t,c);let d=0,m=0;i.addVectors(u.max,u.min).multiplyScalar(.5),a(t,c,t=>{d+=t.attributes.position.count,t.index?m+=t.index.count/3:m+=t.attributes.position.count/3});const f=new Ammo.VHACD,g=new Ammo.Parameters;c.hasOwnProperty("resolution")&&g.set_m_resolution(c.resolution),c.hasOwnProperty("depth")&&g.set_m_depth(c.depth),c.hasOwnProperty("concavity")&&g.set_m_concavity(c.concavity),c.hasOwnProperty("planeDownsampling")&&g.set_m_planeDownsampling(c.planeDownsampling),c.hasOwnProperty("convexhullDownsampling")&&g.set_m_convexhullDownsampling(c.convexhullDownsampling),c.hasOwnProperty("alpha")&&g.set_m_alpha(c.alpha),c.hasOwnProperty("beta")&&g.set_m_beta(c.beta),c.hasOwnProperty("gamma")&&g.set_m_gamma(c.gamma),c.hasOwnProperty("pca")&&g.set_m_pca(c.pca),c.hasOwnProperty("mode")&&g.set_m_mode(c.mode),c.hasOwnProperty("maxNumVerticesPerCH")&&g.set_m_maxNumVerticesPerCH(c.maxNumVerticesPerCH),c.hasOwnProperty("minVolumePerCH")&&g.set_m_minVolumePerCH(c.minVolumePerCH),c.hasOwnProperty("convexhullApproximation")&&g.set_m_convexhullApproximation(c.convexhullApproximation),c.hasOwnProperty("oclAcceleration")&&g.set_m_oclAcceleration(c.oclAcceleration);const _=Ammo._malloc(3*d*8),y=Ammo._malloc(3*m*4);let v=_/8,b=y/4;a(t,c,(t,n)=>{const r=t.attributes.position.array,s=t.index?t.index.array:null;for(let t=0;t<r.length;t+=3)e.set(r[t+0],r[t+1],r[t+2]).applyMatrix4(n).sub(i),Ammo.HEAPF64[v+0]=e.x,Ammo.HEAPF64[v+1]=e.y,Ammo.HEAPF64[v+2]=e.z,v+=3;if(s)for(let t=0;t<s.length;t++)Ammo.HEAP32[b]=s[t],b++;else for(let t=0;t<r.length/3;t++)Ammo.HEAP32[b]=t,b++}),f.Compute(_,3,d,y,3,m,g),Ammo._free(_),Ammo._free(y);const x=f.GetNConvexHulls(),w=[],M=new Ammo.ConvexHull;for(let t=0;t<x;t++){f.GetConvexHull(t,M);const e=M.get_m_nPoints(),n=(M.get_m_points(),new Ammo.btConvexHullShape);n.setMargin(c.margin);for(let t=0;t<e;t++){const r=new Ammo.btVector3,i=M.get_m_points(3*t+0),s=M.get_m_points(3*t+1),o=M.get_m_points(3*t+2);r.setValue(i,s,o),n.addPoint(r,t===e-1),Ammo.destroy(r)}o(n,c,h),w.push(n)}return Ammo.destroy(M),Ammo.destroy(f),w}}(),e.createTriMeshShape=function(){const e=new t.Vector3,i=new t.Vector3,c=new t.Vector3;return function(t,u){if(u.type=n.MESH,s(u),u.fit===r.MANUAL)return console.warn("cannot use fit: manual with type: mesh"),null;const p=l(t,u),h=new Ammo.btVector3,d=new Ammo.btVector3,m=new Ammo.btVector3,f=new Ammo.btTriangleMesh(!0,!1);a(t,u,(t,n)=>{const r=t.attributes.position.array;if(t.index)for(let s=0;s<t.index.count;s+=3){const o=3*t.index.array[s],a=3*t.index.array[s+1],l=3*t.index.array[s+2];e.set(r[o],r[o+1],r[o+2]).applyMatrix4(n),i.set(r[a],r[a+1],r[a+2]).applyMatrix4(n),c.set(r[l],r[l+1],r[l+2]).applyMatrix4(n),h.setValue(e.x,e.y,e.z),d.setValue(i.x,i.y,i.z),m.setValue(c.x,c.y,c.z),f.addTriangle(h,d,m,!1)}else for(let t=0;t<r.length;t+=9)e.set(r[t+0],r[t+1],r[t+2]).applyMatrix4(n),i.set(r[t+3],r[t+4],r[t+5]).applyMatrix4(n),c.set(r[t+6],r[t+7],r[t+8]).applyMatrix4(n),h.setValue(e.x,e.y,e.z),d.setValue(i.x,i.y,i.z),m.setValue(c.x,c.y,c.z),f.addTriangle(h,d,m,!1)});const g=new Ammo.btVector3(p.x,p.y,p.z);f.setScaling(g),Ammo.destroy(g);const _=new Ammo.btBvhTriangleMeshShape(f,!0,!0);return _.resources=[f],Ammo.destroy(h),Ammo.destroy(d),Ammo.destroy(m),o(_,u),_}}(),e.createHeightfieldTerrainShape=function(t,e){if(s(e),e.fit===r.ALL)return console.warn("cannot use fit: all with type: heightfield"),null;const n=e.heightfieldDistance||1,i=e.heightfieldData||[],a=e.heightScale||0,l=e.hasOwnProperty("upAxis")?e.upAxis:1,c=(()=>{switch(e.heightDataType){case"short":return Ammo.PHY_SHORT;case"float":default:return Ammo.PHY_FLOAT}})(),u=!e.hasOwnProperty("flipQuadEdges")||e.flipQuadEdges,p=i.length,h=p>0?i[0].length:0,d=Ammo._malloc(p*h*4),m=d/4;let f=Number.POSITIVE_INFINITY,g=Number.NEGATIVE_INFINITY,_=0;for(let t=0;t<p;t++)for(let e=0;e<h;e++){const n=i[t][e];Ammo.HEAPF32[m+_]=n,_++,f=Math.min(f,n),g=Math.max(g,n)}const y=new Ammo.btHeightfieldTerrainShape(h,p,d,a,f,g,l,c,u),v=new Ammo.btVector3(n,1,n);return y.setLocalScaling(v),Ammo.destroy(v),y.heightfieldData=d,o(y,e),y};const o=function(t,e,n){t.type=e.type,t.setMargin(e.margin),t.destroy=()=>{for(let e of t.resources||[])Ammo.destroy(e);t.heightfieldData&&Ammo._free(t.heightfieldData),Ammo.destroy(t)};const r=new Ammo.btTransform,i=new Ammo.btQuaternion;if(r.setIdentity(),r.getOrigin().setValue(e.offset.x,e.offset.y,e.offset.z),i.setValue(e.orientation.x,e.orientation.y,e.orientation.z,e.orientation.w),r.setRotation(i),Ammo.destroy(i),n){const e=new Ammo.btVector3(n.x,n.y,n.z);t.setLocalScaling(e),Ammo.destroy(e)}t.localTransform=r},a=function(){const e=new t.Matrix4,n=new t.Matrix4,r=new t.BufferGeometry;return function(s,o,a){n.getInverse(s.matrixWorld),s.traverse(l=>{!l.isMesh||t.Sky&&l.__proto__==t.Sky.prototype||!(o.includeInvisible||l.el&&l.el.object3D.visible||l.visible)||(l===s?e.identity():(i&&l.updateMatrices(),e.multiplyMatrices(n,l.matrixWorld)),a(l.geometry.isBufferGeometry?l.geometry:r.fromGeometry(l.geometry),e))})}}(),l=function(e,n){const i=new t.Vector3(1,1,1);return n.fit===r.ALL&&i.setFromMatrixScale(e.matrixWorld),i},c=function(){const e=new t.Vector3,n=new t.Vector3;return function(t,r,i){let s=0,{x:o,y:l,z:c}=i.getCenter(n);return a(t,r,(t,n)=>{const r=t.attributes.position.array;for(let t=0;t<r.length;t+=3){e.set(r[t],r[t+1],r[t+2]).applyMatrix4(n);const i=o-e.x,a=l-e.y,u=c-e.z;s=Math.max(s,i*i+a*a+u*u)}}),Math.sqrt(s)}}(),u=function(e,n,r,i){return(new t.Vector3).subVectors(n.max,n.min).multiplyScalar(.5).clampScalar(r,i)},p=function(){const e=new t.Vector3;return function(n,r){const i=new t.Box3;let s=1/0,o=1/0,l=1/0,c=-1/0,u=-1/0,p=-1/0;return i.min.set(0,0,0),i.max.set(0,0,0),a(n,r,(t,n)=>{const r=t.attributes.position.array;for(let t=0;t<r.length;t+=3)e.set(r[t],r[t+1],r[t+2]).applyMatrix4(n),e.x<s&&(s=e.x),e.y<o&&(o=e.y),e.z<l&&(l=e.z),e.x>c&&(c=e.x),e.y>u&&(u=e.y),e.z>p&&(p=e.z)}),i.min.set(s,o,l),i.max.set(c,u,p),i}}()}).call(this,n(0))},function(t,e,n){"use strict";n.r(e),function(t){n.d(e,"CONSTANTS",(function(){return l})),n.d(e,"AmmoWorker",(function(){return c})),n.d(e,"WorkerHelpers",(function(){return p}));var r=n(1),i=n.n(r),s=n(2),o=n.n(s),a=n(3);const l=i.a,c=o.a,u=l.MESSAGE_TYPES,p=function(e){const n=new t.Matrix4,r=new t.Matrix4;return{addBody:function(t,i,s={}){r.copy(i.parent.matrixWorld).invert(),n.multiplyMatrices(r,i.matrixWorld),e.postMessage({type:u.ADD_BODY,uuid:t,matrix:n.elements,options:s})},updateBody:function(t,n){e.postMessage({type:u.UPDATE_BODY,uuid:t,options:n})},removeBody:function(t){e.postMessage({type:u.REMOVE_BODY,uuid:t})},addShapes:function(t,i,s,o={}){if(s){r.copy(s.parent.matrix).invert(),n.multiplyMatrices(r,s.parent.matrix);const l=[],c=[],p=[];s.updateMatrixWorld(!0),Object(a.iterateGeometries)(s,o,(t,e,n)=>{l.push(t),c.push(e),p.push(n)}),e.postMessage({type:u.ADD_SHAPES,bodyUuid:t,shapesUuid:i,vertices:l,matrices:c,indexes:p,matrixWorld:s.matrixWorld.elements,options:o})}else e.postMessage({type:u.ADD_SHAPES,bodyUuid:t,shapesUuid:i,options:o})},removeShapes:function(t,n){e.postMessage({type:u.REMOVE_SHAPES,bodyUuid:t,shapesUuid:n})},addConstraint:function(t,n,r,i={}){e.postMessage({type:u.ADD_CONSTRAINT,constraintId:t,bodyUuid:n,targetUuid:r,options:i})},removeConstraint:function(t){e.postMessage({type:u.REMOVE_CONSTRAINT,constraintId:t})},enableDebug:function(t,n){e.postMessage({type:u.ENABLE_DEBUG,enable:t,debugSharedArrayBuffer:n})},resetDynamicBody:function(t){e.postMessage({type:u.RESET_DYNAMIC_BODY,uuid:t})},activateBody:function(t){e.postMessage({type:u.ACTIVATE_BODY,uuid:t})},applyForceToBody:function(t,n){e.postMessage({type:u.APPLY_FORCE,uuid:t,vec:n})},applyImpulseToBody:function(t,n){e.postMessage({type:u.APPLY_IMPULSE,uuid:t,vec:n})},setLinearVelocity:function(t,n){e.postMessage({type:u.SET_LINEAR_VELOCITY,uuid:t,vec:n})},setAngularVelocity:function(t,n){e.postMessage({type:u.SET_ANGULAR_VELOCITY,uuid:t,vec:n})}}}}.call(this,n(0))},function(t,e,n){"use strict";var r=window.URL||window.webkitURL;t.exports=function(t,e){try{try{var n;try{(n=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(t),n=n.getBlob()}catch(e){n=new Blob([t])}return new Worker(r.createObjectURL(n))}catch(e){return new Worker("data:application/javascript,"+encodeURIComponent(t))}}catch(t){if(!e)throw Error("Inline worker is not supported");return new Worker(e)}}}]);
//# sourceMappingURL=threeammo.js.map